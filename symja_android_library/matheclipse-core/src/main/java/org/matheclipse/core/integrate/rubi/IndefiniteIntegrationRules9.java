package org.matheclipse.core.integrate.rubi;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IndefiniteIntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IndefiniteIntegrationRules9 { 
  public static IAST RULES = List( 
SetDelayed(Int(Times(Cosh(v_),Power(Tanh(w_),n_DEFAULT),u_DEFAULT),x_Symbol),
    Condition(Plus(Int(Times(u,Sinh(v),Power(Tanh(w),Plus(n,Times(CN1,C1)))),x),Times(CN1,Sinh(Plus(v,Times(CN1,w))),Int(Times(u,Sech(w),Power(Tanh(w),Plus(n,Times(CN1,C1)))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Cosh(v_),Power(Coth(w_),n_DEFAULT),u_DEFAULT),x_Symbol),
    Condition(Plus(Int(Times(u,Sinh(v),Power(Coth(w),Plus(n,Times(CN1,C1)))),x),Times(Cosh(Plus(v,Times(CN1,w))),Int(Times(u,Csch(w),Power(Coth(w),Plus(n,Times(CN1,C1)))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Cosh(v_),Power(Sech(w_),n_DEFAULT),u_DEFAULT),x_Symbol),
    Condition(Plus(Times(Sinh(Plus(v,Times(CN1,w))),Int(Times(u,Tanh(w),Power(Sech(w),Plus(n,Times(CN1,C1)))),x)),Times(Cosh(Plus(v,Times(CN1,w))),Int(Times(u,Power(Sech(w),Plus(n,Times(CN1,C1)))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Cosh(v_),Power(Csch(w_),n_DEFAULT),u_DEFAULT),x_Symbol),
    Condition(Plus(Times(Cosh(Plus(v,Times(CN1,w))),Int(Times(u,Coth(w),Power(Csch(w),Plus(n,Times(CN1,C1)))),x)),Times(Sinh(Plus(v,Times(CN1,w))),Int(Times(u,Power(Csch(w),Plus(n,Times(CN1,C1)))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Times(Log(Cosh(Plus(a,Times(b,x)))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),C2),x_Symbol),
    Condition(Plus(x,Times(CN1,Tanh(Plus(a,Times(b,x))),Power(b,CN1))),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Times(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(CN1,c,Power(Times(c,Tanh(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Dist(Power(c,C2),Int(Power(Times(c,Tanh(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C2))),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Greater(n,C1)))),
SetDelayed(Int(Power(Times(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(Power(Times(c,Tanh(Plus(a,Times(b,x)))),Plus(n,C1)),Power(Times(b,c,Plus(n,C1)),CN1)),Dist(Power(Power(c,C2),CN1),Int(Power(Times(c,Tanh(Plus(a,Times(b,x)))),Plus(n,C2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(n,CN1)))),
SetDelayed(Int(Power(Plus(Times(Tanh(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),C1D2),x_Symbol),
    Condition(Times(Sqrt(C2),b,ArcTanh(Times(Sqrt(Plus(a,Times(b,Tanh(Plus(c,Times(d,x)))))),Power(Times(Sqrt(C2),Rt(a,C2)),CN1))),Power(Times(d,Rt(a,C2)),CN1)),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),PosQ(a)))),
SetDelayed(Int(Power(Plus(Times(Tanh(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),C1D2),x_Symbol),
    Condition(Times(CN1,Sqrt(C2),b,ArcTan(Times(Sqrt(Plus(a,Times(b,Tanh(Plus(c,Times(d,x)))))),Power(Times(Sqrt(C2),Rt(Times(CN1,a),C2)),CN1))),Power(Times(d,Rt(Times(CN1,a),C2)),CN1)),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),NegQ(a)))),
SetDelayed(Int(Power(Plus(Times(Tanh(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(CN1,Power(a,C2),Power(Plus(a,Times(b,Tanh(Plus(c,Times(d,x))))),Plus(n,Times(CN1,C1))),Power(Times(b,d,Plus(n,Times(CN1,C1))),CN1)),Dist(Times(C2,a),Int(Power(Plus(a,Times(b,Tanh(Plus(c,Times(d,x))))),Plus(n,Times(CN1,C1))),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),Greater(n,C1)),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Tanh(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(x,Power(Times(C2,a),CN1)),Times(CN1,a,Power(Times(C2,b,d,Plus(a,Times(b,Tanh(Plus(c,Times(d,x)))))),CN1))),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Tanh(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(a,Power(Plus(a,Times(b,Tanh(Plus(c,Times(d,x))))),n),Power(Times(C2,b,d,n),CN1)),Dist(Power(Times(C2,a),CN1),Int(Power(Plus(a,Times(b,Tanh(Plus(c,Times(d,x))))),Plus(n,C1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),RationalQ(n)),Less(n,C0)),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Tanh(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(a,x,Power(Plus(Power(a,C2),Times(CN1,Power(b,C2))),CN1)),Times(CN1,b,Log(Plus(Times(a,Cosh(Plus(c,Times(d,x)))),Times(b,Sinh(Plus(c,Times(d,x)))))),Power(Times(d,Plus(Power(a,C2),Times(CN1,Power(b,C2)))),CN1))),And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Power(Tanh(Plus(Times($p(d,true),x_),c_DEFAULT)),C2),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,b),CN1)),Times(Sqrt(b),ArcTan(Times(Sqrt(b),Tanh(Plus(c,Times(d,x))),Power(Sqrt(a),CN1))),Power(Times(Sqrt(a),d,Plus(a,b)),CN1))),And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(a,b))))),
SetDelayed(Int(Times(Power(x_,m_DEFAULT),Tanh(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT))),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(m,C1),CN1)),Times(CN1,Dist(C2,Int(Times(Power(x,m),Power(Plus(C1,Power(E,Plus(Times(C2,a),Times(C2,b,Power(x,n))))),CN1)),x)))),And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Tanh(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Dist(Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1)))),x)),Int(Times(Power(x,m),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x)),And(And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n,p))),Greater(p,C1)),NonzeroQ(Plus(m,Times(CN1,n),C1))),And(Less(C0,n),LessEqual(n,m))))),
SetDelayed(Int(Times(Tanh(Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT)),x_),x_Symbol),
    Condition(Plus(Times(Log(Cosh(Plus(a,Times(b,x),Times(c,Power(x,C2))))),Power(Times(C2,c),CN1)),Times(CN1,Dist(Times(b,Power(Times(C2,c),CN1)),Int(Tanh(Plus(a,Times(b,x),Times(c,Power(x,C2)))),x)))),FreeQ(List(a,b,c),x))),
SetDelayed(Int(Coth(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Times(Log(Sinh(Plus(a,Times(b,x)))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Coth(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),C2),x_Symbol),
    Condition(Plus(x,Times(CN1,Coth(Plus(a,Times(b,x))),Power(b,CN1))),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Times(Coth(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(CN1,c,Power(Times(c,Coth(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Dist(Power(c,C2),Int(Power(Times(c,Coth(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C2))),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Greater(n,C1)))),
SetDelayed(Int(Power(Times(Coth(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(Power(Times(c,Coth(Plus(a,Times(b,x)))),Plus(n,C1)),Power(Times(b,c,Plus(n,C1)),CN1)),Dist(Power(Power(c,C2),CN1),Int(Power(Times(c,Coth(Plus(a,Times(b,x)))),Plus(n,C2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(n,CN1)))),
SetDelayed(Int(Power(Plus(Times(Coth(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),C1D2),x_Symbol),
    Condition(Times(Sqrt(C2),b,ArcCoth(Times(Sqrt(Plus(a,Times(b,Coth(Plus(c,Times(d,x)))))),Power(Times(Sqrt(C2),Rt(a,C2)),CN1))),Power(Times(d,Rt(a,C2)),CN1)),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),PosQ(a)))),
SetDelayed(Int(Power(Plus(Times(Coth(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),C1D2),x_Symbol),
    Condition(Times(Sqrt(C2),b,ArcCot(Times(Sqrt(Plus(a,Times(b,Coth(Plus(c,Times(d,x)))))),Power(Times(Sqrt(C2),Rt(Times(CN1,a),C2)),CN1))),Power(Times(d,Rt(Times(CN1,a),C2)),CN1)),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),NegQ(a)))),
SetDelayed(Int(Power(Plus(Times(Coth(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(CN1,Power(a,C2),Power(Plus(a,Times(b,Coth(Plus(c,Times(d,x))))),Plus(n,Times(CN1,C1))),Power(Times(b,d,Plus(n,Times(CN1,C1))),CN1)),Dist(Times(C2,a),Int(Power(Plus(a,Times(b,Coth(Plus(c,Times(d,x))))),Plus(n,Times(CN1,C1))),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),Greater(n,C1)),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Coth(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(x,Power(Times(C2,a),CN1)),Times(CN1,a,Power(Times(C2,b,d,Plus(a,Times(b,Coth(Plus(c,Times(d,x)))))),CN1))),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Coth(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(a,Power(Plus(a,Times(b,Coth(Plus(c,Times(d,x))))),n),Power(Times(C2,b,d,n),CN1)),Dist(Power(Times(C2,a),CN1),Int(Power(Plus(a,Times(b,Coth(Plus(c,Times(d,x))))),Plus(n,C1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),RationalQ(n)),Less(n,C0)),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Coth(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(a,x,Power(Plus(Power(a,C2),Times(CN1,Power(b,C2))),CN1)),Times(CN1,b,Log(Plus(Times(b,Cosh(Plus(c,Times(d,x)))),Times(a,Sinh(Plus(c,Times(d,x)))))),Power(Times(d,Plus(Power(a,C2),Times(CN1,Power(b,C2)))),CN1))),And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Power(Coth(Plus(Times($p(d,true),x_),c_DEFAULT)),C2),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,b),CN1)),Times(Sqrt(b),ArcTan(Times(Sqrt(b),Coth(Plus(c,Times(d,x))),Power(Sqrt(a),CN1))),Power(Times(Sqrt(a),d,Plus(a,b)),CN1))),And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(a,b))))),
SetDelayed(Int(Times(Coth(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(m,C1),CN1)),Times(CN1,Dist(C2,Int(Times(Power(x,m),Power(Plus(C1,Times(CN1,Power(E,Plus(Times(C2,a),Times(C2,b,Power(x,n)))))),CN1)),x)))),And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Coth(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Dist(Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1)))),x)),Int(Times(Power(x,m),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x)),And(And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n,p))),Greater(p,C1)),NonzeroQ(Plus(m,Times(CN1,n),C1))),And(Less(C0,n),LessEqual(n,m))))),
SetDelayed(Int(Times(Coth(Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT)),x_),x_Symbol),
    Condition(Plus(Times(Log(Sinh(Plus(a,Times(b,x),Times(c,Power(x,C2))))),Power(Times(C2,c),CN1)),Times(CN1,Dist(Times(b,Power(Times(C2,c),CN1)),Int(Coth(Plus(a,Times(b,x),Times(c,Power(x,C2)))),x)))),FreeQ(List(a,b,c),x))),
SetDelayed(Int(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Times(ArcTan(Sinh(Plus(a,Times(b,x)))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),CN1D2),x_Symbol),
    Condition(Times(Sqrt(Cosh(Plus(a,Times(b,x)))),Sqrt(Sech(Plus(a,Times(b,x)))),Int(Sqrt(Cosh(Plus(a,Times(b,x)))),x)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Times(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Times(Power(Times(c,Sech(Plus(a,Times(b,x)))),n),Power(Cosh(Plus(a,Times(b,x))),n),Int(Power(Power(Cosh(Plus(a,Times(b,x))),n),CN1),x)),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(Less(CN1,n),C1)))),
SetDelayed(Int(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),C2),x_Symbol),
    Condition(Times(Tanh(Plus(a,Times(b,x))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),x_Symbol),
    Condition(Dist(Power(b,CN1),Subst(Int(Regularize(Power(Plus(C1,Times(CN1,Power(x,C2))),Times(Rational(C1,C2),Plus(n,Times(CN1,C2)))),x),x),x,Tanh(Plus(a,Times(b,x))))),And(And(FreeQ(List(a,b),x),EvenQ(n)),Greater(n,C1)))),
SetDelayed(Int(Power(Times(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(c,Sinh(Plus(a,Times(b,x))),Power(Times(c,Sech(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Dist(Times(Plus(n,Times(CN1,C2)),Power(c,C2),Power(Plus(n,Times(CN1,C1)),CN1)),Int(Power(Times(c,Sech(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C2))),x))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Greater(n,C1)),Not(EvenQ(n))))),
SetDelayed(Int(Power(Times(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(CN1,Sinh(Plus(a,Times(b,x))),Power(Times(c,Sech(Plus(a,Times(b,x)))),Plus(n,C1)),Power(Times(b,c,n),CN1)),Dist(Times(Plus(n,C1),Power(Times(Power(c,C2),n),CN1)),Int(Power(Times(c,Sech(Plus(a,Times(b,x)))),Plus(n,C2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(n,CN1)))),
SetDelayed(Int(Times(Power(x_,m_DEFAULT),Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT))),x_Symbol),
    Condition(Plus(Times(C2,Power(x,m),ArcTan(Power(E,Plus(a,Times(b,x)))),Power(b,CN1)),Times(CN1,Dist(Times(C2,m,Power(b,CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),ArcTan(Power(E,Plus(a,Times(b,x))))),x)))),And(And(FreeQ(List(a,b),x),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),C2),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Tanh(Plus(a,Times(b,x))),Power(b,CN1)),Times(CN1,Dist(Times(m,Power(b,CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Tanh(Plus(a,Times(b,x)))),x)))),And(And(FreeQ(List(a,b),x),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),x_),x_Symbol),
    Condition(Plus(Times(x,Tanh(Plus(a,Times(b,x))),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Times(Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Times(Power(b,C2),Plus(n,Times(CN1,C1)),Plus(n,Times(CN1,C2))),CN1)),Dist(Times(Plus(n,Times(CN1,C2)),Power(Plus(n,Times(CN1,C1)),CN1)),Int(Times(x,Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b),x),RationalQ(n)),Greater(n,C1)),Unequal(n,C2)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Tanh(Plus(a,Times(b,x))),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Times(m,Power(x,Plus(m,Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Times(Power(b,C2),Plus(n,Times(CN1,C1)),Plus(n,Times(CN1,C2))),CN1)),Dist(Times(Plus(n,Times(CN1,C2)),Power(Plus(n,Times(CN1,C1)),CN1)),Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x)),Times(CN1,Dist(Times(m,Plus(m,Times(CN1,C1)),Power(Times(Power(b,C2),Plus(n,Times(CN1,C1)),Plus(n,Times(CN1,C2))),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x)))),And(And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n))),Greater(n,C1)),Unequal(n,C2)),Greater(m,C1)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),x_),x_Symbol),
    Condition(Plus(Times(CN1,Power(Sech(Plus(a,Times(b,x))),n),Power(Times(Power(b,C2),Power(n,C2)),CN1)),Times(CN1,x,Sinh(Plus(a,Times(b,x))),Power(Sech(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,n),CN1)),Dist(Times(Plus(n,C1),Power(n,CN1)),Int(Times(x,Power(Sech(Plus(a,Times(b,x))),Plus(n,C2))),x))),And(And(FreeQ(List(a,b),x),RationalQ(n)),Less(n,CN1)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(CN1,m,Power(x,Plus(m,Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),n),Power(Times(Power(b,C2),Power(n,C2)),CN1)),Times(CN1,Power(x,m),Sinh(Plus(a,Times(b,x))),Power(Sech(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,n),CN1)),Dist(Times(Plus(n,C1),Power(n,CN1)),Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,x))),Plus(n,C2))),x)),Dist(Times(m,Plus(m,Times(CN1,C1)),Power(Times(Power(b,C2),Power(n,C2)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Sech(Plus(a,Times(b,x))),n)),x))),And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n))),Less(n,CN1)),Greater(m,C1)))),
SetDelayed(Int(Power(Plus(Times(Sech(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),C1D2),x_Symbol),
    Condition(Times(C2,a,ArcTan(Sqrt(Plus(CN1,Times(a,Power(b,CN1),Sech(Plus(c,Times(d,x))))))),Tanh(Plus(c,Times(d,x))),Power(Times(d,Sqrt(Plus(CN1,Times(a,Power(b,CN1),Sech(Plus(c,Times(d,x)))))),Sqrt(Plus(a,Times(b,Sech(Plus(c,Times(d,x))))))),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Sech(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(CN1,Plus(Times(Sqrt(C2),ArcTan(Times(Sqrt(C2),Sqrt(a),Power(Sqrt(Plus(Times(CN1,a),Times(b,Sech(x)))),CN1)))),Times(C2,ArcTan(Times(Sqrt(Plus(Times(CN1,a),Times(b,Sech(x)))),Power(Sqrt(a),CN1))))),Sqrt(Plus(Times(CN1,a),Times(b,Sech(x)))),Sqrt(Plus(a,Times(b,Sech(x)))),Coth(x),Power(Power(a,Rational(C3,C2)),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Power(Sech(v_),n_DEFAULT),b_DEFAULT),a_),m_),x_Symbol),
    Condition(Int(Times(Power(Plus(b,Times(a,Power(Cosh(v),n))),m),Power(Power(Cosh(v),Times(m,n)),CN1)),x),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),Less(m,C0)),Greater(n,C0)))),
SetDelayed(Int(Times(Power(Cosh(v_),p_DEFAULT),Power(Plus(Times(Power(Sech(v_),n_DEFAULT),b_DEFAULT),a_),m_)),x_Symbol),
    Condition(Int(Times(Power(Cosh(v),Plus(p,Times(CN1,m,n))),Power(Plus(b,Times(a,Power(Cosh(v),n))),m)),x),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n,p))),Less(m,C0)),Greater(n,C0)))),
SetDelayed(Int(Times(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT))),x_Symbol),
    Condition(Times(Log(Tanh(Plus(a,Times(b,x)))),Power(b,CN1)),And(FreeQ(List(a,b),x),PosQ(b)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Times(Power(Csch(Plus(a,Times(b,x))),Plus(m,Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),And(And(And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,n,Times(CN1,C2)))),NonzeroQ(Plus(n,Times(CN1,C1)))),PosQ(n)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_DEFAULT),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Dist(Power(b,CN1),Subst(Int(Regularize(Times(Power(Plus(C1,Times(CN1,Power(x,C2))),Plus(Times(Rational(C1,C2),Plus(m,n)),Times(CN1,C1))),Power(Power(x,m),CN1)),x),x),x,Tanh(Plus(a,Times(b,x))))),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),EvenQ(Plus(m,n))),And(Less(C0,m),LessEqual(m,n))))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Csch(Plus(a,Times(b,x))),Plus(m,C1)),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Times(CN1,Dist(Times(Plus(m,C1),Power(Plus(n,Times(CN1,C1)),CN1)),Int(Times(Power(Csch(Plus(a,Times(b,x))),Plus(m,C2)),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x)))),And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n))),Less(m,CN1)),Greater(n,C1)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_DEFAULT),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(Power(Csch(Plus(a,Times(b,x))),Plus(m,Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Dist(Times(Plus(m,n,Times(CN1,C2)),Power(Plus(n,Times(CN1,C1)),CN1)),Int(Times(Power(Csch(Plus(a,Times(b,x))),m),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x))),And(And(And(And(FreeQ(List(a,b,m),x),RationalQ(n)),Greater(n,C1)),Not(EvenQ(Plus(m,n)))),Not(And(And(EvenQ(n),OddQ(m)),Greater(m,C1)))))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_DEFAULT),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Csch(Plus(a,Times(b,x))),Plus(m,Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,Plus(m,n)),CN1)),Dist(Times(Plus(n,C1),Power(Plus(m,n),CN1)),Int(Times(Power(Csch(Plus(a,Times(b,x))),m),Power(Sech(Plus(a,Times(b,x))),Plus(n,C2))),x))),And(And(And(FreeQ(List(a,b,m),x),RationalQ(n)),Less(n,CN1)),NonzeroQ(Plus(m,n))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_DEFAULT),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(Sech(Plus(a,Times(b,x))),m),Power(Times(b,m),CN1)),And(FreeQ(List(a,b,m),x),SameQ(n,C1)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_DEFAULT)),x_Symbol),
    Condition(Dist(Power(b,CN1),Subst(Int(Regularize(Times(Power(x,n),Power(Plus(C1,Times(CN1,Power(x,C2))),Times(Rational(C1,C2),Plus(m,Times(CN1,C2))))),x),x),x,Tanh(Plus(a,Times(b,x))))),And(And(And(FreeQ(List(a,b,n),x),EvenQ(m)),Greater(m,C2)),Not(And(OddQ(n),Less(Less(C0,n),Plus(m,Times(CN1,C1)))))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_DEFAULT),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_DEFAULT)),x_Symbol),
    Condition(Dist(Times(CN1,Power(b,CN1)),Subst(Int(Regularize(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(C1,Times(CN1,Power(x,C2))),Times(Rational(C1,C2),Plus(n,Times(CN1,C1))))),x),x),x,Sech(Plus(a,Times(b,x))))),And(And(FreeQ(List(a,b,m),x),OddQ(n)),Not(And(EvenQ(m),And(Less(C0,m),LessEqual(m,Plus(n,C1)))))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(Power(Sech(Plus(a,Times(b,x))),Plus(m,Times(CN1,C2))),Power(Tanh(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,Plus(n,C1)),CN1)),Dist(Times(Plus(m,Times(CN1,C2)),Power(Plus(n,C1),CN1)),Int(Times(Power(Sech(Plus(a,Times(b,x))),Plus(m,Times(CN1,C2))),Power(Tanh(Plus(a,Times(b,x))),Plus(n,C2))),x))),And(And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n))),Greater(m,C1)),Less(n,CN1)),Not(EvenQ(m))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Sech(Plus(a,Times(b,x))),m),Power(Tanh(Plus(a,Times(b,x))),Plus(n,Times(CN1,C1))),Power(Times(b,m),CN1)),Dist(Times(Plus(n,Times(CN1,C1)),Power(m,CN1)),Int(Times(Power(Sech(Plus(a,Times(b,x))),Plus(m,C2)),Power(Tanh(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x))),And(And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n))),Less(m,CN1)),Greater(n,C1)),Not(EvenQ(m))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Times(CN1,Power(Sech(Plus(a,Times(b,x))),m),Power(Tanh(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,m),CN1)),And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,n,C1))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Sech(Plus(a,Times(b,x))),m),Power(Tanh(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,m),CN1)),Dist(Times(Plus(m,n,C1),Power(m,CN1)),Int(Times(Power(Sech(Plus(a,Times(b,x))),Plus(m,C2)),Power(Tanh(Plus(a,Times(b,x))),n)),x))),And(And(And(FreeQ(List(a,b,n),x),RationalQ(m)),Less(m,CN1)),Not(EvenQ(m))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(Power(Sech(Plus(a,Times(b,x))),Plus(m,Times(CN1,C2))),Power(Tanh(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,Plus(m,n,Times(CN1,C1))),CN1)),Dist(Times(Plus(m,Times(CN1,C2)),Power(Plus(m,n,Times(CN1,C1)),CN1)),Int(Times(Power(Sech(Plus(a,Times(b,x))),Plus(m,Times(CN1,C2))),Power(Tanh(Plus(a,Times(b,x))),n)),x))),And(And(And(And(And(FreeQ(List(a,b,n),x),RationalQ(m)),Greater(m,C1)),NonzeroQ(Plus(m,n,Times(CN1,C1)))),Not(EvenQ(m))),Not(OddQ(n))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_DEFAULT),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Sech(Plus(a,Times(b,x))),m),Power(Tanh(Plus(a,Times(b,x))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(m,n,Times(CN1,C1))),CN1)),Dist(Times(Plus(n,Times(CN1,C1)),Power(Plus(m,n,Times(CN1,C1)),CN1)),Int(Times(Power(Sech(Plus(a,Times(b,x))),m),Power(Tanh(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x))),And(And(And(And(And(FreeQ(List(a,b,m),x),RationalQ(n)),Greater(n,C1)),NonzeroQ(Plus(m,n,Times(CN1,C1)))),Not(EvenQ(m))),Not(OddQ(n))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Tanh(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(Power(Sech(Plus(a,Times(b,x))),m),Power(Tanh(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,Plus(n,C1)),CN1)),Dist(Times(Plus(m,n,C1),Power(Plus(n,C1),CN1)),Int(Times(Power(Sech(Plus(a,Times(b,x))),m),Power(Tanh(Plus(a,Times(b,x))),Plus(n,C2))),x))),And(And(And(FreeQ(List(a,b,m),x),RationalQ(n)),Less(n,CN1)),Not(EvenQ(m))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),p_),Power(x_,m_DEFAULT),Sinh(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT))),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Sech(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Dist(Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Sech(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(FreeQ(List(a,b,p),x),RationalQ(m)),IntIntegerQ(n)),GreaterEqual(Plus(m,Times(CN1,n)),C0)),NonzeroQ(Plus(p,Times(CN1,C1)))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),p_DEFAULT),Power(Tanh(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Sech(Plus(a,Times(b,Power(x,n)))),p),Power(Times(b,n,p),CN1)),Dist(Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,p),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Sech(Plus(a,Times(b,Power(x,n)))),p)),x))),And(And(And(And(FreeQ(List(a,b,p),x),RationalQ(m)),IntIntegerQ(n)),GreaterEqual(Plus(m,Times(CN1,n)),C0)),SameQ(q,C1)))),
SetDelayed(Int(Power(Sech(Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT)),p_DEFAULT),x_Symbol),
    Condition(Int(Power(Times(C2,Power(Plus(Power(Times(c,Power(x,n)),b),Power(Power(Times(c,Power(x,n)),b),CN1)),CN1)),p),x),And(FreeQ(c,x),RationalQ(List(b,n,p))))),
SetDelayed(Int(Power(Sech(Plus(Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),p_),x_Symbol),
    Condition(Plus(Times(x,Tanh(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,Times(CN1,C2))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Times(x,Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,Times(CN1,C2))),Power(Times(Power(b,C2),Power(n,C2),Plus(p,Times(CN1,C1)),Plus(p,Times(CN1,C2))),CN1)),Times(CN1,Dist(Times(Plus(C1,Times(CN1,Power(b,C2),Power(n,C2),Power(Plus(p,Times(CN1,C2)),C2))),Power(Times(Power(b,C2),Power(n,C2),Plus(p,Times(CN1,C1)),Plus(p,Times(CN1,C2))),CN1)),Int(Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,Times(CN1,C2))),x)))),And(And(And(FreeQ(List(a,b,c,n),x),RationalQ(p)),Greater(p,C1)),Unequal(p,C2)))),
SetDelayed(Int(Power(Sech(Plus(Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),p_),x_Symbol),
    Condition(Plus(Times(x,Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),p),Power(Plus(C1,Times(CN1,Power(b,C2),Power(n,C2),Power(p,C2))),CN1)),Times(b,n,p,x,Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,C1)),Sinh(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Power(Plus(C1,Times(CN1,Power(b,C2),Power(n,C2),Power(p,C2))),CN1)),Times(CN1,Dist(Times(Power(b,C2),Power(n,C2),p,Plus(p,C1),Power(Plus(C1,Times(CN1,Power(b,C2),Power(n,C2),Power(p,C2))),CN1)),Int(Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,C2)),x)))),And(And(And(FreeQ(List(a,b,c,n),x),RationalQ(p)),Less(p,CN1)),NonzeroQ(Plus(C1,Times(CN1,Power(b,C2),Power(n,C2),Power(p,C2))))))),
SetDelayed(Int(Power(x_,Power($($p(m,$s("Sech"),true),Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT)),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(Times(C2,Power(Plus(Power(Times(c,Power(x,n)),b),Power(Power(Times(c,Power(x,n)),b),CN1)),CN1)),p)),x),And(FreeQ(c,x),RationalQ(List(b,m,n,p))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),C2),Power(x_,CN1)),x_Symbol),
    Condition(Times(Tanh(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Power(Times(b,n),CN1)),FreeQ(List(a,b,c,n),x))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),p_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(Tanh(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,Times(CN1,C2))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Dist(Times(Plus(p,Times(CN1,C2)),Power(Plus(p,Times(CN1,C1)),CN1)),Int(Times(Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,Times(CN1,C2))),Power(x,CN1)),x))),And(And(FreeQ(List(a,b,c,n),x),RationalQ(p)),Greater(p,C1)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),p_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,C1)),Sinh(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Power(Times(b,n,p),CN1)),Dist(Times(Plus(p,C1),Power(p,CN1)),Int(Times(Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,C2)),Power(x,CN1)),x))),And(And(FreeQ(List(a,b,c,n),x),RationalQ(p)),Less(p,CN1)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Tanh(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,Times(CN1,C2))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Times(Plus(m,C1),Power(x,Plus(m,C1)),Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,Times(CN1,C2))),Power(Times(Power(b,C2),Power(n,C2),Plus(p,Times(CN1,C1)),Plus(p,Times(CN1,C2))),CN1)),Times(CN1,Dist(Times(Plus(Times(Power(b,C2),Power(n,C2),Power(Plus(p,Times(CN1,C2)),C2)),Times(CN1,Power(Plus(m,C1),C2))),Power(Times(Power(b,C2),Power(n,C2),Plus(p,Times(CN1,C1)),Plus(p,Times(CN1,C2))),CN1)),Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,Times(CN1,C2)))),x)))),And(And(And(FreeQ(List(a,b,c,m,n),x),RationalQ(p)),Greater(p,C1)),Unequal(p,C2)))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Log(Times(Power(x_,n_DEFAULT),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(m,C1),Power(x,Plus(m,C1)),Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),p),Power(Plus(Times(Power(b,C2),Power(n,C2),Power(p,C2)),Times(CN1,Power(Plus(m,C1),C2))),CN1)),Times(CN1,b,n,p,Power(x,Plus(m,C1)),Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,C1)),Sinh(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Power(Plus(Times(Power(b,C2),Power(n,C2),Power(p,C2)),Times(CN1,Power(Plus(m,C1),C2))),CN1)),Dist(Times(Power(b,C2),Power(n,C2),p,Plus(p,C1),Power(Plus(Times(Power(b,C2),Power(n,C2),Power(p,C2)),Times(CN1,Power(Plus(m,C1),C2))),CN1)),Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,Log(Times(c,Power(x,n)))))),Plus(p,C2))),x))),And(And(And(FreeQ(List(a,b,c,m,n),x),RationalQ(p)),Less(p,CN1)),NonzeroQ(Plus(Times(Power(b,C2),Power(n,C2),Power(p,C2)),Times(CN1,Power(Plus(m,C1),C2))))))),
SetDelayed(Int(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Times(CN1,ArcCoth(Cosh(Plus(a,Times(b,x)))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),CN1D2),x_Symbol),
    Condition(Times(Sqrt(Csch(Plus(a,Times(b,x)))),Sqrt(Sinh(Plus(a,Times(b,x)))),Int(Sqrt(Sinh(Plus(a,Times(b,x)))),x)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Times(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Times(Power(Times(c,Csch(Plus(a,Times(b,x)))),n),Power(Sinh(Plus(a,Times(b,x))),n),Int(Power(Power(Sinh(Plus(a,Times(b,x))),n),CN1),x)),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(Less(CN1,n),C1)))),
SetDelayed(Int(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),C2),x_Symbol),
    Condition(Times(CN1,Coth(Plus(a,Times(b,x))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),x_Symbol),
    Condition(Dist(Times(CN1,Power(b,CN1)),Subst(Int(Regularize(Power(Plus(CN1,Power(x,C2)),Times(Rational(C1,C2),Plus(n,Times(CN1,C2)))),x),x),x,Coth(Plus(a,Times(b,x))))),And(And(FreeQ(List(a,b),x),EvenQ(n)),Greater(n,C1)))),
SetDelayed(Int(Power(Times(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(CN1,c,Cosh(Plus(a,Times(b,x))),Power(Times(c,Csch(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Times(CN1,Dist(Times(Plus(n,Times(CN1,C2)),Power(c,C2),Power(Plus(n,Times(CN1,C1)),CN1)),Int(Power(Times(c,Csch(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C2))),x)))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Greater(n,C1)),Not(EvenQ(n))))),
SetDelayed(Int(Power(Times(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(CN1,Cosh(Plus(a,Times(b,x))),Power(Times(c,Csch(Plus(a,Times(b,x)))),Plus(n,C1)),Power(Times(b,c,n),CN1)),Times(CN1,Dist(Times(Plus(n,C1),Power(Times(Power(c,C2),n),CN1)),Int(Power(Times(c,Csch(Plus(a,Times(b,x)))),Plus(n,C2)),x)))),And(And(FreeQ(List(a,b),x),RationalQ(n)),Less(n,CN1)))),
SetDelayed(Int(Times(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN2,Power(x,m),ArcTanh(Power(E,Plus(a,Times(b,x)))),Power(b,CN1)),Dist(Times(C2,m,Power(b,CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),ArcTanh(Power(E,Plus(a,Times(b,x))))),x))),And(And(FreeQ(List(a,b),x),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),C2),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,m),Coth(Plus(a,Times(b,x))),Power(b,CN1)),Dist(Times(m,Power(b,CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Coth(Plus(a,Times(b,x)))),x))),And(And(FreeQ(List(a,b),x),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),x_),x_Symbol),
    Condition(Plus(Times(CN1,x,Coth(Plus(a,Times(b,x))),Power(Csch(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Times(CN1,Power(Csch(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Times(Power(b,C2),Plus(n,Times(CN1,C1)),Plus(n,Times(CN1,C2))),CN1)),Times(CN1,Dist(Times(Plus(n,Times(CN1,C2)),Power(Plus(n,Times(CN1,C1)),CN1)),Int(Times(x,Power(Csch(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x)))),And(And(And(FreeQ(List(a,b),x),RationalQ(n)),Greater(n,C1)),Unequal(n,C2)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,m),Coth(Plus(a,Times(b,x))),Power(Csch(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Times(b,Plus(n,Times(CN1,C1))),CN1)),Times(CN1,m,Power(x,Plus(m,Times(CN1,C1))),Power(Csch(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Times(Power(b,C2),Plus(n,Times(CN1,C1)),Plus(n,Times(CN1,C2))),CN1)),Times(CN1,Dist(Times(Plus(n,Times(CN1,C2)),Power(Plus(n,Times(CN1,C1)),CN1)),Int(Times(Power(x,m),Power(Csch(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x))),Dist(Times(m,Plus(m,Times(CN1,C1)),Power(Times(Power(b,C2),Plus(n,Times(CN1,C1)),Plus(n,Times(CN1,C2))),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Csch(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2)))),x))),And(And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n))),Greater(n,C1)),Unequal(n,C2)),Greater(m,C1)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),x_),x_Symbol),
    Condition(Plus(Times(CN1,Power(Csch(Plus(a,Times(b,x))),n),Power(Times(Power(b,C2),Power(n,C2)),CN1)),Times(CN1,x,Cosh(Plus(a,Times(b,x))),Power(Csch(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,n),CN1)),Times(CN1,Dist(Times(Plus(n,C1),Power(n,CN1)),Int(Times(x,Power(Csch(Plus(a,Times(b,x))),Plus(n,C2))),x)))),And(And(FreeQ(List(a,b),x),RationalQ(n)),Less(n,CN1)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(CN1,m,Power(x,Plus(m,Times(CN1,C1))),Power(Csch(Plus(a,Times(b,x))),n),Power(Times(Power(b,C2),Power(n,C2)),CN1)),Times(CN1,Power(x,m),Cosh(Plus(a,Times(b,x))),Power(Csch(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,n),CN1)),Times(CN1,Dist(Times(Plus(n,C1),Power(n,CN1)),Int(Times(Power(x,m),Power(Csch(Plus(a,Times(b,x))),Plus(n,C2))),x))),Dist(Times(m,Plus(m,Times(CN1,C1)),Power(Times(Power(b,C2),Power(n,C2)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Csch(Plus(a,Times(b,x))),n)),x))),And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n))),Less(n,CN1)),Greater(m,C1)))),
SetDelayed(Int(Power(Plus(Times(Csch(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),C1D2),x_Symbol),
    Condition(Times(C2,a,ArcTan(Sqrt(Plus(CN1,Times(CN1,a,Power(b,CN1),Csch(Plus(c,Times(d,x))))))),Coth(Plus(c,Times(d,x))),Power(Times(d,Sqrt(Plus(CN1,Times(CN1,a,Power(b,CN1),Csch(Plus(c,Times(d,x)))))),Sqrt(Plus(a,Times(b,Csch(Plus(c,Times(d,x))))))),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Power(b,C2)))))),
SetDelayed(Int(Power(Plus(Times(Csch(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(CN1,Plus(Times(Sqrt(C2),ArcTan(Times(Sqrt(C2),Sqrt(a),Power(Sqrt(Plus(Times(CN1,a),Times(b,Csch(x)))),CN1)))),Times(C2,ArcTan(Times(Sqrt(Plus(Times(CN1,a),Times(b,Csch(x)))),Power(Sqrt(a),CN1))))),Sqrt(Plus(Times(CN1,a),Times(b,Csch(x)))),Sqrt(Plus(a,Times(b,Csch(x)))),Tanh(x),Power(Power(a,Rational(C3,C2)),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Power(b,C2)))))),
SetDelayed(Int(Power(Plus(Times(Power(Csch(v_),n_DEFAULT),b_DEFAULT),a_),m_),x_Symbol),
    Condition(Int(Times(Power(Plus(b,Times(a,Power(Sinh(v),n))),m),Power(Power(Sinh(v),Times(m,n)),CN1)),x),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),Less(m,C0)),Greater(n,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(Csch(v_),n_DEFAULT),b_DEFAULT),a_),m_),Power(Sinh(v_),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Sinh(v),Plus(p,Times(CN1,m,n))),Power(Plus(b,Times(a,Power(Sinh(v),n))),m)),x),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n,p))),Less(m,C0)),Greater(n,C0)))),
SetDelayed(Int(Times(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT))),x_Symbol),
    Condition(Times(CN1,Log(Coth(Plus(a,Times(b,x)))),Power(b,CN1)),And(FreeQ(List(a,b),x),NegQ(b)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Times(CN1,Power(Csch(Plus(a,Times(b,x))),Plus(m,Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(m,Times(CN1,C1))),CN1)),And(And(And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,n,Times(CN1,C2)))),NonzeroQ(Plus(m,Times(CN1,C1)))),PosQ(m)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_DEFAULT)),x_Symbol),
    Condition(Dist(Times(CN1,Power(b,CN1)),Subst(Int(Regularize(Times(Power(Plus(CN1,Power(x,C2)),Plus(Times(Rational(C1,C2),Plus(m,n)),Times(CN1,C1))),Power(Power(x,n),CN1)),x),x),x,Coth(Plus(a,Times(b,x))))),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),EvenQ(Plus(m,n))),Less(Less(C0,n),m)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Csch(Plus(a,Times(b,x))),Plus(m,Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),Plus(n,C1)),Power(Times(b,Plus(m,Times(CN1,C1))),CN1)),Times(CN1,Dist(Times(Plus(n,C1),Power(Plus(m,Times(CN1,C1)),CN1)),Int(Times(Power(Csch(Plus(a,Times(b,x))),Plus(m,Times(CN1,C2))),Power(Sech(Plus(a,Times(b,x))),Plus(n,C2))),x)))),And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n))),Greater(m,C1)),Less(n,CN1)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Csch(Plus(a,Times(b,x))),Plus(m,Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(m,Times(CN1,C1))),CN1)),Times(CN1,Dist(Times(Plus(m,n,Times(CN1,C2)),Power(Plus(m,Times(CN1,C1)),CN1)),Int(Times(Power(Csch(Plus(a,Times(b,x))),Plus(m,Times(CN1,C2))),Power(Sech(Plus(a,Times(b,x))),n)),x)))),And(And(And(And(FreeQ(List(a,b,n),x),RationalQ(m)),Greater(m,C1)),Not(EvenQ(Plus(m,n)))),Not(And(And(EvenQ(m),OddQ(n)),Greater(n,C1)))))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_),Power(Sech(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Csch(Plus(a,Times(b,x))),Plus(m,C1)),Power(Sech(Plus(a,Times(b,x))),Plus(n,Times(CN1,C1))),Power(Times(b,Plus(m,n)),CN1)),Times(CN1,Dist(Times(Plus(m,C1),Power(Plus(m,n),CN1)),Int(Times(Power(Csch(Plus(a,Times(b,x))),Plus(m,C2)),Power(Sech(Plus(a,Times(b,x))),n)),x)))),And(And(And(FreeQ(List(a,b,n),x),RationalQ(m)),Less(m,CN1)),NonzeroQ(Plus(m,n))))),
SetDelayed(Int(Times(Power(Coth(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_DEFAULT),Power(Csch(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(Csch(Plus(a,Times(b,x))),m),Power(Times(b,m),CN1)),And(FreeQ(List(a,b,m),x),SameQ(n,C1))))
  );
}
