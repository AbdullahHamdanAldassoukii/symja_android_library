package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules22 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,Times(pn,p)),Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(b,Times(c,Power(x,pn))),p)),x),And(And(FreeQ(List(b,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Plus(Times(Plus(Times(b,pe),Times(CN1,pd,c)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(b,c,pn,Plus(p,C1),Power(x,Times(C2,pn,Plus(p,C1)))),CN1)),Times(pe,Power(c,CN1),Int(Times(Power(x,Times(CN1,pn)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(FreeQ(List(b,c,pd,pe,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),Not(IntegerQ(p))),ZeroQ(Plus(Times(pn,Plus(Times(C2,p),C1)),C1))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Times(pe,Power(x,Plus(Times(CN1,pn),C1)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(c,Plus(Times(pn,Plus(Times(C2,p),C1)),C1)),CN1)),And(And(And(And(FreeQ(List(b,c,pd,pe,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(pn,Plus(Times(C2,p),C1)),C1))),ZeroQ(Plus(Times(b,pe,Plus(Times(pn,p),C1)),Times(CN1,c,pd,Plus(Times(pn,Plus(Times(C2,p),C1)),C1))))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Plus(Times(pe,Power(x,Plus(Times(CN1,pn),C1)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(c,Plus(Times(pn,Plus(Times(C2,p),C1)),C1)),CN1)),Times(CN1,Plus(Times(b,pe,Plus(Times(pn,p),C1)),Times(CN1,c,pd,Plus(Times(pn,Plus(Times(C2,p),C1)),C1))),Power(Times(c,Plus(Times(pn,Plus(Times(C2,p),C1)),C1)),CN1),Int(Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),x))),And(And(And(And(FreeQ(List(b,c,pd,pe,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(pn,Plus(Times(C2,p),C1)),C1))),NonzeroQ(Plus(Times(b,pe,Plus(Times(pn,p),C1)),Times(CN1,c,pd,Plus(Times(pn,Plus(Times(C2,p),C1)),C1))))))),
ISetDelayed(Int(Times(Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Times(Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Power(x,Times(pn,p)),Power(Plus(b,Times(c,Power(x,pn))),p)),CN1),Int(Times(Power(x,Times(pn,p)),Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(b,Times(c,Power(x,pn))),p)),x)),And(And(FreeQ(List(b,c,pd,pe,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Power(c,p),CN1),Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(Times(C1D2,b),Times(c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn))))),Power(Times(Power(Times(C4,c),Plus(p,Times(CN1,C1D2))),Plus(b,Times(C2,c,Power(x,pn)))),CN1),Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(b,Times(C2,c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Plus(b,Times(C2,c,Power(x,pn))),Power(Times(Power(Times(C4,c),Plus(p,C1D2)),Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))))),CN1),Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(b,Times(C2,c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Power(Plus(b,Times(C2,c,Power(x,pn))),Times(C2,p)),CN1),Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(b,Times(C2,c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(Times(C2,p)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),Plus(m,p)),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(pe,CN1),Power(x,pn))),p)),x),And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),Plus(m,p)),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(pe,CN1),Power(x,pn))),p)),x),And(And(And(FreeQ(List(a,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Power(Plus(pd,Times(pe,Power(x,pn))),p),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(x,pn),Power(pe,CN1))),p)),CN1),Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),Plus(m,p)),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(pe,CN1),Power(x,pn))),p)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Power(Plus(pd,Times(pe,Power(x,pn))),p),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(x,pn),Power(pe,CN1))),p)),CN1),Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),Plus(m,p)),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(pe,CN1),Power(x,pn))),p)),x)),And(And(And(FreeQ(List(a,c,pd,pe,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))),x,Power(Plus(pd,Times(pe,Power(x,pn))),Plus(m,C1)),Power(Times(pd,Sqr(pe),pn,Plus(m,C1)),CN1)),Times(Power(Times(pn,Plus(m,C1),pd,Sqr(pe)),CN1),Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),Plus(m,C1)),Simp(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe),Plus(Times(pn,Plus(m,C1)),C1)),Times(c,pd,pe,pn,Plus(m,C1),Power(x,pn))),x)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),RationalQ(m)),Unequal(m,CN1)),Not(PositiveIntegerQ(m))))),
ISetDelayed(Int(Times(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))),x,Power(Plus(pd,Times(pe,Power(x,pn))),Plus(m,C1)),Power(Times(pd,Sqr(pe),pn,Plus(m,C1)),CN1)),Times(Power(Times(pn,Plus(m,C1),pd,Sqr(pe)),CN1),Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),Plus(m,C1)),Simp(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe),Plus(Times(pn,Plus(m,C1)),C1)),Times(c,pd,pe,pn,Plus(m,C1),Power(x,pn))),x)),x))),And(And(And(And(And(FreeQ(List(a,c,pd,pe,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),RationalQ(m)),Unequal(m,CN1)),Not(PositiveIntegerQ(m))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(r,Rt(Times(CN1,pe,Power(c,CN1),Plus(Times(C2,c,pd),Times(b,pe))),C2))),Plus(Times(Sqr(pe),Power(Times(C2,c,r),CN1),Int(Times(Plus(r,Times(C2,pe,x)),Power(Plus(pd,Times(CN1,r,x),Times(CN1,pe,Sqr(x))),CN1)),x)),Times(Sqr(pe),Power(Times(C2,c,r),CN1),Int(Times(Plus(r,Times(CN1,C2,pe,x)),Power(Plus(pd,Times(r,x),Times(CN1,pe,Sqr(x))),CN1)),x)))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),NegQ(Times(pe,Power(c,CN1),Plus(Times(C2,c,pd),Times(b,pe))))),Not(PosQ(Times(pe,Power(c,CN1),Plus(Times(C2,c,pd),Times(CN1,b,pe)))))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(r,Rt(Times(CN2,pd,pe),C2))),Plus(Times(Sqr(pe),Power(Times(C2,c,r),CN1),Int(Times(Plus(r,Times(C2,pe,x)),Power(Plus(pd,Times(CN1,r,x),Times(CN1,pe,Sqr(x))),CN1)),x)),Times(Sqr(pe),Power(Times(C2,c,r),CN1),Int(Times(Plus(r,Times(CN1,C2,pe,x)),Power(Plus(pd,Times(r,x),Times(CN1,pe,Sqr(x))),CN1)),x)))),And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),NegQ(Times(pd,pe))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(r,Rt(Times(pe,Power(c,CN1),Plus(Times(C2,c,pd),Times(CN1,b,pe))),C2))),Plus(Times(Sqr(pe),Power(Times(C2,c),CN1),Int(Power(Plus(pd,Times(CN1,r,x),Times(pe,Sqr(x))),CN1),x)),Times(Sqr(pe),Power(Times(C2,c),CN1),Int(Power(Plus(pd,Times(r,x),Times(pe,Sqr(x))),CN1),x)))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),Not(NegativeQ(Times(pe,Power(c,CN1),Plus(Times(C2,c,pd),Times(CN1,b,pe)))))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Plus(Times(Sqr(pe),Power(Times(C2,c),CN1),Int(Power(Plus(pd,Times(CN1,Rt(Times(C2,pd,pe),C2),x),Times(pe,Sqr(x))),CN1),x)),Times(Sqr(pe),Power(Times(C2,c),CN1),Int(Power(Plus(pd,Times(Rt(Times(C2,pd,pe),C2),x),Times(pe,Sqr(x))),CN1),x))),And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),Not(NegativeQ(Times(pd,pe)))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Plus(Times(Plus(Times(q,pd),Times(a,pe)),Power(Times(C2,a,c),CN1),Int(Times(Plus(q,Times(c,Sqr(x))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1)),x)),Times(Plus(Times(q,pd),Times(CN1,a,pe)),Power(Times(C2,a,c),CN1),Int(Times(Plus(q,Times(CN1,c,Sqr(x))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),PosQ(Times(a,c,Power(b,CN2)))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Plus(Times(Plus(Times(q,pd),Times(a,pe)),Power(Times(C2,a,c),CN1),Int(Times(Plus(q,Times(c,Sqr(x))),Power(Plus(a,Times(c,Power(x,C4))),CN1)),x)),Times(Plus(Times(q,pd),Times(CN1,a,pe)),Power(Times(C2,a,c),CN1),Int(Times(Plus(q,Times(CN1,c,Sqr(x))),Power(Plus(a,Times(c,Power(x,C4))),CN1)),x)))),And(And(And(FreeQ(List(a,c,pd,pe),x),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),PosQ(Times(a,c))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,c),C2))),Plus(Times(CN1,Plus(Times(q,pd),Times(CN1,a,pe)),Power(Times(C2,a,c),CN1),Int(Times(Plus(q,Times(c,Sqr(x))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1)),x)),Times(CN1,Plus(Times(q,pd),Times(a,pe)),Power(Times(C2,a,c),CN1),Int(Times(Plus(q,Times(CN1,c,Sqr(x))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),NegQ(Times(a,c,Power(b,CN2)))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,c),C2))),Plus(Times(CN1,Plus(Times(q,pd),Times(CN1,a,pe)),Power(Times(C2,a,c),CN1),Int(Times(Plus(q,Times(c,Sqr(x))),Power(Plus(a,Times(c,Power(x,C4))),CN1)),x)),Times(CN1,Plus(Times(q,pd),Times(a,pe)),Power(Times(C2,a,c),CN1),Int(Times(Plus(q,Times(CN1,c,Sqr(x))),Power(Plus(a,Times(c,Power(x,C4))),CN1)),x)))),And(And(And(FreeQ(List(a,c,pd,pe),x),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),NegQ(Times(a,c))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Plus(Times(C2,c,q),Times(CN1,b,c)),C2))),Plus(Times(c,Power(Times(C2,q,r),CN1),Int(Times(Plus(Times(pd,r),Times(CN1,Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)),Times(c,Power(Times(C2,q,r),CN1),Int(Times(Plus(Times(pd,r),Times(Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),Power(Plus(q,Times(r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)))),Not(NegativeQ(Plus(Times(C2,c,q),Times(CN1,b,c)))))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),EvenQ(pn)),Greater(pn,C2)),PosQ(Times(a,c))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Times(C2,c,q),C2))),Plus(Times(c,Power(Times(C2,q,r),CN1),Int(Times(Plus(Times(pd,r),Times(CN1,Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)),Times(c,Power(Times(C2,q,r),CN1),Int(Times(Plus(Times(pd,r),Times(Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),Power(Plus(q,Times(r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)))),Not(NegativeQ(Times(C2,c,q))))),And(And(And(And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),EvenQ(pn)),Greater(pn,C2)),PositiveQ(Times(a,c))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x),x),And(And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x),x),And(And(And(FreeQ(List(a,c,pd,pe,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1),x),x),And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),m_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1),x),x),And(And(And(FreeQ(List(a,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))),CN1D2)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Times(Power(a,CN1D2),Int(Times(Plus(pa,Times(pb,Sqr(x))),Power(Times(Sqrt(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,Times(CN1,q)),CN1)))),Sqrt(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,q),CN1))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveQ(a)),NegativeQ(c)),Or(PositiveQ(b),NegativeQ(b))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,C4))),CN1D2)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,c),C2))),Times(Power(a,CN1D2),Int(Times(Plus(pa,Times(pb,Sqr(x))),Power(Times(Sqrt(Plus(C1,Times(CN1,c,Sqr(x),Power(q,CN1)))),Sqrt(Plus(C1,Times(c,Sqr(x),Power(q,CN1))))),CN1)),x))),And(And(FreeQ(List(a,c,pa,pb),x),PositiveQ(a)),NegativeQ(c)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))),CN1D2)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Times(Sqrt(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,Times(CN1,q)),CN1)))),Sqrt(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,q),CN1)))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1D2),Int(Times(Plus(pa,Times(pb,Sqr(x))),Power(Times(Sqrt(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,Times(CN1,q)),CN1)))),Sqrt(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,q),CN1))))),CN1)),x))),And(FreeQ(List(a,b,c,pa,pb),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Sqr(x_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,C4))),CN1D2)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,c),C2))),Times(Sqrt(Plus(C1,Times(CN1,c,Sqr(x),Power(q,CN1)))),Sqrt(Plus(C1,Times(c,Sqr(x),Power(q,CN1)))),Power(Plus(a,Times(c,Power(x,C4))),CN1D2),Int(Times(Plus(pa,Times(pb,Sqr(x))),Power(Times(Sqrt(Plus(C1,Times(CN1,c,Sqr(x),Power(q,CN1)))),Sqrt(Plus(C1,Times(c,Sqr(x),Power(q,CN1))))),CN1)),x))),FreeQ(List(a,c,pa,pb),x))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Plus(pa,Times(pb,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x),x),And(And(And(FreeQ(List(a,b,c,pa,pb,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Plus(pa,Times(pb,Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p)),x),x),And(And(FreeQ(List(a,c,pa,pb,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Module(List(Set(g,Times(Sign(pn),Power(Denominator(pn),CN1)))),Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Power(g,CN1),Times(CN1,C1))),Plus(pa,Times(pb,Power(x,Times(pn,Power(g,CN1))))),Power(Plus(a,Times(b,Power(x,Times(pn,Power(g,CN1)))),Times(c,Power(x,Times(C2,pn,Power(g,CN1))))),p)),x),x,Power(x,g)))),And(And(And(And(And(FreeQ(List(a,b,c,pa,pb,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(p,C1))),RationalQ(pn)),Not(PositiveIntegerQ(pn))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_)),x_Symbol),
    Condition(Module(List(Set(g,Times(Sign(pn),Power(Denominator(pn),CN1)))),Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Power(g,CN1),Times(CN1,C1))),Plus(pa,Times(pb,Power(x,Times(pn,Power(g,CN1))))),Power(Plus(a,Times(c,Power(x,Times(C2,pn,Power(g,CN1))))),p)),x),x,Power(x,g)))),And(And(And(And(FreeQ(List(a,c,pa,pb,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(p,C1))),RationalQ(pn)),Not(PositiveIntegerQ(pn))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(x,Plus(Times(b,pb,pn,p),Times(c,pa,Plus(Times(C2,pn,p),pn,C1)),Times(c,pb,Plus(Times(C2,pn,p),C1),Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(c,Plus(Times(C2,pn,p),C1),Plus(Times(C2,pn,p),pn,C1)),CN1)),Times(pn,p,Power(Times(c,Plus(Times(C2,pn,p),C1),Plus(Times(C2,pn,p),pn,C1)),CN1),Int(Times(Simp(Plus(Times(C2,a,c,pa,Plus(Times(C2,pn,p),pn,C1)),Times(CN1,a,b,pb),Times(Plus(Times(C2,a,c,pb,Plus(Times(C2,pn,p),C1)),Times(b,pa,c,Plus(Times(C2,pn,p),pn,C1)),Times(CN1,Sqr(b),pb,Plus(Times(pn,p),C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(p)),Greater(p,C0)),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,pn,p),C1))),NonzeroQ(Plus(Times(C2,pn,p),pn,C1))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(x,Plus(Times(pa,Plus(Times(C2,pn,p),pn,C1)),Times(pb,Plus(Times(C2,pn,p),C1),Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Plus(Times(C2,pn,p),C1),Plus(Times(C2,pn,p),pn,C1)),CN1)),Times(C2,a,pn,p,Power(Times(Plus(Times(C2,pn,p),C1),Plus(Times(C2,pn,p),pn,C1)),CN1),Int(Times(Plus(Times(pa,Plus(Times(C2,pn,p),pn,C1)),Times(pb,Plus(Times(C2,pn,p),C1),Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(FreeQ(List(a,c,pa,pb,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),RationalQ(p)),Greater(p,C0)),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,pn,p),C1))),NonzeroQ(Plus(Times(C2,pn,p),pn,C1))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,x,Plus(Times(pa,Sqr(b)),Times(CN1,a,b,pb),Times(CN1,C2,a,c,pa),Times(Plus(Times(b,pa),Times(CN1,C2,a,pb)),c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(a,pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1)),Times(Power(Times(a,pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1),Int(Times(Simp(Plus(Times(Plus(Times(pn,p),pn,C1),pa,Sqr(b)),Times(CN1,a,b,pb),Times(CN1,C2,a,c,pa,Plus(Times(C2,pn,p),Times(C2,pn),C1)),Times(Plus(Times(C2,pn,p),Times(C3,pn),C1),Plus(Times(pa,b),Times(CN1,C2,a,pb)),c,Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(FreeQ(List(a,b,c,pa,pb,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(p)),Less(p,CN1)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,x,Plus(pa,Times(pb,Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(C2,a,pn,Plus(p,C1)),CN1)),Times(Power(Times(C2,a,pn,Plus(p,C1)),CN1),Int(Times(Plus(Times(pa,Plus(Times(C2,pn,p),Times(C2,pn),C1)),Times(pb,Plus(Times(C2,pn,p),Times(C3,pn),C1),Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(FreeQ(List(a,c,pa,pb,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),RationalQ(p)),Less(p,CN1)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(pa,Int(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),x)),Times(pb,Int(Times(Power(x,pn),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x))),And(FreeQ(List(a,b,c,pa,pb,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(pa,Int(Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p),x)),Times(pb,Int(Times(Power(x,pn),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p)),x))),And(FreeQ(List(a,c,pa,pb,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))))),
ISetDelayed(Int(Power(Times(Plus(a_,Times(b_DEFAULT,Sqr(x_))),Sqrt(Plus(c_,Times(pd_DEFAULT,Power(x_,C4))))),CN1),x_Symbol),
    Condition(Simp(Times(Power(Times(a,Sqrt(c),Rt(Times(CN1,Rt(Times(CN1,pd,Power(c,CN1)),C2)),C2)),CN1),EllipticPi(Times(b,Power(Times(a,Rt(Times(CN1,pd,Power(c,CN1)),C2)),CN1)),ArcSin(Times(Rt(Times(CN1,Rt(Times(CN1,pd,Power(c,CN1)),C2)),C2),x)),CN1)),x),And(FreeQ(List(a,b,c,pd),x),PositiveQ(c)))),
ISetDelayed(Int(Power(Times(Plus(a_,Times(b_DEFAULT,Sqr(x_))),Sqrt(Plus(c_,Times(pd_DEFAULT,Power(x_,C4))))),CN1),x_Symbol),
    Condition(Times(Sqrt(Times(Plus(c,Times(pd,Power(x,C4))),Power(c,CN1))),Power(Plus(c,Times(pd,Power(x,C4))),CN1D2),Int(Power(Times(Plus(a,Times(b,Sqr(x))),Sqrt(Plus(C1,Times(pd,Power(x,C4),Power(c,CN1))))),CN1),x)),And(FreeQ(List(a,b,c,pd),x),Not(PositiveQ(c))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,Sqr(x_))),CN1),Sqrt(Plus(c_,Times(pd_DEFAULT,Power(x_,C4))))),x_Symbol),
    Condition(Plus(Times(CN1,pd,Power(b,CN2),Int(Times(Plus(a,Times(CN1,b,Sqr(x))),Power(Plus(c,Times(pd,Power(x,C4))),CN1D2)),x)),Times(Plus(Times(Sqr(b),c),Times(Sqr(a),pd)),Power(b,CN2),Int(Power(Times(Plus(a,Times(b,Sqr(x))),Sqrt(Plus(c,Times(pd,Power(x,C4))))),CN1),x))),FreeQ(List(a,b,c,pd),x))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),m_)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Times(Power(a,Plus(p,Times(CN1,C1D2))),Sqrt(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4)))),Power(Times(Sqrt(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,Times(CN1,q)),CN1)))),Sqrt(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,q),CN1))))),CN1),Int(Times(Power(Plus(pd,Times(pe,Sqr(x))),m),Power(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,Times(CN1,q)),CN1))),p),Power(Plus(C1,Times(C2,c,Sqr(x),Power(Plus(b,q),CN1))),p)),x))),And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),IntegerQ(Plus(p,Times(CN1,C1D2)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(x_,C4))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),m_)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,c),C2))),Times(Power(a,Plus(p,Times(CN1,C1D2))),Sqrt(Plus(a,Times(c,Power(x,C4)))),Power(Times(Sqrt(Plus(C1,Times(CN1,c,Sqr(x),Power(q,CN1)))),Sqrt(Plus(C1,Times(c,Sqr(x),Power(q,CN1))))),CN1),Int(Times(Power(Plus(pd,Times(pe,Sqr(x))),m),Power(Plus(C1,Times(CN1,c,Sqr(x),Power(q,CN1))),p),Power(Plus(C1,Times(c,Sqr(x),Power(q,CN1))),p)),x))),And(And(FreeQ(List(a,c,pd,pe,m),x),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),IntegerQ(Plus(p,Times(CN1,C1D2)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,Power(v_,pn_)),Times(c_DEFAULT,Power(w_,j_DEFAULT))),p_DEFAULT),Power(Plus(pd_,Times(pe_DEFAULT,Power(u_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Coefficient(u,x,C1),CN1),Subst(Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x),x,u)),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(u,Times(CN1,v)))),ZeroQ(Plus(u,Times(CN1,w)))),LinearQ(u,x)),NonzeroQ(Plus(u,Times(CN1,x)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Power(w_,j_DEFAULT))),p_DEFAULT),Power(Plus(pd_,Times(pe_DEFAULT,Power(u_,pn_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Coefficient(u,x,C1),CN1),Subst(Int(Times(Power(Plus(pd,Times(pe,Power(x,pn))),m),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p)),x),x,u)),And(And(And(And(FreeQ(List(a,c,pd,pe,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(u,Times(CN1,w)))),LinearQ(u,x)),NonzeroQ(Plus(u,Times(CN1,x)))))),
ISetDelayed(Int(Times(Power(u_,m_DEFAULT),Power(v_,p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(ExpandToSum(u,x),m),Power(ExpandToSum(v,x),p)),x),And(And(And(FreeQ(List(m,p),x),BinomialQ(u,x)),TrinomialQ(v,x)),Not(And(BinomialMatchQ(u,x),TrinomialMatchQ(v,x)))))),
ISetDelayed(Int(Times(Power(u_,m_DEFAULT),Power(v_,p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(ExpandToSum(u,x),m),Power(ExpandToSum(v,x),p)),x),And(And(And(FreeQ(List(m,p),x),BinomialQ(u,x)),BinomialQ(v,x)),Not(And(BinomialMatchQ(u,x),BinomialMatchQ(v,x))))))
  );
}
