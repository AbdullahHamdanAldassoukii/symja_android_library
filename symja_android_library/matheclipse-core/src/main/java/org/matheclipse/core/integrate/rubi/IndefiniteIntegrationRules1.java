package org.matheclipse.core.integrate.rubi;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IndefiniteIntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IndefiniteIntegrationRules1 { 
  public static IAST RULES = List( 
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),b_DEFAULT),Times(Power(x_,C4),c_DEFAULT),a_),CN1),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,Power(c,CN1)),C2))),Plus(Times(CN1,Dist(Times(c,q,Power(Times(C2,a),CN1)),Int(Times(Plus(q,Power(x,C2)),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x))),Times(CN1,Dist(Times(c,q,Power(Times(C2,a),CN1)),Int(Times(Plus(q,Times(CN1,Power(x,C2))),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x))))),And(And(FreeQ(List(a,b,c),x),NegQ(Times(a,Power(c,CN1)))),Or(NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c))),And(RationalQ(Times(a,Power(c,CN1))),Not(PositiveQ(Plus(Power(b,C2),Times(CN1,C4,a,c))))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),b_DEFAULT),Times(Power(x_,C4),c_DEFAULT),a_),CN1),Power(x_,C2)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,Power(c,CN1)),C2))),Plus(Dist(Rational(C1,C2),Int(Times(Plus(q,Power(x,C2)),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x)),Times(CN1,Dist(Rational(C1,C2),Int(Times(Plus(q,Times(CN1,Power(x,C2))),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x))))),And(And(FreeQ(List(a,b,c),x),PosQ(Times(a,Power(c,CN1)))),Or(NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c))),And(RationalQ(Times(a,Power(c,CN1))),Not(PositiveQ(Plus(Power(b,C2),Times(CN1,C4,a,c))))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),b_DEFAULT),Times(Power(x_,C4),c_DEFAULT),a_),CN1),Power(x_,C2)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,Power(c,CN1)),C2))),Plus(Dist(Rational(C1,C2),Int(Times(Plus(q,Power(x,C2)),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x)),Times(CN1,Dist(Rational(C1,C2),Int(Times(Plus(q,Times(CN1,Power(x,C2))),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x))))),And(And(FreeQ(List(a,b,c),x),NegQ(Times(a,Power(c,CN1)))),Or(NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c))),And(RationalQ(Times(a,Power(c,CN1))),Not(PositiveQ(Plus(Power(b,C2),Times(CN1,C4,a,c))))))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,C2),$p(e,true)),$p(d)),Power(Plus(Times(Power(x_,C2),b_DEFAULT),Times(Power(x_,C4),c_DEFAULT),a_),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,Power(c,CN1)),C2))),Plus(Dist(Times(Plus(Times(q,c,d),Times(a,e)),Power(Times(C2,a),CN1)),Int(Times(Plus(q,Power(x,C2)),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x)),Dist(Times(Plus(Times(q,c,d),Times(CN1,a,e)),Power(Times(C2,a),CN1)),Int(Times(Plus(q,Times(CN1,Power(x,C2))),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x)))),And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Times(Power(d,C2),c),Times(CN1,Power(e,C2),a)))),PosQ(Times(a,Power(c,CN1)))),Or(NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c))),And(RationalQ(Times(a,Power(c,CN1))),Not(PositiveQ(Plus(Power(b,C2),Times(CN1,C4,a,c))))))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,C2),$p(e,true)),$p(d)),Power(Plus(Times(Power(x_,C2),b_DEFAULT),Times(Power(x_,C4),c_DEFAULT),a_),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,Power(c,CN1)),C2))),Plus(Dist(Times(CN1,Plus(Times(q,c,d),Times(CN1,a,e)),Power(Times(C2,a),CN1)),Int(Times(Plus(q,Power(x,C2)),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x)),Times(CN1,Dist(Times(Plus(Times(q,c,d),Times(a,e)),Power(Times(C2,a),CN1)),Int(Times(Plus(q,Times(CN1,Power(x,C2))),Power(Plus(a,Times(b,Power(x,C2)),Times(c,Power(x,C4))),CN1)),x))))),And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Times(Power(d,C2),c),Times(CN1,Power(e,C2),a)))),NegQ(Times(a,Power(c,CN1)))),Or(NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c))),And(RationalQ(Times(a,Power(c,CN1))),Not(PositiveQ(Plus(Power(b,C2),Times(CN1,C4,a,c))))))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,k_),b_DEFAULT),a_),Power(Plus(Times(Power(x_,C2),$p(d,true)),Times(Power(x_,k_),$p(e,true)),Times(Power(x_,j_),f_DEFAULT),c_),CN1)),x_Symbol),
    Condition(Times(a,Power(Rt(Times(c,d),C2),CN1),ArcTan(Times(a,Plus(k,Times(CN1,C1)),Rt(Times(c,d),C2),x,Power(Times(c,Plus(Times(a,Plus(k,Times(CN1,C1))),Times(CN1,b,Power(x,k)))),CN1)))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,f),x),IntIntegerQ(List(j,k))),Greater(k,C0)),Equal(j,Times(C2,k))),ZeroQ(Plus(Times(Power(Plus(k,Times(CN1,C1)),C2),Power(a,C2),f),Times(CN1,Power(b,C2),c)))),ZeroQ(Plus(Times(b,e),Times(C2,a,Plus(k,Times(CN1,C1)),f)))),PosQ(Times(c,d))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,k_),b_DEFAULT),a_),Power(Plus(Times(Power(x_,C2),$p(d,true)),Times(Power(x_,k_),$p(e,true)),Times(Power(x_,j_),f_DEFAULT),c_),CN1)),x_Symbol),
    Condition(Times(a,Power(Rt(Times(CN1,c,d),C2),CN1),ArcTanh(Times(a,Plus(k,Times(CN1,C1)),Rt(Times(CN1,c,d),C2),x,Power(Times(c,Plus(Times(a,Plus(k,Times(CN1,C1))),Times(CN1,b,Power(x,k)))),CN1)))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,f),x),IntIntegerQ(List(j,k))),Greater(k,C0)),Equal(j,Times(C2,k))),ZeroQ(Plus(Times(Power(Plus(k,Times(CN1,C1)),C2),Power(a,C2),f),Times(CN1,Power(b,C2),c)))),ZeroQ(Plus(Times(b,e),Times(C2,a,Plus(k,Times(CN1,C1)),f)))),NegQ(Times(c,d))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,k_DEFAULT),b_DEFAULT),a_),Power(Plus(Times(Power(x_,n_DEFAULT),$p(d,true)),Times(Power(x_,k_DEFAULT),$p(e,true)),Times(Power(x_,j_),f_DEFAULT),c_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(a,ArcTan(Times(a,Plus(m,Times(CN1,k),C1),Rt(Times(c,d),C2),Power(x,Plus(m,C1)),Power(Times(c,Plus(Times(a,Plus(m,Times(CN1,k),C1)),Times(b,Plus(m,C1),Power(x,k)))),CN1))),Power(Times(Plus(m,C1),Rt(Times(c,d),C2)),CN1)),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,j,k,m,n),x),ZeroQ(Plus(n,Times(CN1,C2,Plus(m,C1))))),ZeroQ(Plus(j,Times(CN1,C2,k)))),ZeroQ(Plus(Times(Power(a,C2),f,Power(Plus(m,Times(CN1,k),C1),C2)),Times(CN1,Power(b,C2),c,Power(Plus(m,C1),C2))))),ZeroQ(Plus(Times(b,e,Plus(m,C1)),Times(CN1,C2,a,f,Plus(m,Times(CN1,k),C1))))),PosQ(Times(c,d))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,k_DEFAULT),b_DEFAULT),a_),Power(Plus(Times(Power(x_,n_DEFAULT),$p(d,true)),Times(Power(x_,k_DEFAULT),$p(e,true)),Times(Power(x_,j_),f_DEFAULT),c_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(a,ArcTanh(Times(a,Plus(m,Times(CN1,k),C1),Rt(Times(CN1,c,d),C2),Power(x,Plus(m,C1)),Power(Times(c,Plus(Times(a,Plus(m,Times(CN1,k),C1)),Times(b,Plus(m,C1),Power(x,k)))),CN1))),Power(Times(Plus(m,C1),Rt(Times(CN1,c,d),C2)),CN1)),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,j,k,m,n),x),ZeroQ(Plus(n,Times(CN1,C2,Plus(m,C1))))),ZeroQ(Plus(j,Times(CN1,C2,k)))),ZeroQ(Plus(Times(Power(a,C2),f,Power(Plus(m,Times(CN1,k),C1),C2)),Times(CN1,Power(b,C2),c,Power(Plus(m,C1),C2))))),ZeroQ(Plus(Times(b,e,Plus(m,C1)),Times(CN1,C2,a,f,Plus(m,Times(CN1,k),C1))))),NegQ(Times(c,d))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_),c_DEFAULT),a_),CN1),x_Symbol),
    Condition(Module(List(Set(q,Plus(Times(C2,Rt(Times(a,Power(c,CN1)),C2)),Times(CN1,b,Power(c,CN1))))),Condition(Plus(Dist(Power(Times(C2,c,Rt(Times(a,Power(c,CN1)),C2),Rt(q,C2)),CN1),Int(Times(Plus(Rt(q,C2),Power(x,Times(Rational(C1,C2),k))),Power(Plus(Rt(Times(a,Power(c,CN1)),C2),Times(Rt(q,C2),Power(x,Times(Rational(C1,C2),k))),Power(x,k)),CN1)),x)),Dist(Power(Times(C2,c,Rt(Times(a,Power(c,CN1)),C2),Rt(q,C2)),CN1),Int(Times(Plus(Rt(q,C2),Times(CN1,Power(x,Times(Rational(C1,C2),k)))),Power(Plus(Rt(Times(a,Power(c,CN1)),C2),Times(CN1,Rt(q,C2),Power(x,Times(Rational(C1,C2),k))),Power(x,k)),CN1)),x))),Not(NegativeQ(q)))),And(And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k))),Greater(k,C0)),Equal(j,Times(C2,k))),EvenQ(k)),PosQ(Times(a,Power(c,CN1)))),NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,C4,a,c)),C2))),Plus(Dist(Times(C2,c,Power(q,CN1)),Int(Power(Plus(b,Times(CN1,q),Times(C2,c,Power(x,k))),CN1),x)),Times(CN1,Dist(Times(C2,c,Power(q,CN1)),Int(Power(Plus(b,q,Times(C2,c,Power(x,k))),CN1),x))))),And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k))),Greater(k,C0)),Equal(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))),Or(OddQ(k),Not(NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(CN1,x,Plus(Power(b,C2),Times(CN1,C2,a,c),Times(b,c,Power(x,k))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(k,a,Plus(n,C1),Plus(Power(b,C2),Times(CN1,C4,a,c))),CN1)),Dist(Times(Plus(Times(k,Plus(n,C1),Plus(Power(b,C2),Times(CN1,C4,a,c))),Power(b,C2),Times(CN1,C2,a,c)),Power(Times(k,a,Plus(n,C1),Plus(Power(b,C2),Times(CN1,C4,a,c))),CN1)),Int(Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1)),x)),Dist(Times(Plus(Times(k,Plus(Times(C2,n),C3)),C1),b,c,Power(Times(k,a,Plus(n,C1),Plus(Power(b,C2),Times(CN1,C4,a,c))),CN1)),Int(Times(Power(x,k),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1))),x))),And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,n))),Greater(k,C0)),Equal(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))),Less(n,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(Log(x),Power(a,CN1)),Times(CN1,Dist(Power(Times(a,k),CN1),Subst(Int(Times(Plus(b,Times(c,x)),Power(Plus(a,Times(b,x),Times(c,Power(x,C2))),CN1)),x),x,Power(x,k))))),And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k))),Greater(k,C0)),Equal(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_),c_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Plus(Times(C2,Rt(Times(a,Power(c,CN1)),C2)),Times(CN1,b,Power(c,CN1))))),Condition(Plus(Dist(Power(Times(C2,c,Rt(q,C2)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,Rational(C1,C2),k))),Power(Plus(Rt(Times(a,Power(c,CN1)),C2),Times(CN1,Rt(q,C2),Power(x,Times(Rational(C1,C2),k))),Power(x,k)),CN1)),x)),Times(CN1,Dist(Power(Times(C2,c,Rt(q,C2)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,Rational(C1,C2),k))),Power(Plus(Rt(Times(a,Power(c,CN1)),C2),Times(Rt(q,C2),Power(x,Times(Rational(C1,C2),k))),Power(x,k)),CN1)),x)))),PosQ(q))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m))),Greater(k,C0)),Equal(j,Times(C2,k))),EvenQ(m)),EvenQ(k)),Less(And(Less(C0,Times(Rational(C1,C2),k)),LessEqual(Times(Rational(C1,C2),k),m)),j)),PosQ(Times(a,Power(c,CN1)))),NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,k_)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,C4,a,c)),C2))),Plus(Dist(Plus(C1,Times(CN1,b,Power(q,CN1))),Int(Power(Plus(b,Times(CN1,q),Times(C2,c,Power(x,k))),CN1),x)),Dist(Plus(C1,Times(b,Power(q,CN1))),Int(Power(Plus(b,q,Times(C2,c,Power(x,k))),CN1),x)))),And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k))),Greater(k,C0)),Equal(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))),Or(OddQ(k),Not(NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_),c_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,j),C1)),Power(Times(c,Plus(m,Times(CN1,j),C1)),CN1)),Times(CN1,Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,j))),Plus(a,Times(b,Power(x,k))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,Times(C2,k)))),CN1)),x)))),And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m))),Greater(k,C0)),Equal(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))),Less(Less(C0,j),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_),c_DEFAULT),a_),CN1),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Dist(Power(a,CN1),Int(Times(Power(x,Plus(m,k)),Plus(b,Times(c,Power(x,k))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),CN1)),x)))),And(And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m))),Greater(k,C0)),Equal(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))),Less(m,CN1)),Greater(k,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_),c_DEFAULT),a_),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Dist(Power(k,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(k,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,x),Times(c,Power(x,C2))),n)),x),x,Power(x,k))),And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m,n))),Greater(k,C0)),Equal(j,Times(C2,k))),Greater(m,C0)),Less(n,C0)),IntIntegerQ(Times(Plus(m,C1),Power(k,CN1)))),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n),Power(Plus(m,Times(j,n),C1),CN1)),Dist(Times(a,j,n,Power(Plus(m,Times(j,n),C1),CN1)),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x)),Dist(Times(b,k,n,Power(Plus(m,Times(j,n),C1),CN1)),Int(Times(Power(x,Plus(m,k)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m,n))),Greater(k,C0)),Equal(j,Times(C2,k))),Less(m,CN1)),Greater(n,C1)),NonzeroQ(Plus(m,Times(j,n),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,j),C1)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(c,k,Plus(n,C1)),CN1)),Dist(Times(a,Power(c,CN1)),Int(Times(Power(x,Plus(m,Times(CN1,j))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m,n))),Greater(k,C0)),Equal(j,Times(C2,k))),GreaterEqual(Plus(m,Times(CN1,j)),C0)),Less(n,CN1)),ZeroQ(Plus(m,Times(k,Plus(n,Times(CN1,C1))),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,j),C1)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(c,Plus(m,Times(j,n),C1)),CN1)),Times(CN1,Dist(Times(b,Plus(m,Times(k,Plus(n,Times(CN1,C1))),C1),Power(Times(c,Plus(m,Times(j,n),C1)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,k))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n)),x))),Times(CN1,Dist(Times(a,Plus(m,Times(CN1,j),C1),Power(Times(c,Plus(m,Times(j,n),C1)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,j))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n)),x)))),And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m,n))),Greater(k,C0)),Equal(j,Times(C2,k))),GreaterEqual(Plus(m,Times(CN1,j)),C0)),Less(n,CN1)),NonzeroQ(Plus(m,Times(j,n),C1))),NonzeroQ(Plus(m,Times(k,Plus(n,Times(CN1,C1))),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n),Power(Plus(m,C1),CN1)),Times(CN1,Dist(Times(b,k,n,Power(Plus(m,C1),CN1)),Int(Times(Power(x,Plus(m,k)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x))),Times(CN1,Dist(Times(c,j,n,Power(Plus(m,C1),CN1)),Int(Times(Power(x,Plus(m,j)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x)))),And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m,n))),Greater(k,C0)),Equal(j,Times(C2,k))),Less(m,CN1)),Greater(n,C1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Dist(Times(b,Plus(m,C1,Times(k,Plus(n,C1))),Power(Times(a,Plus(m,C1)),CN1)),Int(Times(Power(x,Plus(m,k)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n)),x))),Times(CN1,Dist(Times(c,Plus(m,C1,Times(j,Plus(n,C1))),Power(Times(a,Plus(m,C1)),CN1)),Int(Times(Power(x,Plus(m,j)),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n)),x)))),And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,m,n))),Greater(k,C0)),Equal(j,Times(C2,k))),Less(m,CN1)),LessEqual(n,C1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),n_),Power(x_,k_)),x_Symbol),
    Condition(Plus(Times(x,Plus(b,Times(C2,c,Power(x,k))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n),Power(Times(C2,c,Plus(Times(k,Plus(Times(C2,n),C1)),C1)),CN1)),Times(CN1,Dist(Times(b,Power(Times(C2,c,Plus(Times(k,Plus(Times(C2,n),C1)),C1)),CN1)),Int(Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),n),x))),Times(CN1,Dist(Times(k,n,Plus(Power(b,C2),Times(CN1,C4,a,c)),Power(Times(C2,c,Plus(Times(k,Plus(Times(C2,n),C1)),C1)),CN1)),Int(Times(Power(x,k),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x)))),And(And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,n))),Greater(k,C0)),Equal(j,Times(C2,k))),Greater(n,C0)),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(k,Plus(Times(C2,n),C1)),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),n_),Power(x_,k_)),x_Symbol),
    Condition(Plus(Times(x,Plus(b,Times(C2,c,Power(x,k))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(k,Plus(n,C1),Plus(Power(b,C2),Times(CN1,C4,a,c))),CN1)),Times(CN1,Dist(Times(b,Power(Times(k,Plus(n,C1),Plus(Power(b,C2),Times(CN1,C4,a,c))),CN1)),Int(Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1)),x))),Times(CN1,Dist(Times(C2,c,Plus(Times(k,Plus(Times(C2,n),C3)),C1),Power(Times(k,Plus(n,C1),Plus(Power(b,C2),Times(CN1,C4,a,c))),CN1)),Int(Times(Power(x,k),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),Plus(n,C1))),x)))),And(And(And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(j,k,n))),Greater(k,C0)),Equal(j,Times(C2,k))),Less(n,CN1)),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,k_),$p(e,true)),$p(d)),Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,C4,a,c)),C2))),Plus(Dist(Plus(e,Times(Plus(Times(C2,c,d),Times(CN1,b,e)),Power(q,CN1))),Int(Power(Plus(b,Times(CN1,q),Times(C2,c,Power(x,k))),CN1),x)),Dist(Plus(e,Times(CN1,Plus(Times(C2,c,d),Times(CN1,b,e)),Power(q,CN1))),Int(Power(Plus(b,q,Times(C2,c,Power(x,k))),CN1),x)))),And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),IntIntegerQ(List(j,k))),Greater(k,C0)),Equal(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))),Not(NegativeQ(Plus(Power(b,C2),Times(CN1,C4,a,c))))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,k_),$p(e,true)),$p(d,true)),Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(d,Log(x),Power(a,CN1)),Times(CN1,Dist(Power(Times(a,k),CN1),Subst(Int(Times(Plus(Times(b,d),Times(CN1,a,e),Times(c,d,x)),Power(Plus(a,Times(b,x),Times(c,Power(x,C2))),CN1)),x),x,Power(x,k))))),And(And(And(FreeQ(List(a,b,c,d,e),x),IntIntegerQ(List(j,k))),Greater(k,C0)),Equal(j,Times(C2,k))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,k_),$p(e,true)),$p(d,true)),Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(e,Power(x,Plus(m,Times(CN1,k),C1)),Power(Times(c,Plus(m,Times(CN1,k),C1)),CN1)),Times(CN1,Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,k))),Plus(Times(a,e),Times(Plus(Times(b,e),Times(CN1,c,d)),Power(x,k))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,d,e),x),IntIntegerQ(List(j,k,m))),Greater(k,C0)),Equal(j,Times(C2,k))),Less(k,Plus(m,C1))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,k_),$p(e,true)),$p(d,true)),Power(Plus(Times(Power(x_,k_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(d,Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Dist(Power(a,CN1),Int(Times(Power(x,Plus(m,k)),Plus(Times(b,d),Times(CN1,a,e),Times(c,d,Power(x,k))),Power(Plus(a,Times(b,Power(x,k)),Times(c,Power(x,j))),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,d,e),x),IntIntegerQ(List(j,k,m))),Greater(k,C0)),Equal(j,Times(C2,k))),Less(m,CN1)))),
SetDelayed(Int(Times(Plus(Times(Power(x_,C2),f_DEFAULT),Times(Power(x_,C3),g_DEFAULT),Times($p(e,true),x_),$p(d,true)),Power(Plus(Times(Power(x_,C4),a_DEFAULT),Times(Power(x_,C3),b_DEFAULT),Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Sqrt(Plus(Times(ZZ(8L),Power(a,C2)),Power(b,C2),Times(CN1,C4,a,c))))),Plus(Dist(Power(q,CN1),Int(Times(Plus(Times(b,d),Times(CN1,C2,a,e),Times(C2,a,g),Times(d,q),Times(Plus(Times(C2,a,d),Times(CN1,C2,a,f),Times(b,g),Times(g,q)),x)),Power(Plus(Times(C2,a),Times(Plus(b,q),x),Times(C2,a,Power(x,C2))),CN1)),x)),Times(CN1,Dist(Power(q,CN1),Int(Times(Plus(Times(b,d),Times(CN1,C2,a,e),Times(C2,a,g),Times(CN1,d,q),Times(Plus(Times(C2,a,d),Times(CN1,C2,a,f),Times(b,g),Times(CN1,g,q)),x)),Power(Plus(Times(C2,a),Times(Plus(b,Times(CN1,q)),x),Times(C2,a,Power(x,C2))),CN1)),x))))),And(FreeQ(List(a,b,c,d,e,f,g),x),PosQ(Plus(Times(ZZ(8L),Power(a,C2)),Power(b,C2),Times(CN1,C4,a,c)))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,C3),g_DEFAULT),Times($p(e,true),x_),$p(d,true)),Power(Plus(Times(Power(x_,C4),a_DEFAULT),Times(Power(x_,C3),b_DEFAULT),Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Sqrt(Plus(Times(ZZ(8L),Power(a,C2)),Power(b,C2),Times(CN1,C4,a,c))))),Plus(Dist(Power(q,CN1),Int(Times(Plus(Times(b,d),Times(CN1,C2,a,e),Times(C2,a,g),Times(d,q),Times(Plus(Times(C2,a,d),Times(b,g),Times(g,q)),x)),Power(Plus(Times(C2,a),Times(Plus(b,q),x),Times(C2,a,Power(x,C2))),CN1)),x)),Times(CN1,Dist(Power(q,CN1),Int(Times(Plus(Times(b,d),Times(CN1,C2,a,e),Times(C2,a,g),Times(CN1,d,q),Times(Plus(Times(C2,a,d),Times(b,g),Times(CN1,g,q)),x)),Power(Plus(Times(C2,a),Times(Plus(b,Times(CN1,q)),x),Times(C2,a,Power(x,C2))),CN1)),x))))),And(FreeQ(List(a,b,c,d,e,g),x),PosQ(Plus(Times(ZZ(8L),Power(a,C2)),Power(b,C2),Times(CN1,C4,a,c)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,p_DEFAULT),a_DEFAULT),Times(Power(x_,q_DEFAULT),b_DEFAULT)),n_),x_Symbol),
    Condition(Int(Times(Power(x,Times(n,p)),Power(Plus(a,Times(b,Power(x,Plus(q,Times(CN1,p))))),n)),x),And(And(And(And(FreeQ(List(a,b,p,q),x),IntIntegerQ(n)),Not(FractionQ(p))),Not(FractionQ(q))),Not(NegativeQ(Plus(q,Times(CN1,p))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,p_DEFAULT),a_DEFAULT),Times(Power(x_,q_DEFAULT),b_DEFAULT)),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,Plus(m,Times(n,p))),Power(Plus(a,Times(b,Power(x,Plus(q,Times(CN1,p))))),n)),x),And(And(And(And(And(FreeQ(List(a,b,m,p,q),x),IntIntegerQ(n)),Not(FractionQ(p))),Not(FractionQ(q))),Not(FractionQ(m))),Not(NegativeQ(Plus(q,Times(CN1,p))))))),
SetDelayed(Int(Times(Power(v_,p_),u_),x_Symbol),
    Condition(Module(List(Set(m,Exponent(u,x)),Set(n,Exponent(v,x))),Condition(Module(List(Set(c,Times(Coefficient(u,x,m),Power(Times(Coefficient(v,x,n),Plus(m,C1,Times(n,p))),CN1))),w),CompoundExpression(CompoundExpression(Set(c,Times(Coefficient(u,x,m),Power(Times(Coefficient(v,x,n),Plus(m,C1,Times(n,p))),CN1))),Set(w,Apart(Plus(u,Times(CN1,c,Power(x,Plus(m,Times(CN1,n))),Plus(Times(Plus(m,Times(CN1,n),C1),v),Times(Plus(p,C1),x,D(v,x))))),x))),If(ZeroQ(w),Times(c,Power(x,Plus(m,Times(CN1,n),C1)),Power(v,Plus(p,C1))),Plus(Times(c,Power(x,Plus(m,Times(CN1,n),C1)),Power(v,Plus(p,C1))),Int(Times(w,Power(v,p)),x))))),And(And(And(GreaterEqual(Plus(m,C1),n),Greater(n,C1)),Less(Plus(m,Times(n,p)),CN1)),FalseQ(DerivativeDivides(v,u,x))))),And(And(And(And(And(RationalQ(p),Less(p,CN1)),IntPolynomialQ(List(u,v),x)),SumQ(v)),Not(And(MonomialQ(u,x),BinomialQ(v,x)))),Not(And(ZeroQ(Coefficient(u,x,C0)),ZeroQ(Coefficient(v,x,C0))))))),
SetDelayed(Int(u_,x_Symbol),
    Condition(SplitFreeIntegrate(u,x),SumQ(u))),
SetDelayed(SplitFreeIntegrate(u_,x_Symbol),
    If(SumQ(u),Map(Function(SplitFreeIntegrate(Slot1,x)),u),If(FreeQ(u,x),Times(u,x),If(MatchQ(u,Condition(Times(c_,Plus(a_,Times(b_DEFAULT,x))),FreeQ(List(a,b,c),x))),Int(u,x),Module(List(Set($s("lst"),SplitFreeFactors(u,x))),Dist(Part($s("lst"),C1),Int(Part($s("lst"),C2),x))))))),
SetDelayed(Int(Power(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),n_DEFAULT),c_DEFAULT),m_),x_Symbol),
    Condition(Times(Plus(a,Times(b,x)),Power(Times(c,Power(Plus(a,Times(b,x)),n)),m),Log(Plus(a,Times(b,x))),Power(b,CN1)),And(FreeQ(List(a,b,c,m,n),x),ZeroQ(Plus(Times(m,n),C1))))),
SetDelayed(Int(Power(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),n_),c_DEFAULT),m_),x_Symbol),
    Condition(Times(Plus(a,Times(b,x)),Power(Times(c,Power(Plus(a,Times(b,x)),n)),m),Power(Times(b,Plus(Times(m,n),C1)),CN1)),And(FreeQ(List(a,b,c,m,n),x),NonzeroQ(Plus(Times(m,n),C1))))),
SetDelayed(Int(Times(Power(Times(Power(v_,m_),a_DEFAULT),p_),u_DEFAULT),x_Symbol),
    Condition(Module(List(Set(q,FractionalPart(p))),Times(Power(a,Plus(p,Times(CN1,q))),Power(Times(a,Power(v,m)),q),Power(Power(v,Times(m,q)),CN1),Int(Times(u,Power(v,Times(m,p))),x))),And(FreeQ(List(a,m,p),x),IntIntegerQ(Times(m,p))))),
SetDelayed(Int(Times(Power(Times(Power(v_,m_DEFAULT),Power(w_,n_DEFAULT),a_DEFAULT),p_),u_DEFAULT),x_Symbol),
    Condition(Module(List(Set(q,FractionalPart(p))),Times(Power(a,Plus(p,Times(CN1,q))),Power(Times(a,Power(v,m),Power(w,n)),q),Power(Times(Power(v,Times(m,q)),Power(w,Times(n,q))),CN1),Int(Times(u,Power(v,Times(m,p)),Power(w,Times(n,p))),x))),And(And(FreeQ(List(a,m,n,p),x),IntIntegerQ(Times(m,p))),IntIntegerQ(Times(n,p))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,m_DEFAULT),a_DEFAULT),Times(Power(x_,n_DEFAULT),b_DEFAULT)),p_),x_Symbol),
    Condition(Int(Times(Power(x,Times(m,p)),Power(Plus(a,Times(b,Power(x,Plus(n,Times(CN1,m))))),p)),x),And(And(And(FreeQ(List(a,b,m,n),x),IntIntegerQ(p)),ZeroQ(Plus(Times(m,Plus(p,C1)),Times(CN1,n),C1))),Not(IntIntegerQ(List(m,n)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,m_DEFAULT),a_DEFAULT),Times(Power(x_,n_DEFAULT),b_DEFAULT)),p_),x_Symbol),
    Condition(Int(Power(Times(Power(x,m),Plus(a,Times(b,Power(x,Plus(n,Times(CN1,m)))))),p),x),And(And(FreeQ(List(a,b,m,n),x),FractionQ(p)),ZeroQ(Plus(Times(m,Plus(p,C1)),Times(CN1,n),C1))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,m_DEFAULT),a_DEFAULT),Times(Power(x_,n_DEFAULT),b_DEFAULT),Times(Power(x_,q_DEFAULT),c_DEFAULT)),p_),x_Symbol),
    Condition(Int(Power(Times(Power(x,m),Plus(a,Times(b,Power(x,Plus(n,Times(CN1,m)))),Times(c,Power(x,Plus(q,Times(CN1,m)))))),p),x),And(And(And(FreeQ(List(a,b,c),x),IntIntegerQ(List(m,n,q))),FractionQ(p)),LessEqual(LessEqual(m,n),q)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_DEFAULT),a_DEFAULT),Times(Power(x_,p_),b_DEFAULT)),CN1),Power(x_,m_DEFAULT),u_DEFAULT),x_Symbol),
    Condition(Int(Times(u,Power(x,Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(x,Plus(p,Times(CN1,n))))),CN1)),x),And(And(FreeQ(List(a,b),x),FractionQ(List(m,n,p))),And(Less(C0,n),LessEqual(n,p))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,m_DEFAULT),u_DEFAULT),v_),Power(Plus(Times(Power(x_,n_DEFAULT),a_DEFAULT),Times(Power(x_,p_),b_DEFAULT)),CN1)),x_Symbol),
    Condition(Plus(Int(Times(u,Power(x,Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(x,Plus(p,Times(CN1,n))))),CN1)),x),Int(Times(v,Power(Plus(Times(a,Power(x,n)),Times(b,Power(x,p))),CN1)),x)),And(And(And(FreeQ(List(a,b),x),FractionQ(List(m,n,p))),And(Less(C0,n),LessEqual(n,p))),Not(IntPolynomialQ(v,x))))),
SetDelayed(Int(Times(Power(x_,m_DEFAULT),u_),x_Symbol),
    Condition(Int(Map(Function(Times(Power(x,m),Slot1)),u),x),And(FreeQ(m,x),SumQ(u)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_),CN1D2),Power(x_,CN1)),x_Symbol),
    Condition(Times(CN2,ArcTanh(Times(Sqrt(Plus(a,Times(b,Power(x,n)))),Power(Rt(a,C2),CN1))),Power(Times(n,Rt(a,C2)),CN1)),And(FreeQ(List(a,b,n),x),PosQ(a)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_),CN1D2),Power(x_,CN1)),x_Symbol),
    Condition(Times(C2,ArcTan(Times(Sqrt(Plus(a,Times(b,Power(x,n)))),Power(Rt(Times(CN1,a),C2),CN1))),Power(Times(n,Rt(Times(CN1,a),C2)),CN1)),And(FreeQ(List(a,b,n),x),NegQ(a)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_),p_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,Power(x,n))),p),Power(Times(n,p),CN1)),Dist(a,Int(Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1))),Power(x,CN1)),x))),And(And(FreeQ(List(a,b,n),x),FractionQ(p)),Greater(p,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_),p_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,n,Plus(p,C1)),CN1)),Dist(Power(a,CN1),Int(Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(x,CN1)),x))),And(And(FreeQ(List(a,b,n),x),FractionQ(p)),Less(p,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),m_),Power(Plus(Times($p(d,true),x_),c_),m_),u_DEFAULT),x_Symbol),
    Condition(Int(Times(u,Power(Plus(Times(a,c),Times(Plus(Times(a,d),Times(b,c)),x),Times(b,d,Power(x,C2))),m)),x),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(m)),ZeroQ(Plus(b,d))),PositiveQ(Plus(a,c))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1),Power(Plus(Times($p(d,true),x_),c_DEFAULT),CN1D2)),x_Symbol),
    Condition(Times(CN2,ArcTanh(Times(Sqrt(Plus(c,Times(d,x))),Power(Rt(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(b,CN1)),C2),CN1))),Power(Times(b,Rt(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(b,CN1)),C2)),CN1)),And(FreeQ(List(a,b,c,d),x),PosQ(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1),Power(Plus(Times($p(d,true),x_),c_DEFAULT),CN1D2)),x_Symbol),
    Condition(Times(C2,ArcTan(Times(Sqrt(Plus(c,Times(d,x))),Power(Rt(Times(Plus(Times(a,d),Times(CN1,b,c)),Power(b,CN1)),C2),CN1))),Power(Times(b,Rt(Times(Plus(Times(a,d),Times(CN1,b,c)),Power(b,CN1)),C2)),CN1)),And(FreeQ(List(a,b,c,d),x),NegQ(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),CN1D2),Power(Plus(Times(b_DEFAULT,x_),c_),CN1D2)),x_Symbol),
    Condition(Times(ArcCosh(Times(b,x,Power(a,CN1))),Power(b,CN1)),And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(a,c))),PositiveQ(a)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1D2),Power(Plus(Times($p(d,true),x_),c_DEFAULT),CN1D2)),x_Symbol),
    Condition(Times(C2,Rt(Times(b,Power(d,CN1)),C2),ArcSinh(Times(Sqrt(Plus(a,Times(b,x))),Power(Rt(Times(b,Power(d,CN1)),C2),CN1))),Power(b,CN1)),And(And(FreeQ(List(a,b,c,d),x),PosQ(Times(b,Power(d,CN1)))),ZeroQ(Plus(Times(a,d),Times(CN1,b,c),b))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1D2),Power(Plus(Times($p(d,true),x_),c_DEFAULT),CN1D2)),x_Symbol),
    Condition(Times(C2,Rt(Times(CN1,b,Power(d,CN1)),C2),ArcSin(Times(Sqrt(Plus(a,Times(b,x))),Power(Rt(Times(CN1,b,Power(d,CN1)),C2),CN1))),Power(b,CN1)),And(And(FreeQ(List(a,b,c,d),x),NegQ(Times(b,Power(d,CN1)))),ZeroQ(Plus(Times(a,d),Times(CN1,b,c),b))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1D2),Power(Plus(Times($p(d,true),x_),c_DEFAULT),CN1D2)),x_Symbol),
    Condition(Times(C2,Rt(Times(b,Power(d,CN1)),C2),ArcSinh(Times(Rt(Times(b,Power(Plus(Times(a,d),Times(CN1,b,c)),CN1)),C2),Sqrt(Plus(c,Times(d,x))))),Power(b,CN1)),And(And(FreeQ(List(a,b,c,d),x),PosQ(Times(b,Power(d,CN1)))),PositiveQ(Times(Plus(Times(a,d),Times(CN1,b,c)),Power(d,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1D2),Power(Plus(Times($p(d,true),x_),c_DEFAULT),CN1D2)),x_Symbol),
    Condition(Times(CN2,Rt(Times(CN1,b,Power(d,CN1)),C2),ArcSin(Times(Rt(Times(b,Power(Plus(Times(b,c),Times(CN1,a,d)),CN1)),C2),Sqrt(Plus(c,Times(d,x))))),Power(b,CN1)),And(And(FreeQ(List(a,b,c,d),x),NegQ(Times(b,Power(d,CN1)))),PositiveQ(Times(Plus(Times(a,d),Times(CN1,b,c)),Power(d,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1D2),Power(Plus(Times($p(d,true),x_),c_DEFAULT),CN1D2)),x_Symbol),
    Condition(Times(C2,Rt(Times(d,Power(b,CN1)),C2),ArcTanh(Times(Rt(Times(d,Power(b,CN1)),C2),Sqrt(Plus(a,Times(b,x))),Power(Sqrt(Plus(c,Times(d,x))),CN1))),Power(d,CN1)),And(And(FreeQ(List(a,b,c,d),x),PosQ(Times(d,Power(b,CN1)))),NonzeroQ(Plus(Times(a,d),Times(CN1,b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1D2),Power(Plus(Times($p(d,true),x_),c_DEFAULT),CN1D2)),x_Symbol),
    Condition(Times(CN2,Rt(Times(CN1,d,Power(b,CN1)),C2),ArcTan(Times(Rt(Times(CN1,d,Power(b,CN1)),C2),Sqrt(Plus(a,Times(b,x))),Power(Sqrt(Plus(c,Times(d,x))),CN1))),Power(d,CN1)),And(And(FreeQ(List(a,b,c,d),x),NegQ(Times(d,Power(b,CN1)))),NonzeroQ(Plus(Times(a,d),Times(CN1,b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_DEFAULT)),x_Symbol),
    Condition(Dist(Power(Times(d,Power(b,CN1)),n),Int(Power(Plus(a,Times(b,x)),Plus(m,n)),x)),And(And(And(FreeQ(List(a,b,c,d,m),x),IntIntegerQ(n)),ZeroQ(Plus(Times(b,c),Times(CN1,a,d)))),Not(IntIntegerQ(m))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(d,x)),n),Log(Plus(a,Times(b,x))),Power(b,CN1)),And(And(And(And(And(FreeQ(List(a,b,c,d,m,n),x),Not(IntIntegerQ(m))),Not(IntIntegerQ(n))),ZeroQ(Plus(Times(b,c),Times(CN1,a,d)))),ZeroQ(Plus(m,n,C1))),Or(Less(LeafCount(Plus(a,Times(b,x))),LeafCount(Plus(c,Times(d,x)))),And(Equal(LeafCount(Plus(a,Times(b,x))),LeafCount(Plus(c,Times(d,x)))),PosQ(a)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(d,x)),n),Power(Times(b,Plus(m,n,C1)),CN1)),And(And(And(And(FreeQ(List(a,b,c,d,m,n),x),Not(IntIntegerQ(m))),Not(IntIntegerQ(n))),ZeroQ(Plus(Times(b,c),Times(CN1,a,d)))),NonzeroQ(Plus(m,n,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times($p(d,true),x_DEFAULT),c_DEFAULT),n_)),x_Symbol),
    Condition(Times(CN1,Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(Plus(n,C1),Plus(Times(b,c),Times(CN1,a,d))),CN1)),And(And(And(FreeQ(List(a,b,c,d,m,n),x),ZeroQ(Plus(m,n,C2))),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(d,x)),n),Power(Times(b,n),CN1)),Dist(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(b,CN1)),Int(Times(Power(Plus(c,Times(d,x)),Plus(n,Times(CN1,C1))),Power(Plus(a,Times(b,x)),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))),FractionQ(n)),Greater(n,C0)))),
SetDelayed(Int(Times(Plus(Times($p(d,true),x_),c_DEFAULT),Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Plus(c,Times(d,x)),Power(Times(b,Plus(m,C2)),CN1)),Dist(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(Times(b,Plus(m,C2)),CN1)),Int(Power(Plus(a,Times(b,x)),m),x))),And(And(FreeQ(List(a,b,c,d,m),x),Not(IntIntegerQ(m))),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(d,x)),n),Power(Times(b,Plus(m,n,C1)),CN1)),Dist(Times(n,Power(Plus(m,n,C1),CN1),Plus(Times(b,c),Times(CN1,a,d)),Power(b,CN1)),Int(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(d,x)),Plus(n,Times(CN1,C1)))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,m),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))),NonzeroQ(Plus(m,n,C1))),RationalQ(n)),Greater(n,C0)),Not(IntIntegerQ(m))),Or(IntIntegerQ(n),And(FractionQ(m),Or(LessEqual(n,m),And(LessEqual(CN1,m),Less(m,C0)))))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(Plus(n,C1),Plus(Times(b,c),Times(CN1,a,d))),CN1)),Dist(Times(Plus(m,n,C2),Power(Plus(n,C1),CN1),b,Power(Plus(Times(b,c),Times(CN1,a,d)),CN1)),Int(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(d,x)),Plus(n,C1))),x))),And(And(And(And(And(FreeQ(List(a,b,c,d,m),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))),RationalQ(n)),Less(n,CN1)),Not(IntIntegerQ(List(m,n)))),Or(Or(Not(RationalQ(m)),GreaterEqual(n,m)),And(LessEqual(CN1,m),Less(m,C0)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(Plus(n,C1),Plus(Times(b,c),Times(CN1,a,d))),CN1)),Dist(Times(Plus(m,n,C2),Power(Plus(n,C1),CN1),b,Power(Plus(Times(b,c),Times(CN1,a,d)),CN1)),Int(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(d,x)),Plus(n,C1))),x))),And(And(And(And(And(FreeQ(List(a,b,c,d,m,n),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))),NonzeroQ(Plus(n,C1))),Not(RationalQ(n))),RationalQ(Plus(m,n))),Less(Simplify(Plus(m,n)),CN1)))),
SetDelayed(Int(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_)),x_Symbol),
    Condition(Plus(Times(Plus(a,Times(b,x)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(d,Plus(n,C1)),CN1)),Times(CN1,Dist(Times(b,Power(Times(d,Plus(n,C1)),CN1)),Int(Power(Plus(c,Times(d,x)),Plus(n,C1)),x)))),And(FreeQ(List(a,b,c,d,n),x),Not(IntIntegerQ(n))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(d,Plus(n,C1)),CN1)),Times(CN1,Dist(Times(m,Power(Plus(n,C1),CN1),b,Power(d,CN1)),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,Times(CN1,C1))),Power(Plus(c,Times(d,x)),Plus(n,C1))),x)))),And(And(And(And(FreeQ(List(a,b,c,d),x),RationalQ(List(m,n))),Not(IntIntegerQ(List(m,n)))),Greater(m,C0)),Less(n,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times($p(d,true),x_),c_),CN1)),x_Symbol),
    Condition(Module(List(Set(p,Denominator(m))),Dist(p,Subst(Int(Times(Power(x,Plus(Times(m,p),p,Times(CN1,C1))),Power(Plus(Times(b,c),Times(CN1,a,d),Times(d,Power(x,p))),CN1)),x),x,Power(Plus(a,Times(b,x)),Power(p,CN1))))),And(And(FreeQ(List(a,b,c,d),x),FractionQ(m)),Less(Less(CN1,m),C0)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_)),x_Symbol),
    Condition(Module(List(Set(p,Denominator(m))),Dist(p,Subst(Int(Times(Power(x,Plus(Times(m,p),p,Times(CN1,C1))),Power(Plus(b,Times(CN1,d,Power(x,p))),CN1)),x),x,Times(Power(Plus(a,Times(b,x)),Power(p,CN1)),Power(Power(Plus(c,Times(d,x)),Power(p,CN1)),CN1))))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(List(m,n))),Less(Less(CN1,m),C0)),Equal(Plus(m,n),CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),CN1D2),Power(Plus(Times($p(d,true),x_),c_),CN1D2),Power(x_,CN1)),x_Symbol),
    Condition(Times(CN2,ArcTanh(Times(Rt(Times(c,Power(a,CN1)),C2),Sqrt(Plus(a,Times(b,x))),Power(Sqrt(Plus(c,Times(d,x))),CN1))),Power(Times(a,Rt(Times(c,Power(a,CN1)),C2)),CN1)),And(FreeQ(List(a,b,c,d),x),PosQ(Times(c,Power(a,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),CN1D2),Power(Plus(Times($p(d,true),x_),c_),CN1D2),Power(x_,CN1)),x_Symbol),
    Condition(Times(CN2,ArcTan(Times(Rt(Times(CN1,c,Power(a,CN1)),C2),Sqrt(Plus(a,Times(b,x))),Power(Sqrt(Plus(c,Times(d,x))),CN1))),Power(Times(a,Rt(Times(CN1,c,Power(a,CN1)),C2)),CN1)),And(FreeQ(List(a,b,c,d),x),NegQ(Times(c,Power(a,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),n_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n),Power(Times(C2,n),CN1)),Dist(Times(a,c),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,Times(CN1,C1))),Power(Plus(c,Times(d,x)),Plus(n,Times(CN1,C1))),Power(x,CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),Greater(n,C0)),ZeroQ(Plus(Times(a,d),Times(b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),n_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n),Power(Times(C2,n),CN1)),Dist(Times(Rational(C1,C2),Plus(Times(a,d),Times(b,c))),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,Times(CN1,C1))),Power(Plus(c,Times(d,x)),Plus(n,Times(CN1,C1)))),x)),Dist(Times(a,c),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,Times(CN1,C1))),Power(Plus(c,Times(d,x)),Plus(n,Times(CN1,C1))),Power(x,CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),Greater(n,C0)),NonzeroQ(Plus(Times(a,d),Times(b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),n_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(C2,a,c,Plus(n,C1)),CN1)),Dist(Power(Times(a,c),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(x,CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),Less(n,CN1)),ZeroQ(Plus(Times(a,d),Times(b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),n_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(C2,a,c,Plus(n,C1)),CN1)),Times(CN1,Dist(Times(Plus(Times(a,d),Times(b,c)),Power(Times(C2,a,c),CN1)),Int(Times(Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x))),Dist(Power(Times(a,c),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(x,CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),Less(n,CN1)),NonzeroQ(Plus(Times(a,d),Times(b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(C2,b,d,Plus(n,C1)),CN1)),Dist(Power(Times(b,d),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1))),x))),And(And(And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),RationalQ(m)),Equal(Plus(m,Times(C2,n),C1),C0)),Greater(m,C1)),ZeroQ(Plus(Times(a,d),Times(b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(C2,b,d,Plus(n,C1)),CN1)),Times(CN1,Dist(Times(Plus(Times(a,d),Times(b,c)),Power(Times(C2,b,d),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x))),Dist(Power(Times(b,d),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1))),x))),And(And(And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),RationalQ(m)),Equal(Plus(m,Times(C2,n),C1),C0)),Greater(m,C1)),NonzeroQ(Plus(Times(a,d),Times(b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_),x_),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(C2,b,d,Plus(n,C1)),CN1)),And(And(FreeQ(List(a,b,c,d,n),x),NonzeroQ(Plus(n,C1))),ZeroQ(Plus(Times(a,d),Times(b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_),x_),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(C2,b,d,Plus(n,C1)),CN1)),Times(CN1,Dist(Times(Plus(Times(a,d),Times(b,c)),Power(Times(C2,b,d),CN1)),Int(Times(Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x)))),And(FreeQ(List(a,b,c,d),x),FractionQ(n)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(b,d,Plus(m,Times(C2,n),C1)),CN1)),Times(CN1,Dist(Times(a,c,Plus(m,Times(CN1,C1)),Power(Times(b,d,Plus(m,Times(C2,n),C1)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x)))),And(And(And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),RationalQ(m)),NonzeroQ(Plus(m,Times(C2,n),C1))),Greater(m,C1)),Or(ZeroQ(Plus(m,n)),ZeroQ(Plus(Times(a,d),Times(b,c))))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(b,d,Plus(m,Times(C2,n),C1)),CN1)),Times(CN1,Dist(Times(Plus(m,n),Plus(Times(a,d),Times(b,c)),Power(Times(b,d,Plus(m,Times(C2,n),C1)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x))),Times(CN1,Dist(Times(a,c,Plus(m,Times(CN1,C1)),Power(Times(b,d,Plus(m,Times(C2,n),C1)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x)))),And(And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),RationalQ(m)),NonzeroQ(Plus(m,Times(C2,n),C1))),Greater(m,C1)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),n_),Power(x_,m_)),x_Symbol),
    Condition(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(a,c,Plus(m,C1)),CN1)),And(And(And(FreeQ(List(a,b,c,d,n),x),NonzeroQ(Plus(m,C1))),ZeroQ(Plus(m,Times(C2,n),C3))),ZeroQ(Plus(Times(a,d),Times(b,c)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(a,c,Plus(m,C1)),CN1)),Times(CN1,Dist(Times(Plus(m,n,C2),Power(Plus(m,C1),CN1),Plus(Times(a,d),Times(b,c)),Power(Times(a,c),CN1)),Int(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x)))),And(And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),RationalQ(m)),Less(m,CN1)),ZeroQ(Plus(m,Times(C2,n),C3))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(a,c,Plus(m,C1)),CN1)),Times(CN1,Dist(Times(Plus(m,Times(C2,n),C3),Power(Plus(m,C1),CN1),b,d,Power(Times(a,c),CN1)),Int(Times(Power(x,Plus(m,C2)),Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x)))),And(And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),RationalQ(m)),Less(m,CN1)),Or(ZeroQ(Plus(m,n,C2)),ZeroQ(Plus(Times(a,d),Times(b,c))))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),n_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(a,c,Plus(m,C1)),CN1)),Times(CN1,Dist(Times(Plus(m,n,C2),Power(Plus(m,C1),CN1),Plus(Times(a,d),Times(b,c)),Power(Times(a,c),CN1)),Int(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x))),Times(CN1,Dist(Times(Plus(m,Times(C2,n),C3),Power(Plus(m,C1),CN1),b,d,Power(Times(a,c),CN1)),Int(Times(Power(x,Plus(m,C2)),Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),n)),x)))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),RationalQ(m)),Less(m,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),p_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Dist(b,Int(Times(Power(Plus(a,Times(b,x)),Plus(n,Times(CN1,C1))),Power(Plus(c,Times(d,x)),p)),x)),Dist(a,Int(Times(Power(Plus(a,Times(b,x)),Plus(n,Times(CN1,C1))),Power(Plus(c,Times(d,x)),p),Power(x,CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(List(n,p))),Greater(n,C0)),IntIntegerQ(Plus(n,Times(CN1,p)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_),p_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Dist(Power(a,CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Plus(c,Times(d,x)),p),Power(x,CN1)),x)),Times(CN1,Dist(Times(b,Power(a,CN1)),Int(Times(Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),p)),x)))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(List(n,p))),Less(n,CN1)),IntIntegerQ(Plus(n,Times(CN1,p)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Sum(Dist(Times(Power(Times(CN1,a),Plus(m,Times(CN1,k))),Power(Power(b,m),CN1),Binomial(m,Plus(m,Times(CN1,k)))),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,k)),Power(Plus(c,Times(d,x)),p)),x)),List(k,C0,m)),And(And(And(And(And(FreeQ(List(a,b,c,d,n,p),x),IntIntegerQ(List(m,Plus(p,Times(CN1,n))))),Greater(m,C0)),Not(IntIntegerQ(n))),Less(Plus(p,Times(CN1,n)),C0)),Or(Greater(m,C3),UnsameQ(n,Rational(CN1,C2)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Sum(Dist(Times(Power(Times(CN1,a),Plus(m,Times(CN1,k))),Power(Power(b,m),CN1),Binomial(m,Plus(m,Times(CN1,k)))),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,k)),Power(Plus(c,Times(d,x)),p)),x)),List(k,C0,Plus(p,Times(CN1,n),Times(CN1,C1)))),Sum(Dist(Times(Power(Times(CN1,a,Power(b,CN1)),Plus(m,Times(CN1,k))),Power(Power(Times(CN1,a),Plus(p,Times(CN1,n))),CN1),Binomial(Plus(m,Times(CN1,k),Times(CN1,C1)),Plus(p,Times(CN1,n),Times(CN1,C1)))),Int(Times(Power(x,k),Power(Plus(a,Times(b,x)),p),Power(Plus(c,Times(d,x)),p)),x)),List(k,C0,Plus(m,Times(CN1,p),n)))),And(And(And(FreeQ(List(a,b,c,d,n,p),x),IntIntegerQ(List(m,Plus(p,Times(CN1,n))))),And(Less(C0,Plus(p,Times(CN1,n))),LessEqual(Plus(p,Times(CN1,n)),m))),Not(IntIntegerQ(n))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),Power(Plus(Times($p(d,true),x_),c_DEFAULT),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Sum(Dist(Times(Power(a,Plus(m,Times(CN1,k))),Power(Power(Times(CN1,b),m),CN1),Binomial(Plus(k,Times(CN1,m),Times(CN1,C1)),Plus(Times(CN1,m),Times(CN1,C1)))),Int(Times(Power(Plus(a,Times(b,x)),Plus(n,k)),Power(Plus(c,Times(d,x)),p)),x)),List(k,C0,Plus(p,Times(CN1,n),Times(CN1,C1)))),Sum(Dist(Times(Power(Times(CN1,b,Power(a,CN1)),k),Power(Power(a,Plus(p,Times(CN1,n))),CN1),Binomial(Plus(p,Times(CN1,n),k,Times(CN1,C1)),Plus(p,Times(CN1,n),Times(CN1,C1)))),Int(Times(Power(x,Plus(m,k)),Power(Plus(a,Times(b,x)),p),Power(Plus(c,Times(d,x)),p)),x)),List(k,C0,Plus(Times(CN1,m),Times(CN1,C1))))),And(And(And(And(FreeQ(List(a,b,c,d,n,p),x),IntIntegerQ(List(m,Plus(p,Times(CN1,n))))),Less(m,C0)),Greater(Plus(p,Times(CN1,n)),C0)),Not(IntIntegerQ(n))))),
SetDelayed(Int(Power(Plus(Times(Power(Power(x_,m_),n_),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Times(Rt(Times(b,Power(a,CN1)),C2),x,ArcTan(Times(Rt(Times(b,Power(a,CN1)),C2),Power(Power(x,m),Power(m,CN1)))),Power(Times(b,Power(Power(x,m),Power(m,CN1))),CN1)),And(And(FreeQ(List(a,b,m,n),x),SameQ(Times(m,n),C2)),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(Power(x_,m_),n_),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Times(CN1,Rt(Times(CN1,b,Power(a,CN1)),C2),x,ArcTanh(Times(Rt(Times(CN1,b,Power(a,CN1)),C2),Power(Power(x,m),Power(m,CN1)))),Power(Times(b,Power(Power(x,m),Power(m,CN1))),CN1)),And(And(FreeQ(List(a,b,m,n),x),SameQ(Times(m,n),C2)),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(x,Power(a,CN1)),Times(CN1,Dist(Times(b,Power(a,CN1)),Int(Power(Plus(b,Times(a,Power(x,Times(CN1,n)))),CN1),x)))),And(And(FreeQ(List(a,b),x),FractionQ(n)),Less(n,C0)))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(ArcSinh(Times(Rt(b,C2),x,Power(Sqrt(a),CN1))),Power(Rt(b,C2),CN1)),And(And(FreeQ(List(a,b),x),PositiveQ(a)),PosQ(b)))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(ArcSin(Times(Rt(Times(CN1,b),C2),x,Power(Sqrt(a),CN1))),Power(Rt(Times(CN1,b),C2),CN1)),And(And(FreeQ(List(a,b),x),PositiveQ(a)),NegQ(b))))
  );
}
