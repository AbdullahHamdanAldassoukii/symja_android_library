package org.matheclipse.core.integrate.rubi42;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi42.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi42.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntegrationRulesForExpressionsInvolvingTrigFunctionsOfTheFollowingForms33 { 
  public static IAST RULES = List( 
SetDelayed(Int(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(x,SymbolHead)),
    Condition(Module(List(Set(g,Numerator(Power(n,CN1)))),Times(g,Subst(Int(Times(Power(x,Plus(g,Times(CN1,C1))),Power(Sin(Plus(a,Times(b,Power(x,Times(n,g))))),p)),x),x,Power(x,Power(g,CN1))))),And(And(FreeQ(List(a,b,p),x),RationalQ(n)),Or(Less(n,C0),FractionQ(n))))),
SetDelayed(Int(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(x,SymbolHead)),
    Condition(Module(List(Set(g,Numerator(Power(n,CN1)))),Times(g,Subst(Int(Times(Power(x,Plus(g,Times(CN1,C1))),Power(Cos(Plus(a,Times(b,Power(x,Times(n,g))))),p)),x),x,Power(x,Power(g,CN1))))),And(And(FreeQ(List(a,b,p),x),RationalQ(n)),Or(Less(n,C0),FractionQ(n))))),
SetDelayed(Int(Sin(Times(Power($p(x),C2),$p(b,true))),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Times(C1D2,Pi)),Power(Rt(b,C2),CN1),FresnelS(Times(Sqrt(Times(C2,Power(Pi,CN1))),Rt(b,C2),x))),FreeQ(b,x))),
SetDelayed(Int(Cos(Times(Power($p(x),C2),$p(b,true))),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Times(C1D2,Pi)),Power(Rt(b,C2),CN1),FresnelC(Times(Sqrt(Times(C2,Power(Pi,CN1))),Rt(b,C2),x))),FreeQ(b,x))),
SetDelayed(Int(Sin(Times(Power(Plus(Times($p(b,true),$p(x)),$p(a,true)),C2),$p(c,true))),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Times(C1D2,Pi)),Power(Times(b,Rt(c,C2)),CN1),FresnelS(Times(Sqrt(Times(C2,Power(Pi,CN1))),Rt(c,C2),Plus(a,Times(b,x))))),FreeQ(List(a,b,c),x))),
SetDelayed(Int(Cos(Times(Power(Plus(Times($p(b,true),$p(x)),$p(a,true)),C2),$p(c,true))),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Times(C1D2,Pi)),Power(Times(b,Rt(c,C2)),CN1),FresnelC(Times(Sqrt(Times(C2,Power(Pi,CN1))),Rt(c,C2),Plus(a,Times(b,x))))),FreeQ(List(a,b,c),x))),
SetDelayed(Int(Sin(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a))),$p(x,SymbolHead)),
    Condition(Plus(Times(Sin(a),Int(Cos(Times(b,Power(x,C2))),x)),Times(Cos(a),Int(Sin(Times(b,Power(x,C2))),x))),FreeQ(List(a,b),x))),
SetDelayed(Int(Cos(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a))),$p(x,SymbolHead)),
    Condition(Plus(Times(Cos(a),Int(Cos(Times(b,Power(x,C2))),x)),Times(CN1,Sin(a),Int(Sin(Times(b,Power(x,C2))),x))),FreeQ(List(a,b),x))),
SetDelayed(Int(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(C1D2,CI,Int(Power(E,Plus(Times(CN1,a,CI),Times(CN1,b,CI,Power(x,n)))),x)),Times(CN1,C1D2,CI,Int(Power(E,Plus(Times(a,CI),Times(b,CI,Power(x,n)))),x))),And(FreeQ(List(a,b,n),x),NonzeroQ(Plus(n,Times(CN1,C2)))))),
SetDelayed(Int(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(C1D2,Int(Power(E,Plus(Times(CN1,a,CI),Times(CN1,b,CI,Power(x,n)))),x)),Times(C1D2,Int(Power(E,Plus(Times(a,CI),Times(b,CI,Power(x,n)))),x))),And(FreeQ(List(a,b,n),x),NonzeroQ(Plus(n,Times(CN1,C2)))))),
SetDelayed(Int(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Power(Sin(Plus(a,Times(b,Power(x,n)))),p),x),x),And(And(FreeQ(List(a,b,n),x),IntegerQ(p)),Greater(p,C1)))),
SetDelayed(Int(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Power(Cos(Plus(a,Times(b,Power(x,n)))),p),x),x),And(And(FreeQ(List(a,b,n),x),IntegerQ(p)),Greater(p,C1)))),
SetDelayed(Int(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(x,SymbolHead)),
    Condition($(Defer($s("Int")),Power(Sin(Plus(a,Times(b,Power(x,n)))),p),x),FreeQ(List(a,b,n,p),x))),
SetDelayed(Int(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(x,SymbolHead)),
    Condition($(Defer($s("Int")),Power(Cos(Plus(a,Times(b,Power(x,n)))),p),x),FreeQ(List(a,b,n,p),x))),
SetDelayed(Int(Power(Sin(Plus(Times(Power($p(u),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(x,SymbolHead)),
    Condition(Times(Power(Coefficient(u,x,C1),CN1),Subst(Int(Power(Sin(Plus(a,Times(b,Power(x,n)))),p),x),x,u)),And(And(FreeQ(List(a,b,n,p),x),LinearQ(u,x)),NonzeroQ(Plus(u,Times(CN1,x)))))),
SetDelayed(Int(Power(Cos(Plus(Times(Power($p(u),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(x,SymbolHead)),
    Condition(Times(Power(Coefficient(u,x,C1),CN1),Subst(Int(Power(Cos(Plus(a,Times(b,Power(x,n)))),p),x),x,u)),And(And(FreeQ(List(a,b,n,p),x),LinearQ(u,x)),NonzeroQ(Plus(u,Times(CN1,x)))))),
SetDelayed(Int(Times(Power($p(x),CN1),Sin(Times(Power($p(x),$p(n)),$p(b,true)))),$p(x,SymbolHead)),
    Condition(Times(SinIntegral(Times(b,Power(x,n))),Power(n,CN1)),FreeQ(List(b,n),x))),
SetDelayed(Int(Times(Cos(Times(Power($p(x),$p(n)),$p(b,true))),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Times(CosIntegral(Times(b,Power(x,n))),Power(n,CN1)),FreeQ(List(b,n),x))),
SetDelayed(Int(Times(Power($p(x),CN1),Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)))),$p(x,SymbolHead)),
    Condition(Plus(Times(Sin(a),Int(Times(Cos(Times(b,Power(x,n))),Power(x,CN1)),x)),Times(Cos(a),Int(Times(Sin(Times(b,Power(x,n))),Power(x,CN1)),x))),FreeQ(List(a,b,n),x))),
SetDelayed(Int(Times(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a))),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(Cos(a),Int(Times(Cos(Times(b,Power(x,n))),Power(x,CN1)),x)),Times(CN1,Sin(a),Int(Times(Sin(Times(b,Power(x,n))),Power(x,CN1)),x))),FreeQ(List(a,b,n),x))),
SetDelayed(Int(Times(Power($p(x),$p(m,true)),Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Times(CN1,Cos(Plus(a,Times(b,Power(x,n)))),Power(Times(b,n),CN1)),And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,Plus(n,Times(CN1,C1)))))))),
SetDelayed(Int(Times(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Sin(Plus(a,Times(b,Power(x,n)))),Power(Times(b,n),CN1)),And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,Plus(n,Times(CN1,C1)))))))),
SetDelayed(Int(Times(Power($p(x),$p(m,true)),Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Times(C2,Power(n,CN1),Subst(Int(Sin(Plus(a,Times(b,Power(x,C2)))),x),x,Power(x,Times(C1D2,n)))),And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,Plus(Times(C1D2,n),Times(CN1,C1)))))))),
SetDelayed(Int(Times(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(C2,Power(n,CN1),Subst(Int(Cos(Plus(a,Times(b,Power(x,C2)))),x),x,Power(x,Times(C1D2,n)))),And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,Plus(Times(C1D2,n),Times(CN1,C1)))))))),
SetDelayed(Int(Times(Power($p(x),$p(m,true)),Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Cos(Plus(a,Times(b,Power(x,n)))),Power(Times(b,n),CN1)),Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Cos(Plus(a,Times(b,Power(x,n))))),x))),And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Or(Less(Less(C0,n),Plus(m,C1)),Less(Less(Plus(m,C1),n),C0))))),
SetDelayed(Int(Times(Power($p(x),$p(m,true)),Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Module(List(Set($s("mn"),Simplify(Plus(m,Times(CN1,n))))),Plus(Times(CN1,Power(x,Plus($s("mn"),C1)),Cos(Plus(a,Times(b,Power(x,n)))),Power(Times(b,n),CN1)),Times(Plus($s("mn"),C1),Power(Times(b,n),CN1),Int(Times(Power(x,$s("mn")),Cos(Plus(a,Times(b,Power(x,n))))),x)))),And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),PositiveIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))))),
SetDelayed(Int(Times(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,n),C1)),Sin(Plus(a,Times(b,Power(x,n)))),Power(Times(b,n),CN1)),Times(CN1,Plus(m,Times(CN1,n),C1),Power(Times(b,n),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Sin(Plus(a,Times(b,Power(x,n))))),x))),And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Or(Less(Less(C0,n),Plus(m,C1)),Less(Less(Plus(m,C1),n),C0))))),
SetDelayed(Int(Times(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set($s("mn"),Simplify(Plus(m,Times(CN1,n))))),Plus(Times(Power(x,Plus($s("mn"),C1)),Sin(Plus(a,Times(b,Power(x,n)))),Power(Times(b,n),CN1)),Times(CN1,Plus($s("mn"),C1),Power(Times(b,n),CN1),Int(Times(Power(x,$s("mn")),Sin(Plus(a,Times(b,Power(x,n))))),x)))),And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),PositiveIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))))),
SetDelayed(Int(Times(Power($p(x),$p(m,true)),Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Sin(Plus(a,Times(b,Power(x,n)))),Power(Plus(m,C1),CN1)),Times(CN1,b,n,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,n)),Cos(Plus(a,Times(b,Power(x,n))))),x))),And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Or(And(Greater(n,C0),Less(m,CN1)),And(Less(n,C0),Greater(m,CN1)))))),
SetDelayed(Int(Times(Power($p(x),$p(m,true)),Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Sin(Plus(a,Times(b,Power(x,n)))),Power(Plus(m,C1),CN1)),Times(CN1,b,n,Power(Plus(m,C1),CN1),Int(Times(Power(x,Simplify(Plus(m,n))),Cos(Plus(a,Times(b,Power(x,n))))),x))),And(FreeQ(List(a,b,m,n),x),NegativeIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))))),
SetDelayed(Int(Times(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Cos(Plus(a,Times(b,Power(x,n)))),Power(Plus(m,C1),CN1)),Times(b,n,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,n)),Sin(Plus(a,Times(b,Power(x,n))))),x))),And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Or(And(Greater(n,C0),Less(m,CN1)),And(Less(n,C0),Greater(m,CN1)))))),
SetDelayed(Int(Times(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Cos(Plus(a,Times(b,Power(x,n)))),Power(Plus(m,C1),CN1)),Times(b,n,Power(Plus(m,C1),CN1),Int(Times(Power(x,Simplify(Plus(m,n))),Sin(Plus(a,Times(b,Power(x,n))))),x))),And(FreeQ(List(a,b,m,n),x),NegativeIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))))),
SetDelayed(Int(Times(Power($p(x),$p(m,true)),Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Plus(Times(C1D2,CI,Int(Times(Power(x,m),Power(E,Plus(Times(CN1,a,CI),Times(CN1,b,CI,Power(x,n))))),x)),Times(CN1,C1D2,CI,Int(Times(Power(x,m),Power(E,Plus(Times(a,CI),Times(b,CI,Power(x,n))))),x))),FreeQ(List(a,b,m,n),x))),
SetDelayed(Int(Times(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(C1D2,Int(Times(Power(x,m),Power(E,Plus(Times(CN1,a,CI),Times(CN1,b,CI,Power(x,n))))),x)),Times(C1D2,Int(Times(Power(x,m),Power(E,Plus(Times(a,CI),Times(b,CI,Power(x,n))))),x))),FreeQ(List(a,b,m,n),x))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(Sin(Plus(a,Times(b,Power(x,n)))),p),Power(Times(Plus(n,Times(CN1,C1)),Power(x,Plus(n,Times(CN1,C1)))),CN1)),Times(b,n,p,Power(Plus(n,Times(CN1,C1)),CN1),Int(Times(Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Cos(Plus(a,Times(b,Power(x,n))))),x))),And(And(And(And(FreeQ(List(a,b),x),IntegersQ(n,p)),ZeroQ(Plus(m,n))),Greater(p,C1)),NonzeroQ(Plus(n,Times(CN1,C1)))))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(Cos(Plus(a,Times(b,Power(x,n)))),p),Power(Times(Plus(n,Times(CN1,C1)),Power(x,Plus(n,Times(CN1,C1)))),CN1)),Times(CN1,b,n,p,Power(Plus(n,Times(CN1,C1)),CN1),Int(Times(Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Sin(Plus(a,Times(b,Power(x,n))))),x))),And(And(And(And(FreeQ(List(a,b),x),IntegersQ(n,p)),ZeroQ(Plus(m,n))),Greater(p,C1)),NonzeroQ(Plus(n,Times(CN1,C1)))))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(n,Power(Sin(Plus(a,Times(b,Power(x,n)))),p),Power(Times(Power(b,C2),Power(n,C2),Power(p,C2)),CN1)),Times(CN1,Power(x,n),Cos(Plus(a,Times(b,Power(x,n)))),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,p),CN1)),Times(Plus(p,Times(CN1,C1)),Power(p,CN1),Int(Times(Power(x,m),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,C2,n),C1))),RationalQ(p)),Greater(p,C1)))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(n,Power(Cos(Plus(a,Times(b,Power(x,n)))),p),Power(Times(Power(b,C2),Power(n,C2),Power(p,C2)),CN1)),Times(Power(x,n),Sin(Plus(a,Times(b,Power(x,n)))),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,p),CN1)),Times(Plus(p,Times(CN1,C1)),Power(p,CN1),Int(Times(Power(x,m),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,C2,n),C1))),RationalQ(p)),Greater(p,C1)))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Plus(m,Times(CN1,n),C1),Power(x,Plus(m,Times(CN1,C2,n),C1)),Power(Sin(Plus(a,Times(b,Power(x,n)))),p),Power(Times(Power(b,C2),Power(n,C2),Power(p,C2)),CN1)),Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Cos(Plus(a,Times(b,Power(x,n)))),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,p),CN1)),Times(Plus(p,Times(CN1,C1)),Power(p,CN1),Int(Times(Power(x,m),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x)),Times(CN1,Plus(m,Times(CN1,n),C1),Plus(m,Times(CN1,C2,n),C1),Power(Times(Power(b,C2),Power(n,C2),Power(p,C2)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,n))),Power(Sin(Plus(a,Times(b,Power(x,n)))),p)),x))),And(And(And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),RationalQ(p)),Greater(p,C1)),Less(Less(C0,Times(C2,n)),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Plus(m,Times(CN1,n),C1),Power(x,Plus(m,Times(CN1,C2,n),C1)),Power(Cos(Plus(a,Times(b,Power(x,n)))),p),Power(Times(Power(b,C2),Power(n,C2),Power(p,C2)),CN1)),Times(Power(x,Plus(m,Times(CN1,n),C1)),Sin(Plus(a,Times(b,Power(x,n)))),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,p),CN1)),Times(Plus(p,Times(CN1,C1)),Power(p,CN1),Int(Times(Power(x,m),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x)),Times(CN1,Plus(m,Times(CN1,n),C1),Plus(m,Times(CN1,C2,n),C1),Power(Times(Power(b,C2),Power(n,C2),Power(p,C2)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,n))),Power(Cos(Plus(a,Times(b,Power(x,n)))),p)),x))),And(And(And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),RationalQ(p)),Greater(p,C1)),Less(Less(C0,Times(C2,n)),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Sin(Plus(a,Times(b,Power(x,n)))),p),Power(Plus(m,C1),CN1)),Times(CN1,b,n,p,Power(x,Plus(m,n,C1)),Cos(Plus(a,Times(b,Power(x,n)))),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(Plus(m,C1),Plus(m,n,C1)),CN1)),Times(CN1,Power(b,C2),Power(n,C2),Power(p,C2),Power(Times(Plus(m,C1),Plus(m,n,C1)),CN1),Int(Times(Power(x,Plus(m,Times(C2,n))),Power(Sin(Plus(a,Times(b,Power(x,n)))),p)),x)),Times(Power(b,C2),Power(n,C2),p,Plus(p,Times(CN1,C1)),Power(Times(Plus(m,C1),Plus(m,n,C1)),CN1),Int(Times(Power(x,Plus(m,Times(C2,n))),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x))),And(And(And(And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),RationalQ(p)),Greater(p,C1)),Less(Less(C0,Times(C2,n)),Plus(C1,Times(CN1,m)))),NonzeroQ(Plus(m,n,C1))))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Cos(Plus(a,Times(b,Power(x,n)))),p),Power(Plus(m,C1),CN1)),Times(b,n,p,Power(x,Plus(m,n,C1)),Sin(Plus(a,Times(b,Power(x,n)))),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(Plus(m,C1),Plus(m,n,C1)),CN1)),Times(CN1,Power(b,C2),Power(n,C2),Power(p,C2),Power(Times(Plus(m,C1),Plus(m,n,C1)),CN1),Int(Times(Power(x,Plus(m,Times(C2,n))),Power(Cos(Plus(a,Times(b,Power(x,n)))),p)),x)),Times(Power(b,C2),Power(n,C2),p,Plus(p,Times(CN1,C1)),Power(Times(Plus(m,C1),Plus(m,n,C1)),CN1),Int(Times(Power(x,Plus(m,Times(C2,n))),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x))),And(And(And(And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),RationalQ(p)),Greater(p,C1)),Less(Less(C0,Times(C2,n)),Plus(C1,Times(CN1,m)))),NonzeroQ(Plus(m,n,C1))))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Plus(m,C1),CN1),Subst(Int(Power(Sin(Plus(a,Times(b,Power(x,Simplify(Times(n,Power(Plus(m,C1),CN1))))))),p),x),x,Power(x,Plus(m,C1)))),And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(m,C1))),PositiveIntegerQ(Simplify(Times(n,Power(Plus(m,C1),CN1))))))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Plus(m,C1),CN1),Subst(Int(Power(Cos(Plus(a,Times(b,Power(x,Simplify(Times(n,Power(Plus(m,C1),CN1))))))),p),x),x,Power(x,Plus(m,C1)))),And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(m,C1))),PositiveIntegerQ(Simplify(Times(n,Power(Plus(m,C1),CN1))))))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Power(x,m),Power(Sin(Plus(a,Times(b,Power(x,n)))),p),x),x),And(And(And(And(FreeQ(List(a,b,m,n),x),IntegerQ(p)),Greater(p,C1)),Not(FractionQ(m))),Not(FractionQ(n))))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Power(x,m),Power(Cos(Plus(a,Times(b,Power(x,n)))),p),x),x),And(And(And(And(FreeQ(List(a,b,m,n),x),IntegerQ(p)),Greater(p,C1)),Not(FractionQ(m))),Not(FractionQ(n))))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,n),Cos(Plus(a,Times(b,Power(x,n)))),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,C1)),Power(Times(b,n,Plus(p,C1)),CN1)),Times(CN1,n,Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,C2)),Power(Times(Power(b,C2),Power(n,C2),Plus(p,C1),Plus(p,C2)),CN1)),Times(Plus(p,C2),Power(Plus(p,C1),CN1),Int(Times(Power(x,m),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,C2))),x))),And(And(And(And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,C2,n),C1))),RationalQ(p)),Less(p,CN1)),Unequal(p,CN2)))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,n),Sin(Plus(a,Times(b,Power(x,n)))),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,C1)),Power(Times(b,n,Plus(p,C1)),CN1)),Times(CN1,n,Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,C2)),Power(Times(Power(b,C2),Power(n,C2),Plus(p,C1),Plus(p,C2)),CN1)),Times(Plus(p,C2),Power(Plus(p,C1),CN1),Int(Times(Power(x,m),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,C2))),x))),And(And(And(And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,C2,n),C1))),RationalQ(p)),Less(p,CN1)),Unequal(p,CN2)))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,n),C1)),Cos(Plus(a,Times(b,Power(x,n)))),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,C1)),Power(Times(b,n,Plus(p,C1)),CN1)),Times(CN1,Plus(m,Times(CN1,n),C1),Power(x,Plus(m,Times(CN1,C2,n),C1)),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,C2)),Power(Times(Power(b,C2),Power(n,C2),Plus(p,C1),Plus(p,C2)),CN1)),Times(Plus(p,C2),Power(Plus(p,C1),CN1),Int(Times(Power(x,m),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,C2))),x)),Times(Plus(m,Times(CN1,n),C1),Plus(m,Times(CN1,C2,n),C1),Power(Times(Power(b,C2),Power(n,C2),Plus(p,C1),Plus(p,C2)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,n))),Power(Sin(Plus(a,Times(b,Power(x,n)))),Plus(p,C2))),x))),And(And(And(And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),RationalQ(p)),Less(p,CN1)),Unequal(p,CN2)),Less(Less(C0,Times(C2,n)),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Sin(Plus(a,Times(b,Power(x,n)))),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,C1)),Power(Times(b,n,Plus(p,C1)),CN1)),Times(CN1,Plus(m,Times(CN1,n),C1),Power(x,Plus(m,Times(CN1,C2,n),C1)),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,C2)),Power(Times(Power(b,C2),Power(n,C2),Plus(p,C1),Plus(p,C2)),CN1)),Times(Plus(p,C2),Power(Plus(p,C1),CN1),Int(Times(Power(x,m),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,C2))),x)),Times(Plus(m,Times(CN1,n),C1),Plus(m,Times(CN1,C2,n),C1),Power(Times(Power(b,C2),Power(n,C2),Plus(p,C1),Plus(p,C2)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,n))),Power(Cos(Plus(a,Times(b,Power(x,n)))),Plus(p,C2))),x))),And(And(And(And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),RationalQ(p)),Less(p,CN1)),Unequal(p,CN2)),Less(Less(C0,Times(C2,n)),Plus(m,C1)))))
  );
}
