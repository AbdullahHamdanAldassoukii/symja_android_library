package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules21 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Power(c,p),CN1),Int(Times(Power(x,m),Power(Plus(Times(C1D2,b),Times(c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Plus(b,Times(C2,c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(C2,c,pn,Plus(Times(C2,p),C1)),CN1)),And(And(And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),ZeroQ(Plus(m,Times(CN1,pn),C1))),NonzeroQ(Plus(Times(C2,p),C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(x,Plus(m,C1)),Plus(b,Times(C2,c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(b,Plus(m,C1)),CN1)),And(And(And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),ZeroQ(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_)),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn))))),Power(pn,CN1)),Times(b,Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn))))),Log(x),Power(Plus(b,Times(C2,c,Power(x,pn))),CN1))),And(And(FreeQ(List(a,b,c,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn))))),Power(Plus(b,Times(C2,c,Power(x,pn))),CN1),Int(Plus(Times(b,Power(x,m)),Times(C2,c,Power(x,Plus(m,pn)))),x)),And(And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(m,C1))),ZeroQ(Plus(m,pn,C1))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn))))),Power(Plus(m,pn,C1),CN1)),Times(b,pn,Power(x,Plus(m,C1)),Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn))))),Power(Times(Plus(m,C1),Plus(m,pn,C1),Plus(b,Times(C2,c,Power(x,pn)))),CN1))),And(And(And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(m,Times(CN1,pn),C1))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(m,pn,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1D2),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,C1)),Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn))))),Power(Times(a,pn),CN1)),Times(CN1,b,Power(Times(C2,a),CN1),Int(Power(Times(x,Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))))),CN1),x))),And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(m,pn,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(C2,a,pn,Plus(p,C1),Plus(Times(C2,p),C1)),CN1)),Times(CN1,Power(x,Plus(m,C1)),Plus(Times(C2,a),Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(C2,a,pn,Plus(Times(C2,p),C1)),CN1))),And(And(And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),ZeroQ(Plus(m,Times(C2,pn,Plus(p,C1)),C1))),NonzeroQ(Plus(Times(C2,p),C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(C2,c,pn,Plus(p,C1)),CN1)),Times(CN1,b,Power(Times(C2,c),CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x))),And(And(And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),ZeroQ(Plus(m,Times(CN1,C2,pn),C1))),NonzeroQ(Plus(p,QQ(3L,2L)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Plus(m,Times(C2,pn,p),C1),CN1)),Times(pn,p,Power(x,Plus(m,C1)),Plus(Times(C2,a),Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1))),Power(Times(Plus(m,C1),Plus(m,Times(C2,pn,p),C1)),CN1)),Times(CN1,b,p,Sqr(pn),Plus(Times(C2,p),Times(CN1,C1)),Power(Times(Plus(m,C1),Plus(m,Times(C2,pn,p),C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn,p)),Not(IntegerQ(p))),NonzeroQ(Plus(m,Times(C2,pn,p),C1))),And(LessEqual(CN2,m),Less(m,CN1))),Greater(pn,C0)),Greater(p,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Plus(m,Times(CN1,pn,Plus(Times(C2,p),Times(CN1,C1))),C1),Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Plus(m,C1),Plus(m,pn,C1)),CN1)),Times(pn,p,Power(x,Plus(m,C1)),Plus(Times(C2,a),Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1))),Power(Times(Plus(m,C1),Plus(m,pn,C1)),CN1)),Times(C2,c,p,Sqr(pn),Plus(Times(C2,p),Times(CN1,C1)),Power(Times(Plus(m,C1),Plus(m,pn,C1)),CN1),Int(Times(Power(x,Plus(m,Times(C2,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn,p)),Not(IntegerQ(p))),NonzeroQ(Plus(m,pn,C1))),Less(m,CN2)),Greater(pn,C0)),Greater(p,C1)),Not(And(NegativeIntegerQ(Times(Plus(m,Times(C2,pn,Plus(p,C1)),C1),Power(pn,CN1))),Greater(Plus(Times(Plus(m,Times(C2,pn,Plus(p,C1)),C1),Power(pn,CN1)),p),C0)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Plus(m,Times(C2,pn,p),C1),CN1)),Times(pn,p,Power(x,Plus(m,C1)),Plus(Times(C2,a),Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1))),Power(Times(Plus(m,Times(C2,pn,p),C1),Plus(m,Times(pn,Plus(Times(C2,p),Times(CN1,C1))),C1)),CN1)),Times(C2,a,Sqr(pn),p,Plus(Times(C2,p),Times(CN1,C1)),Power(Times(Plus(m,Times(C2,pn,p),C1),Plus(m,Times(pn,Plus(Times(C2,p),Times(CN1,C1))),C1)),CN1),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(m,Times(C2,pn,p),C1))),NonzeroQ(Plus(m,Times(pn,Plus(Times(C2,p),Times(CN1,C1))),C1))),RationalQ(p)),Greater(p,C1)),Not(And(NegativeIntegerQ(Times(Plus(m,Times(C2,pn,Plus(p,C1)),C1),Power(pn,CN1))),Greater(Plus(Times(Plus(m,Times(C2,pn,Plus(p,C1)),C1),Power(pn,CN1)),p),C0)))),Not(And(And(And(And(IntegersQ(m,pn),Greater(m,C0)),Greater(pn,C0)),Divisible(Plus(m,C1),pn)),Or(Not(IntegerQ(Times(C2,p))),Less(Plus(Times(Plus(m,C1),Power(pn,CN1)),Times(CN1,C1)),Times(C2,p)))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(b,Sqr(pn),Plus(p,C1),Plus(Times(C2,p),C1)),CN1)),Times(CN1,Power(x,Plus(m,C1)),Plus(b,Times(C2,c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(b,pn,Plus(Times(C2,p),C1)),CN1)),Times(CN1,Plus(m,Times(CN1,pn),C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),Power(Times(b,Sqr(pn),Plus(p,C1),Plus(Times(C2,p),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn,p)),Not(IntegerQ(p))),NonzeroQ(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))),And(Less(Less(C0,pn),Plus(m,C1)),LessEqual(Plus(m,C1),Times(C2,pn)))),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(m,Times(CN1,C3,pn),Times(CN1,C2,pn,p),C1),Power(x,Plus(m,Times(CN1,C2,pn),C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(C2,c,Sqr(pn),Plus(p,C1),Plus(Times(C2,p),C1)),CN1)),Times(CN1,Power(x,Plus(m,Times(CN1,C2,pn),C1)),Plus(Times(C2,a),Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(C2,c,pn,Plus(Times(C2,p),C1)),CN1)),Times(Plus(m,Times(CN1,pn),C1),Plus(m,Times(CN1,C2,pn),C1),Power(Times(C2,c,Sqr(pn),Plus(p,C1),Plus(Times(C2,p),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn,p)),Not(IntegerQ(p))),NonzeroQ(Plus(m,Times(CN1,pn),C1))),NonzeroQ(Plus(m,Times(CN1,C2,pn),C1))),Less(Less(C0,Times(C2,pn)),Plus(m,C1))),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(C2,a,Sqr(pn),Plus(p,C1),Plus(Times(C2,p),C1)),CN1)),Times(CN1,Power(x,Plus(m,C1)),Plus(Times(C2,a),Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(C2,a,pn,Plus(Times(C2,p),C1)),CN1)),Times(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),Plus(m,Times(C2,pn,Plus(p,C1)),C1),Power(Times(C2,a,Sqr(pn),Plus(p,C1),Plus(Times(C2,p),C1)),CN1),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))),NonzeroQ(Plus(m,Times(C2,pn,Plus(p,C1)),C1))),RationalQ(p)),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Plus(b,Times(C2,c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(C2,c,Plus(m,Times(C2,pn,p),C1)),CN1)),Times(CN1,b,Plus(m,Times(CN1,pn),C1),Power(Times(C2,c,Plus(m,Times(C2,pn,p),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn)),Not(IntegerQ(p))),NonzeroQ(Plus(m,Times(CN1,pn),C1))),NonzeroQ(Plus(m,Times(C2,pn,p),C1))),Less(Less(C0,pn),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(b,Times(C2,c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(b,Plus(m,C1)),CN1)),Times(CN1,C2,c,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),Power(Times(b,Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn)),Not(IntegerQ(p))),NonzeroQ(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))),Less(m,CN1)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Power(Plus(Times(C1D2,b),Times(c,Power(x,pn))),Times(C2,p)),CN1),Int(Times(Power(x,m),Power(Plus(Times(C1D2,b),Times(c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x),x),And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),x),x,Power(x,pn))),And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(m,Times(CN1,pn),C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,Plus(m,Times(C2,pn,p))),Power(Plus(c,Times(b,Power(x,Times(CN1,pn))),Times(a,Power(x,Times(CN2,pn)))),p)),x),And(And(And(And(And(FreeQ(List(a,b,c,m),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NegativeIntegerQ(p)),RationalQ(pn)),Less(pn,C0)))),
ISetDelayed(Int(Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),x_),CN1),x_Symbol),
    Condition(Plus(Times(Log(x),Power(a,CN1)),Times(CN1,Power(a,CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Plus(b,Times(c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(FreeQ(List(a,b,c,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Sqr(x_),b_DEFAULT),Times(Power(x_,C4),c_DEFAULT),a_),CN1),Sqr(x_)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,Power(c,CN1)),C2))),Plus(Times(C1D2,Int(Times(Plus(q,Sqr(x)),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1)),x)),Times(CN1,C1D2,Int(Times(Plus(q,Times(CN1,Sqr(x))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1)),x)))),And(And(FreeQ(List(a,b,c),x),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PosQ(Times(a,c))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Plus(Times(C2,c,q),Times(CN1,b,c)),C2))),Plus(Times(c,Power(Times(C2,r),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1D2,pn))),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)),Times(CN1,c,Power(Times(C2,r),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1D2,pn))),Power(Plus(q,Times(r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)))),Not(NegativeQ(Plus(Times(C2,c,q),Times(CN1,b,c)))))),And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(Times(C1D2,pn))),IntegerQ(m)),CoprimeQ(Plus(m,C1),pn)),Less(And(Less(C1,Times(C1D2,pn)),LessEqual(Times(C1D2,pn),m)),Times(C2,pn))),PosQ(Times(a,c))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Plus(Times(C2,c,Power(q,CN1),Int(Times(Power(x,m),Power(Plus(b,Times(CN1,q),Times(C2,c,Power(x,pn))),CN1)),x)),Times(CN1,C2,c,Power(q,CN1),Int(Times(Power(x,m),Power(Plus(b,q,Times(C2,c,Power(x,pn))),CN1)),x)))),And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),IntegerQ(m)),CoprimeQ(Plus(m,C1),pn)),Less(Less(C0,m),pn)),Not(And(And(IntegerQ(Times(C1D2,pn)),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PosQ(Times(a,c))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Plus(Times(Plus(Times(b,Power(Times(C2,q),CN1)),C1D2),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(Times(C1D2,b),Times(C1D2,q),Times(c,Power(x,pn))),CN1)),x)),Times(CN1,Plus(Times(b,Power(Times(C2,q),CN1)),Times(CN1,C1D2)),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(Times(C1D2,b),Times(CN1,C1D2,q),Times(c,Power(x,pn))),CN1)),x)))),And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),IntegerQ(m)),CoprimeQ(Plus(m,C1),pn)),And(LessEqual(pn,m),Less(m,Times(C2,pn)))),Not(And(And(IntegerQ(Times(C1D2,pn)),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PosQ(Times(a,c))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),pn))),Condition(Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,Times(pn,Power(g,CN1)))),Times(c,Power(x,Times(C2,pn,Power(g,CN1))))),CN1)),x),x,Power(x,g))),Unequal(g,C1))),And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn)),Less(Less(C0,Plus(m,C1)),Times(C2,pn))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_)),x_Symbol),
    Condition(Int(PolynomialDivide(Power(x,m),Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),x),x),And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegersQ(m,pn)),Less(Less(C0,Times(C3,pn)),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C2,pn),C1)),Power(Times(c,Plus(m,Times(CN1,C2,pn),C1)),CN1)),Times(CN1,Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Plus(a,Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn)),Less(Less(C0,Times(C2,pn)),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Power(a,CN1),Int(Times(Power(x,Plus(m,pn)),Plus(b,Times(c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn)),Greater(pn,C0)),Less(Plus(m,C1),C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(pn,CN1))),Times(CN1,C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),CN1)),x),x,Power(x,pn))),And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegerQ(Simplify(Times(Plus(m,C1),Power(pn,CN1))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Plus(Times(C2,c,Power(q,CN1),Int(Times(Power(x,m),Power(Plus(b,Times(CN1,q),Times(C2,c,Power(x,pn))),CN1)),x)),Times(CN1,C2,c,Power(q,CN1),Int(Times(Power(x,m),Power(Plus(b,q,Times(C2,c,Power(x,pn))),CN1)),x)))),And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,CN1)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(x,CN1)),x),x,Power(x,pn))),And(And(And(FreeQ(List(a,b,c,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))))),
ISetDelayed(Int(Times(Power(Plus(Times(Sqr(x_),b_DEFAULT),Times(Power(x_,C4),c_DEFAULT),a_),CN1D2),Sqr(x_)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Plus(Times(CN1,Plus(b,Times(CN1,q)),Power(Times(C2,c),CN1),Int(Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1D2),x)),Times(Power(Times(C2,c),CN1),Int(Times(Plus(b,Times(CN1,q),Times(C2,c,Sqr(x))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1D2)),x)))),And(FreeQ(List(a,b,c),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),pn))),Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,Times(pn,Power(g,CN1)))),Times(c,Power(x,Times(C2,pn,Power(g,CN1))))),p)),x),x,Power(x,g)))),And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(m,pn,p)),Not(PositiveIntegerQ(p))),Unequal(m,CN1)),Or(Not(PositiveIntegerQ(pn)),And(And(Less(Less(C0,Plus(m,C1)),Times(C2,pn)),And(LessEqual(CN1,p),Less(p,C0))),Not(And(IntegerQ(m),CoprimeQ(Plus(m,C1),pn)))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Simplify(Times(Plus(m,C1),Power(pn,CN1))))),Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(x,Plus(g,Times(CN1,C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x),x,Power(x,pn))),And(IntegerQ(g),Or(Greater(g,C0),Not(PositiveIntegerQ(pn)))))),And(And(And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(pn,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Simplify(Times(pn,Power(Plus(m,C1),CN1))))),Condition(Times(Power(Plus(m,C1),CN1),Subst(Int(Power(Plus(a,Times(b,Power(x,g)),Times(c,Power(x,Times(C2,g)))),p),x),x,Power(x,Plus(m,C1)))),And(IntegerQ(g),Or(Greater(g,C0),Not(PositiveIntegerQ(pn)))))),And(And(And(And(And(FreeQ(List(a,b,c,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),RationalQ(p)),And(LessEqual(CN1,p),Less(p,C0))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Plus(Times(b,pn,p),Times(c,Plus(m,Times(pn,Plus(Times(C2,p),Times(CN1,C1))),C1),Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(c,Plus(m,Times(C2,pn,p),C1),Plus(m,Times(pn,Plus(Times(C2,p),Times(CN1,C1))),C1)),CN1)),Times(pn,p,Power(Times(c,Plus(m,Times(C2,pn,p),C1),Plus(m,Times(pn,Plus(Times(C2,p),Times(CN1,C1))),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(CN1,a,b,Plus(m,Times(CN1,pn),C1)),Times(Plus(Times(C2,a,c,Plus(m,Times(pn,Plus(Times(C2,p),Times(CN1,C1))),C1)),Times(CN1,Sqr(b),Plus(m,Times(pn,Plus(p,Times(CN1,C1))),C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C1))),PositiveIntegerQ(pn)),RationalQ(m,p)),Greater(p,C0)),GreaterEqual(Plus(m,Times(CN1,pn)),C0)),Unequal(Plus(m,Times(C2,pn,p),C1),C0)),Unequal(Plus(m,Times(pn,Plus(Times(C2,p),Times(CN1,C1))),C1),C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Plus(m,C1),CN1)),Times(CN1,pn,p,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,pn)),Plus(b,Times(C2,c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C1))),PositiveIntegerQ(pn)),RationalQ(m,p)),Greater(p,C0)),LessEqual(Plus(m,pn),C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Plus(m,Times(C2,pn,p),C1),CN1)),Times(pn,p,Power(Plus(m,Times(C2,pn,p),C1),CN1),Int(Times(Power(x,m),Plus(Times(C2,a),Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C1))),PositiveIntegerQ(pn)),RationalQ(m,p)),Greater(p,C0)),Greater(Plus(m,pn),C0)),Unequal(Plus(m,Times(C2,pn,p),C1),C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,C2,pn),C1)),Plus(Times(C2,a),Times(b,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1)),Times(Power(Times(pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Plus(Times(C2,a,Plus(m,Times(CN1,C2,pn),C1)),Times(b,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C1))),PositiveIntegerQ(pn)),RationalQ(m,p)),Less(p,CN1)),Greater(m,Plus(Times(C2,pn),Times(CN1,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Plus(b,Times(C2,c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1)),Times(CN1,Power(Times(pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Plus(Times(b,Plus(m,Times(CN1,pn),C1)),Times(C2,c,Plus(m,Times(C2,pn,Plus(p,C1)),C1),Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C1))),PositiveIntegerQ(pn)),RationalQ(m,p)),Less(p,CN1)),Less(Less(Plus(pn,Times(CN1,C1)),m),Plus(Times(C2,pn),Times(CN1,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,C1)),Plus(Sqr(b),Times(CN1,C2,a,c),Times(b,c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(a,pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1)),Times(Power(Times(a,pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1),Int(Times(Power(x,m),Simp(Plus(Times(Sqr(b),Plus(Times(pn,Plus(p,C1)),m,C1)),Times(CN1,C2,a,c,Plus(m,Times(C2,pn,Plus(p,C1)),C1)),Times(b,c,Plus(Times(C2,pn,p),Times(C3,pn),m,C1),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C1))),PositiveIntegerQ(pn)),RationalQ(m,p)),Less(p,CN1)),Less(m,Plus(pn,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C2,pn),C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(c,Plus(m,Times(C2,pn,p),C1)),CN1)),Times(CN1,Power(Times(c,Plus(m,Times(C2,pn,p),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Simp(Plus(Times(a,Plus(m,Times(CN1,C2,pn),C1)),Times(b,Plus(m,Times(pn,Plus(p,Times(CN1,C1))),C1),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C1))),PositiveIntegerQ(pn)),RationalQ(m,p)),And(LessEqual(CN1,p),Less(p,C0))),GreaterEqual(m,Times(C2,pn))),Unequal(Plus(m,Times(C2,pn,p),C1),C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Power(Times(a,Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Plus(Times(b,Plus(m,Times(pn,Plus(p,C1)),C1)),Times(c,Plus(m,Times(C2,pn,Plus(p,C1)),C1),Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C1))),PositiveIntegerQ(pn)),RationalQ(m,p)),And(LessEqual(CN1,p),Less(p,C0))),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Plus(m,C1),Power(Plus(C1,Times(CN1,C2,c,Power(x,pn),Power(Plus(Times(CN1,b),Sqrt(Plus(Sqr(b),Times(CN1,C4,a,c)))),CN1))),p),Power(Plus(C1,Times(C2,c,Power(x,pn),Power(Plus(b,Sqrt(Plus(Sqr(b),Times(CN1,C4,a,c)))),CN1))),p)),CN1),AppellF1(Times(Plus(m,C1),Power(pn,CN1)),Times(CN1,p),Times(CN1,p),Plus(C1,Times(Plus(m,C1),Power(pn,CN1))),Times(CN2,c,Power(x,pn),Power(Plus(b,Sqrt(Plus(Sqr(b),Times(CN1,C4,a,c)))),CN1)),Times(C2,c,Power(x,pn),Power(Plus(Times(CN1,b),Sqrt(Plus(Sqr(b),Times(CN1,C4,a,c)))),CN1)))),And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),Not(PositiveIntegerQ(p))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(v_,pn_),b_DEFAULT),Times(Power(w_,j_DEFAULT),c_DEFAULT),a_),p_),Power(u_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(u,m),Power(Times(Coefficient(v,x,C1),Power(v,m)),CN1),Subst(Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x),x,v)),And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),LinearPairQ(u,v,x)),ZeroQ(Plus(v,Times(CN1,w)))))),
ISetDelayed(Int(Power(Plus(Times(Power(x_,j_),b_DEFAULT),Times(Power(x_,pn_DEFAULT),c_DEFAULT),a_DEFAULT),p_DEFAULT),x_Symbol),
    Condition(Int(Times(Power(Plus(b,Times(a,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Power(x,Times(pn,p)),CN1)),x),And(And(And(FreeQ(List(a,b,c,pn,p),x),ZeroQ(Plus(j,pn))),IntegerQ(p)),PosQ(pn)))),
ISetDelayed(Int(Power(Plus(Times(Power(x_,j_),b_DEFAULT),Times(Power(x_,pn_DEFAULT),c_DEFAULT),a_DEFAULT),p_DEFAULT),x_Symbol),
    Condition(Times(Power(x,Times(pn,p)),Power(Plus(a,Times(b,Power(Power(x,pn),CN1)),Times(c,Power(x,pn))),p),Power(Power(Plus(b,Times(a,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),CN1),Int(Times(Power(Plus(b,Times(a,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Power(x,Times(pn,p)),CN1)),x)),And(And(And(FreeQ(List(a,b,c,pn,p),x),ZeroQ(Plus(j,pn))),Not(IntegerQ(p))),PosQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,j_),b_DEFAULT),Times(Power(x_,pn_DEFAULT),c_DEFAULT),a_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,Plus(m,Times(CN1,pn,p))),Power(Plus(b,Times(a,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x),And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,pn))),IntegerQ(p)),PosQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,j_),b_DEFAULT),Times(Power(x_,pn_DEFAULT),c_DEFAULT),a_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(x,Times(pn,p)),Power(Plus(a,Times(b,Power(Power(x,pn),CN1)),Times(c,Power(x,pn))),p),Power(Power(Plus(b,Times(a,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn,p))),Power(Plus(b,Times(a,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x)),And(And(And(FreeQ(List(a,b,c,m,pn,p),x),ZeroQ(Plus(j,pn))),Not(IntegerQ(p))),PosQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(Times(Power(x_,CN1),pd_DEFAULT),pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(pd,Plus(m,C1)),Subst(Int(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(Power(pd,Times(C2,pn)),CN1),Power(x,Times(C2,pn)))),p),Power(Power(x,Plus(m,C2)),CN1)),x),x,Times(pd,Power(x,CN1)))),And(And(And(FreeQ(List(a,b,c,pd,pn,p),x),ZeroQ(Plus(j,Times(C2,pn)))),IntegerQ(Times(C2,pn))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(Times(Power(x_,CN1),pd_DEFAULT),pn_),b_DEFAULT),Times(Power(Times(Power(x_,CN1),pd_DEFAULT),j_DEFAULT),c_DEFAULT),a_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(pd,Plus(m,C1)),Subst(Int(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Power(x,Plus(m,C2)),CN1)),x),x,Times(pd,Power(x,CN1)))),And(And(FreeQ(List(a,b,c,pd,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(Times(Power(x_,CN1),pd_DEFAULT),pn_),b_DEFAULT),Times(Power(x_,j_DEFAULT),c_DEFAULT),a_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,pd,Power(x,m),Power(Times(pd,Power(x,CN1)),m),Subst(Int(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(Power(pd,Times(C2,pn)),CN1),Power(x,Times(C2,pn)))),p),Power(Power(x,Plus(m,C2)),CN1)),x),x,Times(pd,Power(x,CN1)))),And(And(And(FreeQ(List(a,b,c,pd,pn,p),x),ZeroQ(Plus(j,Times(C2,pn)))),IntegerQ(Times(C2,pn))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(Times(Power(x_,CN1),pd_DEFAULT),pn_),b_DEFAULT),Times(Power(Times(Power(x_,CN1),pd_DEFAULT),j_DEFAULT),c_DEFAULT),a_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,pd,Power(x,m),Power(Times(pd,Power(x,CN1)),m),Subst(Int(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Power(x,Plus(m,C2)),CN1)),x),x,Times(pd,Power(x,CN1)))),And(And(FreeQ(List(a,b,c,pd,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(u_,p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(ExpandToSum(u,x),p)),x),And(And(FreeQ(List(m,p),x),TrinomialQ(u,x)),Not(TrinomialMatchQ(u,x)))))
  );
}
