package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules88 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(c,Times(pd,x)),m),Cos(Plus(a,Times(b,x))),Power(b,CN1)),Times(pd,m,Power(b,CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Cos(Plus(a,Times(b,x)))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m)),Greater(m,C0)))),
ISetDelayed(Int(Times(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),m),Sin(Plus(a,Times(b,x))),Power(b,CN1)),Times(CN1,pd,m,Power(b,CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Sin(Plus(a,Times(b,x)))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m)),Greater(m,C0)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),CN1),Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Times(SinIntegral(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(pd,CN1)),And(FreeQ(List(a,b,c,pd),x),ZeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),CN1)),x_Symbol),
    Condition(Times(CosIntegral(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(pd,CN1)),And(FreeQ(List(a,b,c,pd),x),ZeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),CN1),Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(Cos(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))),Int(Times(Sin(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(Plus(c,Times(pd,x)),CN1)),x)),Times(CN1,Sin(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))),Int(Times(Cos(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(Plus(c,Times(pd,x)),CN1)),x))),And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),CN1)),x_Symbol),
    Condition(Plus(Times(Cos(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))),Int(Times(Cos(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(Plus(c,Times(pd,x)),CN1)),x)),Times(Sin(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))),Int(Times(Sin(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(Plus(c,Times(pd,x)),CN1)),x))),And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),CN1D2),Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Times(C2,Power(pd,CN1),Subst(Int(Sin(Times(b,Sqr(x),Power(pd,CN1))),x),x,Sqrt(Plus(c,Times(pd,x))))),And(FreeQ(List(a,b,c,pd),x),ZeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),CN1D2)),x_Symbol),
    Condition(Times(C2,Power(pd,CN1),Subst(Int(Cos(Times(b,Sqr(x),Power(pd,CN1))),x),x,Sqrt(Plus(c,Times(pd,x))))),And(FreeQ(List(a,b,c,pd),x),ZeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),CN1D2),Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(Cos(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))),Int(Times(Sin(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(Plus(c,Times(pd,x)),CN1D2)),x)),Times(CN1,Sin(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))),Int(Times(Cos(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(Plus(c,Times(pd,x)),CN1D2)),x))),And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),CN1D2)),x_Symbol),
    Condition(Plus(Times(Cos(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))),Int(Times(Cos(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(Plus(c,Times(pd,x)),CN1D2)),x)),Times(Sin(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))),Int(Times(Sin(Plus(Times(b,c,Power(pd,CN1)),Times(b,x))),Power(Plus(c,Times(pd,x)),CN1D2)),x))),And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_),Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Sin(Plus(a,Times(b,x))),Power(Times(pd,Plus(m,C1)),CN1)),Times(CN1,b,Power(Times(pd,Plus(m,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Cos(Plus(a,Times(b,x)))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Cos(Plus(a,Times(b,x))),Power(Times(pd,Plus(m,C1)),CN1)),Times(b,Power(Times(pd,Plus(m,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Sin(Plus(a,Times(b,x)))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(C1D2,CI,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(E,Plus(Times(CN1,a,CI),Times(CN1,b,CI,x)))),x)),Times(CN1,C1D2,CI,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(E,Plus(Times(a,CI),Times(b,CI,x)))),x))),FreeQ(List(a,b,c,pd,m),x))),
ISetDelayed(Int(Times(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(C1D2,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(E,Plus(Times(CN1,a,CI),Times(CN1,b,CI,x)))),x)),Times(C1D2,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(E,Plus(Times(a,CI),Times(b,CI,x)))),x))),FreeQ(List(a,b,c,pd,m),x))),
ISetDelayed(Int(Times(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(pd,Power(Sin(Plus(a,Times(b,x))),pn),Power(Times(Sqr(b),Sqr(pn)),CN1)),Times(CN1,Plus(c,Times(pd,x)),Cos(Plus(a,Times(b,x))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1))),Power(Times(b,pn),CN1)),Times(Plus(pn,Times(CN1,C1)),Power(pn,CN1),Int(Times(Plus(c,Times(pd,x)),Power(Sin(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(pn)),Greater(pn,C1)))),
ISetDelayed(Int(Times(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(pd,Power(Cos(Plus(a,Times(b,x))),pn),Power(Times(Sqr(b),Sqr(pn)),CN1)),Times(Plus(c,Times(pd,x)),Sin(Plus(a,Times(b,x))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1))),Power(Times(b,pn),CN1)),Times(Plus(pn,Times(CN1,C1)),Power(pn,CN1),Int(Times(Plus(c,Times(pd,x)),Power(Cos(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(pn)),Greater(pn,C1)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_),Sqr(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Plus(Times(pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Sqr(Sin(Plus(a,Times(b,x)))),Power(Times(C4,Sqr(b)),CN1)),Times(CN1,Power(Plus(c,Times(pd,x)),m),Cos(Plus(a,Times(b,x))),Sin(Plus(a,Times(b,x))),Power(Times(C2,b),CN1)),Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Power(Times(C2,pd,Plus(m,C1)),CN1)),Times(CN1,Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(C4,Sqr(b)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Sqr(Sin(Plus(a,Times(b,x))))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m)),Greater(m,C1)))),
ISetDelayed(Int(Times(Sqr(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Sqr(Cos(Plus(a,Times(b,x)))),Power(Times(C4,Sqr(b)),CN1)),Times(Power(Plus(c,Times(pd,x)),m),Sin(Plus(a,Times(b,x))),Cos(Plus(a,Times(b,x))),Power(Times(C2,b),CN1)),Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Power(Times(C2,pd,Plus(m,C1)),CN1)),Times(CN1,Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(C4,Sqr(b)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Sqr(Cos(Plus(a,Times(b,x))))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Sin(Plus(a,Times(b,x))),pn),Power(Times(Sqr(b),Sqr(pn)),CN1)),Times(CN1,Power(Plus(c,Times(pd,x)),m),Cos(Plus(a,Times(b,x))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1))),Power(Times(b,pn),CN1)),Times(Plus(pn,Times(CN1,C1)),Power(pn,CN1),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sin(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x)),Times(CN1,Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(Sqr(b),Sqr(pn)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Power(Sin(Plus(a,Times(b,x))),pn)),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Greater(pn,C1)),Greater(m,C1)),Unequal(pn,C2)))),
ISetDelayed(Int(Times(Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Cos(Plus(a,Times(b,x))),pn),Power(Times(Sqr(b),Sqr(pn)),CN1)),Times(Power(Plus(c,Times(pd,x)),m),Sin(Plus(a,Times(b,x))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1))),Power(Times(b,pn),CN1)),Times(Plus(pn,Times(CN1,C1)),Power(pn,CN1),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Cos(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x)),Times(CN1,Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(Sqr(b),Sqr(pn)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Power(Cos(Plus(a,Times(b,x))),pn)),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Greater(pn,C1)),Greater(m,C1)),Unequal(pn,C2)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Int(ExpandTrigReduce(Power(Plus(c,Times(pd,x)),m),Power(Sin(Plus(a,Times(b,x))),pn),x),x),And(And(And(FreeQ(List(a,b,c,pd,m),x),IntegerQ(pn)),Greater(pn,C1)),Or(Not(RationalQ(m)),And(LessEqual(CN1,m),Less(m,C1)))))),
ISetDelayed(Int(Times(Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_)),x_Symbol),
    Condition(Int(ExpandTrigReduce(Power(Plus(c,Times(pd,x)),m),Power(Cos(Plus(a,Times(b,x))),pn),x),x),And(And(And(FreeQ(List(a,b,c,pd,m),x),IntegerQ(pn)),Greater(pn,C1)),Or(Not(RationalQ(m)),And(LessEqual(CN1,m),Less(m,C1)))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Power(Sin(Plus(a,Times(b,x))),pn),Power(Times(pd,Plus(m,C1)),CN1)),Times(CN1,b,pn,Power(Times(pd,Plus(m,C1)),CN1),Int(ExpandTrigReduce(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Times(Cos(Plus(a,Times(b,x))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1)))),x),x))),And(And(And(And(FreeQ(List(a,b,c,pd,m),x),IntegerQ(pn)),Greater(pn,C1)),RationalQ(m)),And(LessEqual(CN2,m),Less(m,CN1))))),
ISetDelayed(Int(Times(Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Power(Cos(Plus(a,Times(b,x))),pn),Power(Times(pd,Plus(m,C1)),CN1)),Times(b,pn,Power(Times(pd,Plus(m,C1)),CN1),Int(ExpandTrigReduce(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Times(Sin(Plus(a,Times(b,x))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1)))),x),x))),And(And(And(And(FreeQ(List(a,b,c,pd,m),x),IntegerQ(pn)),Greater(pn,C1)),RationalQ(m)),And(LessEqual(CN2,m),Less(m,CN1))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Power(Sin(Plus(a,Times(b,x))),pn),Power(Times(pd,Plus(m,C1)),CN1)),Times(CN1,b,pn,Power(Plus(c,Times(pd,x)),Plus(m,C2)),Cos(Plus(a,Times(b,x))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1))),Power(Times(Sqr(pd),Plus(m,C1),Plus(m,C2)),CN1)),Times(CN1,Sqr(b),Sqr(pn),Power(Times(Sqr(pd),Plus(m,C1),Plus(m,C2)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,C2)),Power(Sin(Plus(a,Times(b,x))),pn)),x)),Times(Sqr(b),pn,Plus(pn,Times(CN1,C1)),Power(Times(Sqr(pd),Plus(m,C1),Plus(m,C2)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,C2)),Power(Sin(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Greater(pn,C1)),Less(m,CN2)))),
ISetDelayed(Int(Times(Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Power(Cos(Plus(a,Times(b,x))),pn),Power(Times(pd,Plus(m,C1)),CN1)),Times(b,pn,Power(Plus(c,Times(pd,x)),Plus(m,C2)),Sin(Plus(a,Times(b,x))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1))),Power(Times(Sqr(pd),Plus(m,C1),Plus(m,C2)),CN1)),Times(CN1,Sqr(b),Sqr(pn),Power(Times(Sqr(pd),Plus(m,C1),Plus(m,C2)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,C2)),Power(Cos(Plus(a,Times(b,x))),pn)),x)),Times(Sqr(b),pn,Plus(pn,Times(CN1,C1)),Power(Times(Sqr(pd),Plus(m,C1),Plus(m,C2)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,C2)),Power(Cos(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Greater(pn,C1)),Less(m,CN2)))),
ISetDelayed(Int(Times(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(Plus(c,Times(pd,x)),Cos(Plus(a,Times(b,x))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,Plus(pn,C1)),CN1)),Times(CN1,pd,Power(Sin(Plus(a,Times(b,x))),Plus(pn,C2)),Power(Times(Sqr(b),Plus(pn,C1),Plus(pn,C2)),CN1)),Times(Plus(pn,C2),Power(Plus(pn,C1),CN1),Int(Times(Plus(c,Times(pd,x)),Power(Sin(Plus(a,Times(b,x))),Plus(pn,C2))),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(pn)),Less(pn,CN1)),Unequal(pn,CN2)))),
ISetDelayed(Int(Times(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(c,Times(pd,x)),Sin(Plus(a,Times(b,x))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,Plus(pn,C1)),CN1)),Times(CN1,pd,Power(Cos(Plus(a,Times(b,x))),Plus(pn,C2)),Power(Times(Sqr(b),Plus(pn,C1),Plus(pn,C2)),CN1)),Times(Plus(pn,C2),Power(Plus(pn,C1),CN1),Int(Times(Plus(c,Times(pd,x)),Power(Cos(Plus(a,Times(b,x))),Plus(pn,C2))),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(pn)),Less(pn,CN1)),Unequal(pn,CN2)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),m),Cos(Plus(a,Times(b,x))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,Plus(pn,C1)),CN1)),Times(CN1,pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,C2)),Power(Times(Sqr(b),Plus(pn,C1),Plus(pn,C2)),CN1)),Times(Plus(pn,C2),Power(Plus(pn,C1),CN1),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sin(Plus(a,Times(b,x))),Plus(pn,C2))),x)),Times(Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(Sqr(b),Plus(pn,C1),Plus(pn,C2)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,C2))),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Less(pn,CN1)),Unequal(pn,CN2)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(c,Times(pd,x)),m),Sin(Plus(a,Times(b,x))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,Plus(pn,C1)),CN1)),Times(CN1,pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,C2)),Power(Times(Sqr(b),Plus(pn,C1),Plus(pn,C2)),CN1)),Times(Plus(pn,C2),Power(Plus(pn,C1),CN1),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Cos(Plus(a,Times(b,x))),Plus(pn,C2))),x)),Times(Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(Sqr(b),Plus(pn,C1),Plus(pn,C2)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,C2))),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Less(pn,CN1)),Unequal(pn,CN2)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Tan(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(CN1,CI,Power(Plus(c,Times(pd,x)),Plus(m,C1)),Power(Times(pd,Plus(m,C1)),CN1)),Times(C2,CI,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Plus(C1,Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x)))),CN1)),x))),And(FreeQ(List(a,b,c,pd),x),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Cot(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CI,Power(Plus(c,Times(pd,x)),Plus(m,C1)),Power(Times(pd,Plus(m,C1)),CN1)),Times(CN1,C2,CI,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Plus(C1,Times(CN1,Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(FreeQ(List(a,b,c,pd),x),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Tan(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),m),Power(Tan(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1))),Power(Times(b,Plus(pn,Times(CN1,C1))),CN1)),Times(CN1,pd,m,Power(Times(b,Plus(pn,Times(CN1,C1))),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Tan(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1)))),x)),Times(CN1,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Tan(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Greater(pn,C1)),Greater(m,C0)))),
ISetDelayed(Int(Times(Power(Cot(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(c,Times(pd,x)),m),Power(Cot(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1))),Power(Times(b,Plus(pn,Times(CN1,C1))),CN1)),Times(pd,m,Power(Times(b,Plus(pn,Times(CN1,C1))),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Cot(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C1)))),x)),Times(CN1,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Cot(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Greater(pn,C1)),Greater(m,C0)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(CN2,CI,Power(Plus(c,Times(pd,x)),m),ArcTan(Power(E,Plus(Times(CI,a),Times(CI,b,x)))),Power(b,CN1)),Times(CN1,pd,m,Power(b,CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Log(Plus(C1,Times(CN1,CI,Power(E,Times(CI,Plus(a,Times(b,x)))))))),x)),Times(pd,m,Power(b,CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Log(Plus(C1,Times(CI,Power(E,Times(CI,Plus(a,Times(b,x)))))))),x))),And(FreeQ(List(a,b,c,pd),x),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN2,Power(Plus(c,Times(pd,x)),m),ArcTanh(Power(E,Plus(Times(CI,a),Times(CI,b,x)))),Power(b,CN1)),Times(CN1,pd,m,Power(b,CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Log(Plus(C1,Times(CN1,Power(E,Times(CI,Plus(a,Times(b,x)))))))),x)),Times(pd,m,Power(b,CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Log(Plus(C1,Power(E,Times(CI,Plus(a,Times(b,x))))))),x))),And(FreeQ(List(a,b,c,pd),x),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Sqr(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),m),Tan(Plus(a,Times(b,x))),Power(b,CN1)),Times(CN1,pd,m,Power(b,CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Tan(Plus(a,Times(b,x)))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m)),Greater(m,C0)))),
ISetDelayed(Int(Times(Sqr(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(c,Times(pd,x)),m),Cot(Plus(a,Times(b,x))),Power(b,CN1)),Times(pd,m,Power(b,CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Cot(Plus(a,Times(b,x)))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m)),Greater(m,C0)))),
ISetDelayed(Int(Times(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),Power(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(Plus(c,Times(pd,x)),Tan(Plus(a,Times(b,x))),Power(Sec(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Times(b,Plus(pn,Times(CN1,C1))),CN1)),Times(CN1,pd,Power(Sec(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Times(Sqr(b),Plus(pn,Times(CN1,C1)),Plus(pn,Times(CN1,C2))),CN1)),Times(Plus(pn,Times(CN1,C2)),Power(Plus(pn,Times(CN1,C1)),CN1),Int(Times(Plus(c,Times(pd,x)),Power(Sec(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(pn)),Greater(pn,C1)),Unequal(pn,C2)))),
ISetDelayed(Int(Times(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),Power(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(c,Times(pd,x)),Cot(Plus(a,Times(b,x))),Power(Csc(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Times(b,Plus(pn,Times(CN1,C1))),CN1)),Times(CN1,pd,Power(Csc(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Times(Sqr(b),Plus(pn,Times(CN1,C1)),Plus(pn,Times(CN1,C2))),CN1)),Times(Plus(pn,Times(CN1,C2)),Power(Plus(pn,Times(CN1,C1)),CN1),Int(Times(Plus(c,Times(pd,x)),Power(Csc(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(pn)),Greater(pn,C1)),Unequal(pn,C2)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_),Power(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),m),Tan(Plus(a,Times(b,x))),Power(Sec(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Times(b,Plus(pn,Times(CN1,C1))),CN1)),Times(CN1,pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Sec(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Times(Sqr(b),Plus(pn,Times(CN1,C1)),Plus(pn,Times(CN1,C2))),CN1)),Times(Plus(pn,Times(CN1,C2)),Power(Plus(pn,Times(CN1,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sec(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x)),Times(Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(Sqr(b),Plus(pn,Times(CN1,C1)),Plus(pn,Times(CN1,C2))),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Power(Sec(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Greater(pn,C1)),Unequal(pn,C2)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(c,Times(pd,x)),m),Cot(Plus(a,Times(b,x))),Power(Csc(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Times(b,Plus(pn,Times(CN1,C1))),CN1)),Times(CN1,pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Csc(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Times(Sqr(b),Plus(pn,Times(CN1,C1)),Plus(pn,Times(CN1,C2))),CN1)),Times(Plus(pn,Times(CN1,C2)),Power(Plus(pn,Times(CN1,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Csc(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x)),Times(Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(Sqr(b),Plus(pn,Times(CN1,C1)),Plus(pn,Times(CN1,C2))),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Power(Csc(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2)))),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Greater(pn,C1)),Unequal(pn,C2)),Greater(m,C1)))),
ISetDelayed(Int(Times(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),Power(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(pd,Power(Sec(Plus(a,Times(b,x))),pn),Power(Times(Sqr(b),Sqr(pn)),CN1)),Times(CN1,Plus(c,Times(pd,x)),Sin(Plus(a,Times(b,x))),Power(Sec(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,pn),CN1)),Times(Plus(pn,C1),Power(pn,CN1),Int(Times(Plus(c,Times(pd,x)),Power(Sec(Plus(a,Times(b,x))),Plus(pn,C2))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(pn)),Less(pn,CN1)))),
ISetDelayed(Int(Times(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),Power(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(pd,Power(Csc(Plus(a,Times(b,x))),pn),Power(Times(Sqr(b),Sqr(pn)),CN1)),Times(Plus(c,Times(pd,x)),Cos(Plus(a,Times(b,x))),Power(Csc(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,pn),CN1)),Times(Plus(pn,C1),Power(pn,CN1),Int(Times(Plus(c,Times(pd,x)),Power(Csc(Plus(a,Times(b,x))),Plus(pn,C2))),x))),And(And(FreeQ(List(a,b,c,pd),x),RationalQ(pn)),Less(pn,CN1)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_),Power(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Plus(Times(pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Sec(Plus(a,Times(b,x))),pn),Power(Times(Sqr(b),Sqr(pn)),CN1)),Times(CN1,Power(Plus(c,Times(pd,x)),m),Sin(Plus(a,Times(b,x))),Power(Sec(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,pn),CN1)),Times(Plus(pn,C1),Power(pn,CN1),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sec(Plus(a,Times(b,x))),Plus(pn,C2))),x)),Times(CN1,Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(Sqr(b),Sqr(pn)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Power(Sec(Plus(a,Times(b,x))),pn)),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Less(pn,CN1)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(pd,m,Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Csc(Plus(a,Times(b,x))),pn),Power(Times(Sqr(b),Sqr(pn)),CN1)),Times(Power(Plus(c,Times(pd,x)),m),Cos(Plus(a,Times(b,x))),Power(Csc(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,pn),CN1)),Times(Plus(pn,C1),Power(pn,CN1),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Csc(Plus(a,Times(b,x))),Plus(pn,C2))),x)),Times(CN1,Sqr(pd),m,Plus(m,Times(CN1,C1)),Power(Times(Sqr(b),Sqr(pn)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C2))),Power(Csc(Plus(a,Times(b,x))),pn)),x))),And(And(And(FreeQ(List(a,b,c,pd),x),RationalQ(m,pn)),Less(pn,CN1)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_)),x_Symbol),
    Condition(Times(Power(Cos(Plus(a,Times(b,x))),pn),Power(Sec(Plus(a,Times(b,x))),pn),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Power(Cos(Plus(a,Times(b,x))),pn),CN1)),x)),And(FreeQ(List(a,b,c,pd,m,pn),x),Not(IntegerQ(pn))))),
ISetDelayed(Int(Times(Power(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Sin(Plus(a,Times(b,x))),pn),Power(Csc(Plus(a,Times(b,x))),pn),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Power(Sin(Plus(a,Times(b,x))),pn),CN1)),x)),And(FreeQ(List(a,b,c,pd,m,pn),x),Not(IntegerQ(pn))))),
ISetDelayed(Int(Times(Power(u_,m_DEFAULT),Power($(pf_,v_),pn_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(ExpandToSum(u,x),m),Power($(pf,ExpandToSum(v,x)),pn)),x),And(And(And(FreeQ(List(m,pn),x),TrigQ(pf)),LinearQ(List(u,v),x)),Not(LinearMatchQ(List(u,v),x))))),
ISetDelayed(Int(Times(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),m),Power(Sin(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,Plus(pn,C1)),CN1)),Times(CN1,pd,m,Power(Times(b,Plus(pn,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Sin(Plus(a,Times(b,x))),Plus(pn,C1))),x))),And(And(FreeQ(List(a,b,c,pd,pn),x),PositiveIntegerQ(m)),NonzeroQ(Plus(pn,C1))))),
ISetDelayed(Int(Times(Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(c,Times(pd,x)),m),Power(Cos(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,Plus(pn,C1)),CN1)),Times(pd,m,Power(Times(b,Plus(pn,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Cos(Plus(a,Times(b,x))),Plus(pn,C1))),x))),And(And(FreeQ(List(a,b,c,pd,pn),x),PositiveIntegerQ(m)),NonzeroQ(Plus(pn,C1))))),
ISetDelayed(Int(Times(Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_DEFAULT),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigReduce(Power(Plus(c,Times(pd,x)),m),Times(Power(Sin(Plus(a,Times(b,x))),pn),Power(Cos(Plus(a,Times(b,x))),p)),x),x),And(FreeQ(List(a,b,c,pd,m),x),PositiveIntegerQ(pn,p)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Sin(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT),Power(Tan(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sin(Plus(a,Times(b,x))),pn),Power(Tan(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x)),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sin(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Tan(Plus(a,Times(b,x))),p)),x)),And(FreeQ(List(a,b,c,pd,m),x),PositiveIntegerQ(pn,p)))),
ISetDelayed(Int(Times(Power(Cos(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT),Power(Cot(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_DEFAULT),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Cos(Plus(a,Times(b,x))),pn),Power(Cot(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x)),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Cos(Plus(a,Times(b,x))),Plus(pn,Times(CN1,C2))),Power(Cot(Plus(a,Times(b,x))),p)),x)),And(FreeQ(List(a,b,c,pd,m),x),PositiveIntegerQ(pn,p)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT),Power(Tan(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),m),Power(Sec(Plus(a,Times(b,x))),pn),Power(Times(b,pn),CN1)),Times(CN1,pd,m,Power(Times(b,pn),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Sec(Plus(a,Times(b,x))),pn)),x))),And(And(And(FreeQ(List(a,b,c,pd,pn),x),SameQ(p,C1)),RationalQ(m)),Greater(m,C0)))),
ISetDelayed(Int(Times(Power(Cot(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_DEFAULT),Power(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(c,Times(pd,x)),m),Power(Csc(Plus(a,Times(b,x))),pn),Power(Times(b,pn),CN1)),Times(pd,m,Power(Times(b,pn),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Csc(Plus(a,Times(b,x))),pn)),x))),And(And(And(FreeQ(List(a,b,c,pd,pn),x),SameQ(p,C1)),RationalQ(m)),Greater(m,C0)))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Sqr(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Tan(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),m),Power(Tan(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,Plus(pn,C1)),CN1)),Times(CN1,pd,m,Power(Times(b,Plus(pn,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Tan(Plus(a,Times(b,x))),Plus(pn,C1))),x))),And(And(FreeQ(List(a,b,c,pd,pn),x),PositiveIntegerQ(m)),NonzeroQ(Plus(pn,C1))))),
ISetDelayed(Int(Times(Power(Cot(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT),Sqr(Csc(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(c,Times(pd,x)),m),Power(Cot(Plus(a,Times(b,x))),Plus(pn,C1)),Power(Times(b,Plus(pn,C1)),CN1)),Times(pd,m,Power(Times(b,Plus(pn,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(m,Times(CN1,C1))),Power(Cot(Plus(a,Times(b,x))),Plus(pn,C1))),x))),And(And(FreeQ(List(a,b,c,pd,pn),x),PositiveIntegerQ(m)),NonzeroQ(Plus(pn,C1))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Tan(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_),Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(CN1,Int(Times(Power(Plus(c,Times(pd,x)),m),Sec(Plus(a,Times(b,x))),Power(Tan(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x)),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sec(Plus(a,Times(b,x))),C3),Power(Tan(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x)),And(FreeQ(List(a,b,c,pd,m),x),PositiveIntegerQ(Times(C1D2,p))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT),Power(Sec(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),pn_DEFAULT),Power(Tan(Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_)),x_Symbol),
    Condition(Plus(Times(CN1,Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sec(Plus(a,Times(b,x))),pn),Power(Tan(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x)),Int(Times(Power(Plus(c,Times(pd,x)),m),Power(Sec(Plus(a,Times(b,x))),Plus(pn,C2)),Power(Tan(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x)),And(FreeQ(List(a,b,c,pd,m,pn),x),PositiveIntegerQ(Times(C1D2,p)))))
  );
}
