package org.matheclipse.core.integrate.rubi;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IndefiniteIntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IndefiniteIntegrationRules0 { 
  public static IAST RULES = List( 
SetDelayed(Int(a_,$p(x,SymbolHead)),
    Condition(Times(a,x),IndependentQ(a,x))),
SetDelayed(Int(Times(Plus(Times($p(b,true),x_),a_),c_),$p(x,SymbolHead)),
    Condition(Times(c,Times(Power(Plus(a,Times(b,x)),C2),Power(Times(C2,b),CN1))),FreeQ(List(a,b,c),x))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),n_),c_),$p(x,SymbolHead)),
    Condition(Dist(c,Int(Power(Plus(a,Times(b,x)),n),x)),And(FreeQ(List(a,b,c,n),x),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(Times(a_,u_),$p(x,SymbolHead)),
    Condition(Module(List(Set($s("lst"),ConstantFactor(u,x))),Dist(Times(a,Part($s("lst"),C1)),Int(Part($s("lst"),C2),x))),And(FreeQ(a,x),Not(MatchQ(u,Condition(Times(b_,v_),FreeQ(b,x))))))),
SetDelayed(Int(u_,$p(x,SymbolHead)),
    Condition(Module(List(Set($s("lst"),ConstantFactor(Simplify(Denominator(u)),x))),Condition(Dist(Times(C1,Power(Part($s("lst"),C1),CN1)),Int(Times(Numerator(u),Power(Part($s("lst"),C2),CN1)),x)),UnsameQ(Part($s("lst"),C1),C1))),Or(Or(Or(Or(MatchQ(u,Condition(Times(C1,Power(Plus(a_,Times($p(b,true),x)),CN1)),FreeQ(List(a,b),x))),MatchQ(u,Condition(Times(Power(x,$p(m,true)),Power(Plus(a_,Times($p(b,true),Power(x,n_))),CN1)),And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(Plus(m,Times(CN1,n)),C1)))))),MatchQ(u,Condition(Times(C1,Power(Times(Plus($p(a,true),Times($p(b,true),x)),Plus(c_,Times($p(d,true),x))),CN1)),FreeQ(List(a,b,c,d),x)))),MatchQ(u,Condition(Times(Plus($p(d,true),Times($p(e,true),x)),Power(Plus(Plus(a_,Times($p(b,true),x)),Times($p(c,true),Power(x,C2))),CN1)),FreeQ(List(a,b,c,d,e),x)))),MatchQ(u,Condition(Power(Times($p(c,true),Power(Plus($p(a,true),Times($p(b,true),x)),n_)),m_),And(FreeQ(List(a,b,c,m,n),x),ZeroQ(Plus(Times(m,n),C1)))))))),
SetDelayed(Int(Times(Power(v_,CN1),u_),$p(x,SymbolHead)),
    Condition(Module(List(Set($s("lst"),ConstantFactor(v,x))),Condition(Dist(Times(C1,Power(Part($s("lst"),C1),CN1)),Int(Times(u,Power(Part($s("lst"),C2),CN1)),x)),UnsameQ(Part($s("lst"),C1),C1))),Not(FalseQ(DerivativeDivides(v,u,x))))),
SetDelayed(Int(Times(Power(v_,m_),Power(w_,n_),$p(u,true)),$p(x,SymbolHead)),
    Condition(Times(Times(Power(v,m),Power(w,n)),Int(u,x)),And(And(FreeQ(List(m,n),x),ZeroQ(Plus(m,n))),ZeroQ(Plus(v,w))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,$p(m,true)),$p(b,true)),$p(a,true)),$p(p,true)),Power(Plus(Times(Power(x_,$p(n,true)),$p(d,true)),$p(c,true)),$p(q,true)),$p(u,true)),$p(x,SymbolHead)),
    Condition(Times(Times(Power(Plus(a,Times(b,Power(x,m))),p),Times(Power(Plus(c,Times(d,Power(x,n))),q),Power(Power(x,Times(m,p)),CN1))),Int(Times(u,Power(x,Times(m,p))),x)),And(And(And(And(FreeQ(List(a,b,c,d,m,n,p,q),x),ZeroQ(Plus(a,d))),ZeroQ(Plus(b,c))),ZeroQ(Plus(m,n))),ZeroQ(Plus(p,q))))),
SetDelayed(Int(Power(Plus(Times($p(b,true),x_),a_),CN1),$p(x,SymbolHead)),
    Condition(Times(Log(Plus(Times(CN1,a),Times(CN1,Times(b,x)))),Power(b,CN1)),And(FreeQ(List(a,b),x),NegativeCoefficientQ(a)))),
SetDelayed(Int(Power(Plus(Times($p(b,true),x_),$p(a,true)),CN1),$p(x,SymbolHead)),
    Condition(Times(Log(Plus(a,Times(b,x))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(x_,$p(n,true)),$p(x,SymbolHead)),
    Condition(Times(Power(x,Plus(n,C1)),Power(Plus(n,C1),CN1)),And(IndependentQ(n,x),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(Power(Plus(Times($p(b,true),x_),$p(a,true)),n_),$p(x,SymbolHead)),
    Condition(Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Times(b,Plus(n,C1)),CN1)),And(FreeQ(List(a,b,n),x),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(u_,$p(x,SymbolHead)),
    Condition(IntegrateMonomialSum(u,x),MonomialSumQ(u,x))),
SetDelayed(IntegrateMonomialSum(u_,$p(x,SymbolHead)),
    Module(List(Set($s("lst"),Map(Function(If(FreeQ(Slot1,x),List(Slot1,C0),List(C0,Times(Times(Slot1,x),If(SameQ(Exponent(Slot1,x),CN1),Log(x),Times(C1,Power(Plus(Exponent(Slot1,x),C1),CN1))))))),u))),Plus(Times(Part($s("lst"),C1),x),Part($s("lst"),C2)))),
SetDelayed(Int(u_,$p(x,SymbolHead)),
    Condition(Module(List(Set($s("lst"),SplitMonomialTerms(u,x))),Condition(Plus(Int(Part($s("lst"),C1),x),SplitFreeIntegrate(Part($s("lst"),C2),x)),And(And(SumQ(Part($s("lst"),C1)),Not(FreeQ(Part($s("lst"),C1),x))),UnsameQ(Part($s("lst"),C2),C0)))),SumQ(u))),
SetDelayed(Int(Times(Power(x_,$p(m,true)),u_),$p(x,SymbolHead)),
    Condition(Int(Map(Function(Times(Power(x,m),Slot1)),u),x),And(IntIntegerQ(m),SumQ(u)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,$p(n,true)),$p(b,true)),a_),CN1),Power(x_,CN1)),$p(x,SymbolHead)),
    Condition(Times(integer(-2L),Times(ArcTanh(Plus(C1,Times(Times(C2,b),Times(Power(x,n),Power(a,CN1))))),Power(Times(a,n),CN1))),And(And(FreeQ(List(a,b,n),x),PosQ(n)),RationalQ(Times(b,Power(a,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,$p(n,true)),$p(b,true)),a_),CN1),Power(x_,CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(Log(x),Power(a,CN1)),Times(CN1,Times(Log(Plus(a,Times(b,Power(x,n)))),Power(Times(a,n),CN1)))),And(And(FreeQ(List(a,b,n),x),PosQ(n)),Not(RationalQ(Times(b,Power(a,CN1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,$p(n,true)),$p(b,true)),a_),CN1),Power(x_,CN1)),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,Log(Plus(b,Times(a,Power(x,Times(CN1,n)))))),Power(Times(a,n),CN1)),And(FreeQ(List(a,b,n),x),NegQ(n)))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),Times($p(a,true),x_)),CN1),$p(x,SymbolHead)),
    Condition(Int(Times(C1,Power(Times(x,Plus(a,Times(b,Power(x,Plus(n,Times(CN1,C1)))))),CN1)),x),FreeQ(List(a,b,n),x))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),n_),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,Power(x,Plus(m,C1))),Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Times(a,Plus(n,C1)),CN1))),And(And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(Plus(m,n),C2))),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),n_),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(CN1,Power(x,Plus(m,C1))),Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Times(a,Plus(n,C1)),CN1))),Dist(Times(Plus(Plus(m,n),C2),Power(Times(a,Plus(n,C1)),CN1)),Int(Times(Power(x,m),Power(Plus(a,Times(b,x)),Plus(n,C1))),x))),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),Less(Less(C0,m),Plus(Times(CN1,n),Times(CN1,C2)))),Greater(Plus(Plus(Times(C2,m),n),C1),C0)))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),$p(a,true)),$p(n,true)),Power(x_,m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(a,Times(b,x)),n),Power(Plus(Plus(m,n),C1),CN1))),Dist(Times(a,Times(n,Power(Plus(Plus(m,n),C1),CN1))),Int(Times(Power(x,m),Power(Plus(a,Times(b,x)),Plus(n,Times(CN1,C1)))),x))),And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),Less(Less(C0,n),Times(m,C1D2))))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),$p(a,true)),$p(n,true)),Power(x_,m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Times(a,Plus(m,C1)),CN1))),Times(CN1,Dist(Times(b,Times(Plus(Plus(m,n),C2),Power(Times(a,Plus(m,C1)),CN1))),Int(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,x)),n)),x)))),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),Less(Less(C0,n),Plus(Times(CN1,m),Times(CN1,C2)))),Greater(Plus(Plus(m,Times(C2,n)),Times(CN1,C1)),C0)))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),$p(a,true)),n_),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,m),Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Power(Times(b,Plus(Plus(m,n),C1)),CN1))),Times(CN1,Dist(Times(a,Times(m,Power(Times(b,Plus(Plus(m,n),C1)),CN1))),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),n)),x)))),And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),Less(Less(C0,m),Times(n,C1D2))))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),$p(n,true)),Power(Plus(Times($p(d,true),x_),c_),$p(n,true))),$p(x,SymbolHead)),
    Condition(Int(Power(Plus(Times(a,c),Times(Times(b,d),Power(x,C2))),n),x),And(And(FreeQ(List(a,b,c,d),x),IntIntegerQ(n)),ZeroQ(Plus(Times(b,c),Times(a,d)))))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),$p(m,true)),Power(Plus(Times($p(d,true),x_),c_),$p(n,true))),$p(x,SymbolHead)),
    Condition(Dist(Power(Times(d,Power(b,CN1)),n),Int(Power(Plus(a,Times(b,x)),Plus(m,n)),x)),And(And(And(FreeQ(List(a,b,c,d,m),x),ZeroQ(Plus(Times(b,c),Times(CN1,Times(a,d))))),IntIntegerQ(n)),Or(Not(IntIntegerQ(m)),LessEqual(LeafCount(Plus(a,Times(b,x))),LeafCount(Plus(c,Times(d,x)))))))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),CN1),Power(Plus(Times($p(d,true),x_),c_),CN1)),$p(x,SymbolHead)),
    Condition(Times(integer(-2L),Times(ArcTanh(Plus(Times(Plus(Times(b,c),Times(a,d)),Power(Plus(Times(b,c),Times(CN1,Times(a,d))),CN1)),Times(Times(Times(C2,b),d),Times(x,Power(Plus(Times(b,c),Times(CN1,Times(a,d))),CN1))))),Power(Plus(Times(b,c),Times(CN1,Times(a,d))),CN1))),And(And(FreeQ(List(a,b,c,d),x),RationalQ(Plus(Times(b,c),Times(CN1,Times(a,d))))),Unequal(Plus(Times(b,c),Times(CN1,Times(a,d))),C0)))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),$p(m,true)),Power(Plus(Times($p(d,true),x_),c_),n_)),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,Power(Plus(a,Times(b,x)),Plus(m,C1))),Times(Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(Plus(n,C1),Plus(Times(b,c),Times(CN1,Times(a,d)))),CN1))),And(And(And(FreeQ(List(a,b,c,d,m,n),x),ZeroQ(Plus(Plus(m,n),C2))),NonzeroQ(Plus(Times(b,c),Times(CN1,Times(a,d))))),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),$p(m,true)),Power(Plus(Times($p(d,true),x_),c_),n_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(CN1,Power(Plus(a,Times(b,x)),Plus(m,C1))),Times(Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(Plus(n,C1),Plus(Times(b,c),Times(CN1,Times(a,d)))),CN1))),Dist(Times(b,Times(Plus(Plus(m,n),C2),Power(Times(Plus(n,C1),Plus(Times(b,c),Times(CN1,Times(a,d)))),CN1))),Int(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(d,x)),Plus(n,C1))),x))),And(And(And(And(FreeQ(List(a,b,c,d),x),IntIntegerQ(List(m,n))),NonzeroQ(Plus(Times(b,c),Times(CN1,Times(a,d))))),Less(Less(C0,m),Plus(Times(CN1,n),Times(CN1,C2)))),Greater(Plus(Plus(Times(C2,m),n),C1),C0)))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),m_),Power(Plus(Times($p(d,true),x_),c_),$p(n,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Times(Power(Plus(c,Times(d,x)),n),Power(Times(b,Plus(Plus(m,n),C1)),CN1))),Dist(Times(n,Times(Plus(Times(b,c),Times(CN1,Times(a,d))),Power(Times(b,Plus(Plus(m,n),C1)),CN1))),Int(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(d,x)),Plus(n,Times(CN1,C1)))),x))),And(And(And(FreeQ(List(a,b,c,d),x),IntIntegerQ(List(m,n))),NonzeroQ(Plus(Times(b,c),Times(CN1,Times(a,d))))),And(Less(C0,n),LessEqual(n,m))))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),$p(n,true)),Power(Plus(Times($p(d,true),x_),c_),$p(n,true)),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Times(Power(x,m),Power(Plus(Times(a,c),Times(Times(b,d),Power(x,C2))),n)),x),And(And(FreeQ(List(a,b,c,d,m),x),IntIntegerQ(n)),ZeroQ(Plus(Times(b,c),Times(a,d)))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,$p(n,true)),$p(d,true)),c_),Power(Plus(Times(Power(x_,$p(n,true)),$p(b,true)),a_),$p(p,true))),$p(x,SymbolHead)),
    Condition(Times(Times(c,x),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(a,CN1))),And(FreeQ(List(a,b,c,d,n,p),x),ZeroQ(Plus(Times(a,d),Times(CN1,Times(Times(b,c),Plus(Times(n,Plus(p,C1)),C1)))))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,$p(n,true)),$p(d,true)),c_),Power(Plus(Times(Power(x_,$p(n,true)),$p(b,true)),a_),$p(p,true)),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Times(c,Power(x,Plus(m,C1))),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1))),And(And(FreeQ(List(a,b,c,d,m,n,p),x),NonzeroQ(Plus(m,C1))),ZeroQ(Plus(Times(Times(a,d),Plus(m,C1)),Times(CN1,Times(Times(b,c),Plus(Plus(m,Times(n,Plus(p,C1))),C1)))))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,$p(q,true)),$p(c,true)),Times(Power(x_,$p(r,true)),$p(d,true))),Power(Plus(Times(Power(x_,$p(n,true)),$p(b,true)),a_),$p(p,true)),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Times(c,Power(x,Plus(Plus(m,q),C1))),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,Plus(Plus(m,q),C1)),CN1))),And(And(And(FreeQ(List(a,b,c,d,m,n,p,q,r),x),NonzeroQ(Plus(Plus(m,q),C1))),ZeroQ(Plus(Plus(n,Times(CN1,r)),q))),ZeroQ(Plus(Times(Times(a,d),Plus(Plus(m,q),C1)),Times(CN1,Times(Times(b,c),Plus(Plus(Plus(m,q),Times(n,Plus(p,C1))),C1)))))))),
SetDelayed(Int(Times(Plus(Times($p(f,true),x_),e_),Power(Plus(Times($p(b,true),x_),a_),$p(m,true)),Power(Plus(Times($p(d,true),x_),c_),$p(n,true))),$p(x,SymbolHead)),
    Condition(Times(Times(f,Power(Plus(a,Times(b,x)),Plus(m,C1))),Times(Power(Plus(c,Times(d,x)),Plus(n,C1)),Power(Times(Times(b,d),Plus(Plus(m,n),C2)),CN1))),And(And(FreeQ(List(a,b,c,d,e,f,m,n),x),NonzeroQ(Plus(Plus(m,n),C2))),ZeroQ(Plus(Times(f,Plus(Times(Times(b,c),Plus(m,C1)),Times(Times(a,d),Plus(n,C1)))),Times(CN1,Times(Times(Times(b,d),e),Plus(Plus(m,n),C2)))))))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),$p(n,true)),Power(Plus(Times($p(d,true),x_),c_),$p(p,true)),x_),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),Plus(n,C1)),Times(Power(Plus(c,Times(d,x)),Plus(p,C1)),Power(Times(Times(b,d),Plus(Plus(C2,n),p)),CN1))),Times(CN1,Dist(Times(Plus(Times(Times(b,c),Plus(n,C1)),Times(Times(a,d),Plus(p,C1))),Power(Times(Times(b,d),Plus(Plus(C2,n),p)),CN1)),Int(Times(Power(Plus(a,Times(b,x)),n),Power(Plus(c,Times(d,x)),p)),x)))),And(And(And(FreeQ(List(a,b,c,d,n,p),x),IntIntegerQ(List(n,p))),And(Less(C0,n),LessEqual(n,C2))),Greater(p,C5)))),
SetDelayed(Int(Times(Power(Plus(Times($p(b,true),x_),a_),$p(n,true)),Power(Plus(Times($p(d,true),x_),c_),$p(p,true)),Power(x_,m_)),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),Plus(n,C1))),Times(Power(Plus(c,Times(d,x)),Plus(p,C1)),Power(Times(Times(b,d),Plus(Plus(Plus(C1,m),n),p)),CN1))),Times(CN1,Dist(Times(Times(a,c),Times(Plus(m,Times(CN1,C1)),Power(Times(Times(b,d),Plus(Plus(Plus(C1,m),n),p)),CN1))),Int(Times(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,x)),n)),Power(Plus(c,Times(d,x)),p)),x)))),Times(CN1,Dist(Times(Plus(Times(Times(b,c),Plus(m,n)),Times(Times(a,d),Plus(m,p))),Power(Times(Times(b,d),Plus(Plus(Plus(C1,m),n),p)),CN1)),Int(Times(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,x)),n)),Power(Plus(c,Times(d,x)),p)),x)))),And(And(And(And(FreeQ(List(a,b,c,d,n,p),x),IntIntegerQ(List(m,n,p))),And(Less(C0,m),LessEqual(m,C2))),And(Less(C0,n),LessEqual(n,C2))),Greater(p,C5)))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Times(Rt(Times(b,Power(a,CN1)),C2),Times(ArcTan(Times(Rt(Times(b,Power(a,CN1)),C2),x)),Power(b,CN1))),And(FreeQ(List(a,b),x),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,Rt(Times(Times(CN1,b),Power(a,CN1)),C2)),Times(ArcTanh(Times(Rt(Times(Times(CN1,b),Power(a,CN1)),C2),x)),Power(b,CN1))),And(FreeQ(List(a,b),x),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C3),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),C3))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),C3)))),Plus(Dist(Times(r,Power(Times(C3,a),CN1)),Int(Times(C1,Power(Plus(r,Times(s,x)),CN1)),x)),Dist(Times(r,Power(Times(C3,a),CN1)),Int(Times(Plus(Times(C2,r),Times(CN1,Times(s,x))),Power(Plus(Plus(Power(r,C2),Times(CN1,Times(Times(r,s),x))),Times(Power(s,C2),Power(x,C2))),CN1)),x)))),And(FreeQ(List(a,b),x),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C3),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(Times(CN1,a),Power(b,CN1)),C3))),Set(s,Denominator(Rt(Times(Times(CN1,a),Power(b,CN1)),C3)))),Plus(Dist(Times(r,Power(Times(C3,a),CN1)),Int(Times(C1,Power(Plus(r,Times(CN1,Times(s,x))),CN1)),x)),Dist(Times(r,Power(Times(C3,a),CN1)),Int(Times(Plus(Times(C2,r),Times(s,x)),Power(Plus(Plus(Power(r,C2),Times(Times(r,s),x)),Times(Power(s,C2),Power(x,C2))),CN1)),x)))),And(FreeQ(List(a,b),x),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),C4))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),C4)))),Plus(Dist(Times(r,Power(Times(Times(C2,Sqrt(C2)),a),CN1)),Int(Times(Plus(Times(Sqrt(C2),r),Times(CN1,Times(s,Power(x,Times(n,C1D4))))),Power(Plus(Plus(Power(r,C2),Times(CN1,Times(Times(Times(Sqrt(C2),r),s),Power(x,Times(n,C1D4))))),Times(Power(s,C2),Power(x,Times(n,C1D2)))),CN1)),x)),Dist(Times(r,Power(Times(Times(C2,Sqrt(C2)),a),CN1)),Int(Times(Plus(Times(Sqrt(C2),r),Times(s,Power(x,Times(n,C1D4)))),Power(Plus(Plus(Power(r,C2),Times(Times(Times(Sqrt(C2),r),s),Power(x,Times(n,C1D4)))),Times(Power(s,C2),Power(x,Times(n,C1D2)))),CN1)),x)))),And(And(And(FreeQ(List(a,b),x),EvenQ(Times(n,C1D2))),Greater(n,C2)),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(Times(CN1,a),Power(b,CN1)),C2))),Set(s,Denominator(Rt(Times(Times(CN1,a),Power(b,CN1)),C2)))),Plus(Dist(Times(r,Power(Times(C2,a),CN1)),Int(Times(C1,Power(Plus(r,Times(CN1,Times(s,Power(x,Times(n,C1D2))))),CN1)),x)),Dist(Times(r,Power(Times(C2,a),CN1)),Int(Times(C1,Power(Plus(r,Times(s,Power(x,Times(n,C1D2)))),CN1)),x)))),And(And(And(FreeQ(List(a,b),x),EvenQ(Times(n,C1D2))),Greater(n,C2)),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),Times(n,C1D2)))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),Times(n,C1D2))))),Plus(Dist(Times(C2,Times(r,Power(Times(a,n),CN1))),Int(Times(C1,Power(Plus(r,Times(s,Power(x,C2))),CN1)),x)),Dist(Times(C4,Times(r,Power(Times(a,n),CN1))),Int(Sum(Times(Plus(r,Times(CN1,Times(Times(s,Cos(Times(Times(C2,Plus(Times(C2,k),Times(CN1,C1))),Times(Pi,Power(n,CN1))))),Power(x,C2)))),Power(Plus(Plus(Power(r,C2),Times(CN1,Times(Times(Times(Times(C2,r),s),Cos(Times(Times(C2,Plus(Times(C2,k),Times(CN1,C1))),Times(Pi,Power(n,CN1))))),Power(x,C2)))),Times(Power(s,C2),Power(x,C4))),CN1)),List(k,C1,Times(Plus(Times(n,C1D2),Times(CN1,C1)),C1D2))),x)))),And(And(And(FreeQ(List(a,b),x),OddQ(Times(n,C1D2))),Greater(n,C2)),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(Times(CN1,a),Power(b,CN1)),Times(n,C1D2)))),Set(s,Denominator(Rt(Times(Times(CN1,a),Power(b,CN1)),Times(n,C1D2))))),Plus(Dist(Times(C2,Times(r,Power(Times(a,n),CN1))),Int(Times(C1,Power(Plus(r,Times(CN1,Times(s,Power(x,C2)))),CN1)),x)),Dist(Times(C4,Times(r,Power(Times(a,n),CN1))),Int(Sum(Times(Plus(r,Times(CN1,Times(Times(s,Cos(Times(Times(C4,k),Times(Pi,Power(n,CN1))))),Power(x,C2)))),Power(Plus(Plus(Power(r,C2),Times(CN1,Times(Times(Times(Times(C2,r),s),Cos(Times(Times(C4,k),Times(Pi,Power(n,CN1))))),Power(x,C2)))),Times(Power(s,C2),Power(x,C4))),CN1)),List(k,C1,Times(Plus(Times(n,C1D2),Times(CN1,C1)),C1D2))),x)))),And(And(And(FreeQ(List(a,b),x),OddQ(Times(n,C1D2))),Greater(n,C2)),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),n))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),n)))),Int(Plus(Times(r,Power(Times(Times(a,n),Plus(r,Times(s,x))),CN1)),Sum(Times(Times(C2,r),Times(Plus(r,Times(CN1,Times(Times(s,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Times(Pi,Power(n,CN1))))),x))),Power(Times(Times(a,n),Plus(Plus(Power(r,C2),Times(CN1,Times(Times(Times(Times(C2,r),s),Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Times(Pi,Power(n,CN1))))),x))),Times(Power(s,C2),Power(x,C2)))),CN1))),List(k,C1,Times(Plus(n,Times(CN1,C1)),C1D2)))),x)),And(And(And(FreeQ(List(a,b),x),OddQ(n)),Greater(n,C1)),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(Times(CN1,a),Power(b,CN1)),n))),Set(s,Denominator(Rt(Times(Times(CN1,a),Power(b,CN1)),n)))),Int(Plus(Times(r,Power(Times(Times(a,n),Plus(r,Times(CN1,Times(s,x)))),CN1)),Sum(Times(Times(C2,r),Times(Plus(r,Times(Times(s,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Times(Pi,Power(n,CN1))))),x)),Power(Times(Times(a,n),Plus(Plus(Power(r,C2),Times(Times(Times(Times(C2,r),s),Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Times(Pi,Power(n,CN1))))),x)),Times(Power(s,C2),Power(x,C2)))),CN1))),List(k,C1,Times(Plus(n,Times(CN1,C1)),C1D2)))),x)),And(And(And(FreeQ(List(a,b),x),OddQ(n)),Greater(n,C1)),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C3),$p(b,true)),a_),CN1),x_),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),C3))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),C3)))),Plus(Dist(Times(Times(CN1,Power(r,C2)),Power(Times(Times(C3,a),s),CN1)),Int(Times(C1,Power(Plus(r,Times(s,x)),CN1)),x)),Dist(Times(Power(r,C2),Power(Times(Times(C3,a),s),CN1)),Int(Times(Plus(r,Times(s,x)),Power(Plus(Plus(Power(r,C2),Times(CN1,Times(Times(r,s),x))),Times(Power(s,C2),Power(x,C2))),CN1)),x)))),And(FreeQ(List(a,b),x),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C3),$p(b,true)),a_),CN1),x_),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(Times(CN1,a),Power(b,CN1)),C3))),Set(s,Denominator(Rt(Times(Times(CN1,a),Power(b,CN1)),C3)))),Plus(Dist(Times(Power(r,C2),Power(Times(Times(C3,a),s),CN1)),Int(Times(C1,Power(Plus(r,Times(CN1,Times(s,x))),CN1)),x)),Times(CN1,Dist(Times(Power(r,C2),Power(Times(Times(C3,a),s),CN1)),Int(Times(Plus(r,Times(CN1,Times(s,x))),Power(Plus(Plus(Power(r,C2),Times(Times(r,s),x)),Times(Power(s,C2),Power(x,C2))),CN1)),x))))),And(FreeQ(List(a,b),x),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(g,GCD(Plus(m,C1),n))),Condition(Dist(Times(C1,Power(g,CN1)),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,Times(n,Power(g,CN1))))),CN1)),x),x,Power(x,g))),Greater(g,C1))),And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),Less(Less(C0,Plus(m,C1)),n)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),Power(x_,m_)),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),C4))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),C4)))),Plus(Dist(Times(Power(s,C3),Power(Times(Times(Times(C2,Sqrt(C2)),b),r),CN1)),Int(Times(Power(x,Times(m,C1D2)),Power(Plus(Plus(Power(r,C2),Times(CN1,Times(Times(Times(Sqrt(C2),r),s),Power(x,Times(m,C1D2))))),Times(Power(s,C2),Power(x,m))),CN1)),x)),Times(CN1,Dist(Times(Power(s,C3),Power(Times(Times(Times(C2,Sqrt(C2)),b),r),CN1)),Int(Times(Power(x,Times(m,C1D2)),Power(Plus(Plus(Power(r,C2),Times(Times(Times(Sqrt(C2),r),s),Power(x,Times(m,C1D2)))),Times(Power(s,C2),Power(x,m))),CN1)),x))))),And(And(And(And(FreeQ(List(a,b),x),EvenQ(m)),Greater(m,C0)),SameQ(n,Times(C2,m))),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),Power(x_,m_)),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(Times(CN1,a),Power(b,CN1)),C2))),Set(s,Denominator(Rt(Times(Times(CN1,a),Power(b,CN1)),C2)))),Plus(Dist(Times(s,Power(Times(C2,b),CN1)),Int(Times(C1,Power(Plus(r,Times(s,Power(x,m))),CN1)),x)),Times(CN1,Dist(Times(s,Power(Times(C2,b),CN1)),Int(Times(C1,Power(Plus(r,Times(CN1,Times(s,Power(x,m)))),CN1)),x))))),And(And(And(And(FreeQ(List(a,b),x),EvenQ(m)),Greater(m,C0)),SameQ(n,Times(C2,m))),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),Times(n,C1D2)))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),Times(n,C1D2))))),Plus(Dist(Times(integer(-2L),Times(Power(Times(CN1,r),Plus(Times(m,C1D2),C1)),Power(Times(Times(a,n),Power(s,Times(m,C1D2))),CN1))),Int(Times(C1,Power(Plus(r,Times(s,Power(x,C2))),CN1)),x)),Dist(Times(C4,Times(Power(r,Plus(Times(m,C1D2),C1)),Power(Times(Times(a,n),Power(s,Times(m,C1D2))),CN1))),Int(Sum(Times(Plus(Times(r,Cos(Times(Times(Plus(Times(C2,k),Times(CN1,C1)),m),Times(Pi,Power(n,CN1))))),Times(CN1,Times(Times(s,Cos(Times(Times(Plus(Times(C2,k),Times(CN1,C1)),Plus(m,C2)),Times(Pi,Power(n,CN1))))),Power(x,C2)))),Power(Plus(Plus(Power(r,C2),Times(CN1,Times(Times(Times(Times(C2,r),s),Cos(Times(Times(C2,Plus(Times(C2,k),Times(CN1,C1))),Times(Pi,Power(n,CN1))))),Power(x,C2)))),Times(Power(s,C2),Power(x,C4))),CN1)),List(k,C1,Times(Plus(Times(n,C1D2),Times(CN1,C1)),C1D2))),x)))),And(And(And(And(And(FreeQ(List(a,b),x),OddQ(Times(n,C1D2))),EvenQ(m)),Less(Less(C0,m),n)),Equal(GCD(Plus(m,C1),n),C1)),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(Times(CN1,a),Power(b,CN1)),Times(n,C1D2)))),Set(s,Denominator(Rt(Times(Times(CN1,a),Power(b,CN1)),Times(n,C1D2))))),Plus(Dist(Times(C2,Times(Power(r,Plus(Times(m,C1D2),C1)),Power(Times(Times(a,n),Power(s,Times(m,C1D2))),CN1))),Int(Times(C1,Power(Plus(r,Times(CN1,Times(s,Power(x,C2)))),CN1)),x)),Dist(Times(C4,Times(Power(r,Plus(Times(m,C1D2),C1)),Power(Times(Times(a,n),Power(s,Times(m,C1D2))),CN1))),Int(Sum(Times(Plus(Times(r,Cos(Times(Times(Times(C2,k),m),Times(Pi,Power(n,CN1))))),Times(CN1,Times(Times(s,Cos(Times(Times(Times(C2,k),Plus(m,C2)),Times(Pi,Power(n,CN1))))),Power(x,C2)))),Power(Plus(Plus(Power(r,C2),Times(CN1,Times(Times(Times(Times(C2,r),s),Cos(Times(Times(C4,k),Times(Pi,Power(n,CN1))))),Power(x,C2)))),Times(Power(s,C2),Power(x,C4))),CN1)),List(k,C1,Times(Plus(Times(n,C1D2),Times(CN1,C1)),C1D2))),x)))),And(And(And(And(And(FreeQ(List(a,b),x),OddQ(Times(n,C1D2))),EvenQ(m)),Less(Less(C0,m),n)),Equal(GCD(Plus(m,C1),n),C1)),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),n))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),n)))),Int(Plus(Times(Times(Times(CN1,Power(Times(CN1,r),Plus(m,C1))),Power(Power(s,m),CN1)),Power(Times(Times(a,n),Plus(r,Times(s,x))),CN1)),Sum(Times(Times(C2,Times(Power(r,Plus(m,C1)),Power(Power(s,m),CN1))),Times(Plus(Times(r,Cos(Times(Times(Plus(Times(C2,k),Times(CN1,C1)),m),Times(Pi,Power(n,CN1))))),Times(CN1,Times(Times(s,Cos(Times(Times(Plus(Times(C2,k),Times(CN1,C1)),Plus(m,C1)),Times(Pi,Power(n,CN1))))),x))),Power(Times(Times(a,n),Plus(Plus(Power(r,C2),Times(CN1,Times(Times(Times(Times(C2,r),s),Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Times(Pi,Power(n,CN1))))),x))),Times(Power(s,C2),Power(x,C2)))),CN1))),List(k,C1,Times(Plus(n,Times(CN1,C1)),C1D2)))),x)),And(And(And(And(And(FreeQ(List(a,b),x),OddQ(n)),IntIntegerQ(m)),Less(Less(C0,m),n)),Equal(GCD(Plus(m,C1),n),C1)),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(Times(CN1,a),Power(b,CN1)),n))),Set(s,Denominator(Rt(Times(Times(CN1,a),Power(b,CN1)),n)))),Int(Plus(Times(Power(r,Plus(m,C1)),Power(Times(Times(Times(a,n),Power(s,m)),Plus(r,Times(CN1,Times(s,x)))),CN1)),Times(CN1,Sum(Times(Times(C2,Times(Power(Times(CN1,r),Plus(m,C1)),Power(Power(s,m),CN1))),Times(Plus(Times(r,Cos(Times(Times(Plus(Times(C2,k),Times(CN1,C1)),m),Times(Pi,Power(n,CN1))))),Times(Times(s,Cos(Times(Times(Plus(Times(C2,k),Times(CN1,C1)),Plus(m,C1)),Times(Pi,Power(n,CN1))))),x)),Power(Times(Times(a,n),Plus(Plus(Power(r,C2),Times(Times(Times(Times(C2,r),s),Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Times(Pi,Power(n,CN1))))),x)),Times(Power(s,C2),Power(x,C2)))),CN1))),List(k,C1,Times(Plus(n,Times(CN1,C1)),C1D2))))),x)),And(And(And(And(And(FreeQ(List(a,b),x),OddQ(n)),IntIntegerQ(m)),Less(Less(C0,m),n)),Equal(GCD(Plus(m,C1),n),C1)),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,m_),$p(d,true)),$p(c,true)),Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Times(a,Power(b,CN1)),C4))),Plus(Dist(Times(q,Power(Times(Times(C2,Sqrt(C2)),a),CN1)),Int(Times(Plus(Times(Times(Sqrt(C2),c),q),Times(Plus(c,Times(CN1,Times(d,Power(q,C2)))),Power(x,Times(m,C1D2)))),Power(Plus(Plus(Power(q,C2),Times(Times(Sqrt(C2),q),Power(x,Times(m,C1D2)))),Power(x,m)),CN1)),x)),Dist(Times(q,Power(Times(Times(C2,Sqrt(C2)),a),CN1)),Int(Times(Plus(Times(Times(Sqrt(C2),c),q),Times(CN1,Times(Plus(c,Times(CN1,Times(d,Power(q,C2)))),Power(x,Times(m,C1D2))))),Power(Plus(Plus(Power(q,C2),Times(CN1,Times(Times(Sqrt(C2),q),Power(x,Times(m,C1D2))))),Power(x,m)),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,d),x),EvenQ(m)),Greater(m,C0)),SameQ(n,Times(C2,m))),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,m_),$p(d,true)),$p(c,true)),Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),CN1)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Times(Times(CN1,a),Power(b,CN1)),C2))),Plus(Dist(Times(Plus(c,Times(d,q)),C1D2),Int(Times(C1,Power(Plus(a,Times(Times(b,q),Power(x,m))),CN1)),x)),Dist(Times(Plus(c,Times(CN1,Times(d,q))),C1D2),Int(Times(C1,Power(Plus(a,Times(CN1,Times(Times(b,q),Power(x,m)))),CN1)),x)))),And(And(And(And(And(FreeQ(List(a,b,c,d),x),EvenQ(m)),Greater(m,C0)),SameQ(n,Times(C2,m))),NegQ(Times(a,Power(b,CN1)))),NonzeroQ(Plus(Times(b,Power(c,C2)),Times(a,Power(d,C2))))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),p_),$p(x,SymbolHead)),
    Condition(Times(x,Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(a,CN1))),And(FreeQ(List(a,b,n,p),x),ZeroQ(Plus(Times(n,Plus(p,C1)),C1))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),p_),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(CN1,x),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(Times(a,n),Plus(p,C1)),CN1))),Dist(Times(Plus(Times(n,Plus(p,C1)),C1),Power(Times(Times(a,n),Plus(p,C1)),CN1)),Int(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),x))),And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(n,p))),Greater(n,C1)),Less(p,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),p_),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(x,Plus(m,C1)),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1))),And(And(And(FreeQ(List(a,b,m,n,p),x),ZeroQ(Plus(Plus(m,Times(n,Plus(p,C1))),C1))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(p,C2))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),p_),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(Plus(m,Times(CN1,n)),C1)),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(Times(b,n),Plus(p,C1)),CN1))),Times(CN1,Dist(Times(Plus(Plus(m,Times(CN1,n)),C1),Power(Times(Times(b,n),Plus(p,C1)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1))),x)))),And(And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n,p))),Greater(n,C1)),Less(p,CN1)),And(LessEqual(n,m),Less(m,Plus(Times(C2,n),Times(CN1,C1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),p_),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(CN1,Power(x,Plus(m,C1))),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(Times(a,n),Plus(p,C1)),CN1))),Dist(Times(Plus(Plus(m,Times(n,Plus(p,C1))),C1),Power(Times(Times(a,n),Plus(p,C1)),CN1)),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1))),x))),And(And(And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n,p))),Less(p,CN1)),Greater(n,C1)),Less(Less(C0,Plus(m,C1)),n)),NonzeroQ(Plus(Plus(m,Times(n,Plus(p,C1))),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),p_),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1))),Times(CN1,Dist(Times(b,Times(Plus(Plus(m,Times(n,Plus(p,C1))),C1),Power(Times(a,Plus(m,C1)),CN1))),Int(Times(Power(x,Plus(m,n)),Power(Plus(a,Times(b,Power(x,n))),p)),x)))),And(And(And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n,p))),Less(m,CN1)),Greater(n,C0)),IntIntegerQ(Times(Plus(Plus(m,Times(n,Plus(p,C1))),C1),Power(n,CN1)))),Less(Less(C0,Plus(n,Times(CN1,Times(C2,Plus(Plus(m,Times(n,Plus(p,C1))),C1))))),Times(n,p))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,n_),$p(b,true)),a_),p_),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(Plus(m,Times(CN1,n)),C1)),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(b,Plus(Plus(m,Times(n,p)),C1)),CN1))),Times(CN1,Dist(Times(a,Times(Plus(Plus(m,Times(CN1,n)),C1),Power(Times(b,Plus(Plus(m,Times(n,p)),C1)),CN1))),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(x,n))),p)),x)))),And(And(And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n,p))),NonzeroQ(Plus(Plus(m,Times(n,p)),C1))),And(IntIntegerQ(Times(Plus(m,C1),Power(n,CN1))),Less(C0,Times(Plus(m,C1),Power(n,CN1))))),Less(Times(C2,Times(m,Power(n,CN1))),Plus(p,C1))),And(Less(C0,n),LessEqual(n,m))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,$p(n,true)),$p(b,true)),a_),$p(p,true)),Power(x_,$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Expand(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,n))),p))),x),And(And(And(FreeQ(List(a,b,m,n),x),IntIntegerQ(p)),Greater(p,C0)),ExpandIntegrandQ(m,n,p)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(Plus(Times($p(d,true),x_),c_),n_),$p(b,true)),a_),p_),Power(Plus(Times($p(d,true),x_),c_),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(Plus(c,Times(d,x)),Plus(Plus(m,Times(CN1,n)),C1)),Times(Power(Plus(a,Times(b,Power(Plus(c,Times(d,x)),n))),Plus(p,C1)),Power(Times(Times(Times(b,d),n),Plus(p,C1)),CN1))),Times(CN1,Dist(Times(Plus(Plus(m,Times(CN1,n)),C1),Power(Times(Times(b,n),Plus(p,C1)),CN1)),Int(Times(Power(Plus(c,Times(d,x)),Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(Plus(c,Times(d,x)),n))),Plus(p,C1))),x)))),And(And(And(And(FreeQ(List(a,b,c,d),x),IntIntegerQ(List(m,n,p))),Greater(n,C1)),Less(p,CN1)),And(LessEqual(n,m),Less(m,Plus(Times(C2,n),Times(CN1,C1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,$p(p,true)),$p(a,true)),b_),CN1),Power(Plus(Times(Power(x_,$p(n,true)),$p(b,true)),a_),m_)),$p(x,SymbolHead)),
    Condition(Int(Times(Power(x,n),Power(Plus(a,Times(b,Power(x,n))),Plus(m,Times(CN1,C1)))),x),And(FreeQ(List(a,b,m,n,p),x),ZeroQ(Plus(n,p))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),n_),$p(x,SymbolHead)),
    Condition(Times(Int(Power(Plus(Times(b,C1D2),Times(c,x)),Times(C2,n)),x),Power(Power(c,n),CN1)),And(And(FreeQ(List(a,b,c),x),IntIntegerQ(n)),ZeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2))),Condition(Times(integer(-2L),Times(ArcTanh(Plus(Times(b,Power(q,CN1)),Times(Times(C2,c),Times(x,Power(q,CN1))))),Power(q,CN1))),And(SqrtNumberQ(q),RationalQ(Times(b,Power(q,CN1)))))),And(FreeQ(List(a,b,c),x),PosQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),CN1),$p(x,SymbolHead)),
    Condition(Times(integer(-2L),Times(ArcTanh(Times(Plus(b,Times(Times(C2,c),x)),Power(Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2),CN1))),Power(Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2),CN1))),And(FreeQ(List(a,b,c),x),PosQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Plus(Times(Times(C4,a),c),Times(CN1,Power(b,C2))),C2))),Condition(Times(C2,Times(ArcTan(Plus(Times(b,Power(q,CN1)),Times(Times(C2,c),Times(x,Power(q,CN1))))),Power(q,CN1))),And(SqrtNumberQ(q),RationalQ(Times(b,Power(q,CN1)))))),And(FreeQ(List(a,b,c),x),NegQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),CN1),$p(x,SymbolHead)),
    Condition(Times(C2,Times(ArcTan(Times(Plus(b,Times(Times(C2,c),x)),Power(Rt(Plus(Times(Times(C4,a),c),Times(CN1,Power(b,C2))),C2),CN1))),Power(Rt(Plus(Times(Times(C4,a),c),Times(CN1,Power(b,C2))),C2),CN1))),And(FreeQ(List(a,b,c),x),NegQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),$p(a,true)),fraction(-3L,2L)),$p(x,SymbolHead)),
    Condition(Times(integer(-2L),Times(Plus(b,Times(Times(C2,c),x)),Power(Times(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),Sqrt(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))))),CN1))),And(FreeQ(List(a,b,c),x),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),$p(a,true)),n_),$p(x,SymbolHead)),
    Condition(Plus(Times(Plus(b,Times(Times(C2,c),x)),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Plus(n,C1),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),CN1))),Times(CN1,Dist(Times(Times(C2,c),Times(Plus(Times(C2,n),C3),Power(Times(Plus(n,C1),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),CN1))),Int(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),x)))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(n,CN1)),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Times(Plus(Times($p(e,true),x_),$p(d,true)),Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),CN1)),$p(x,SymbolHead)),
    Condition(Times(e,Times(Log(Plus(Plus(Times(CN1,a),Times(CN1,Times(b,x))),Times(CN1,Times(c,Power(x,C2))))),Power(Times(C2,c),CN1))),And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))))),NegativeCoefficientQ(a)))),
SetDelayed(Int(Times(Plus(Times($p(e,true),x_),$p(d,true)),Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),CN1)),$p(x,SymbolHead)),
    Condition(Times(e,Times(Log(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2)))),Power(Times(C2,c),CN1))),And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))))))),
SetDelayed(Int(Times(Plus(Times($p(e,true),x_),$p(d,true)),Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(e,Times(Log(Plus(Plus(Times(CN1,a),Times(CN1,Times(b,x))),Times(CN1,Times(c,Power(x,C2))))),Power(Times(C2,c),CN1))),Dist(Simplify(Times(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))),Power(Times(C2,c),CN1))),Int(Times(C1,Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d,e),x),Not(RationalQ(Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2)))),NonzeroQ(Plus(Plus(Times(a,Power(e,C2)),Times(c,Power(d,C2))),Times(CN1,Times(Times(b,d),e))))),NegativeCoefficientQ(a)))),
SetDelayed(Int(Times(Plus(Times($p(e,true),x_),$p(d,true)),Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(e,Times(Log(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2)))),Power(Times(C2,c),CN1))),Dist(Simplify(Times(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))),Power(Times(C2,c),CN1))),Int(Times(C1,Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),CN1)),x))),And(And(FreeQ(List(a,b,c,d,e),x),Not(RationalQ(Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2)))),NonzeroQ(Plus(Plus(Times(a,Power(e,C2)),Times(c,Power(d,C2))),Times(CN1,Times(Times(b,d),e))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),a_),$p(n,true)),Power(Plus(Times($p(e,true),x_),d_),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Times(Power(Plus(d,Times(e,x)),Plus(m,n)),Power(Plus(Times(a,Power(d,CN1)),Times(Times(c,Power(e,CN1)),x)),n)),x),And(And(FreeQ(List(a,c,d,e,m),x),IntIntegerQ(n)),ZeroQ(Plus(Times(a,Power(e,C2)),Times(c,Power(d,C2))))))),
SetDelayed(Int(Times(Plus(Times($p(e,true),x_),d_),Power(Plus(Times(Power(x_,C2),$p(c,true)),$p(a,true)),n_)),$p(x,SymbolHead)),
    Condition(Plus(Times(e,Times(Power(Plus(a,Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Times(C2,c),Plus(n,C1)),CN1))),Dist(d,Int(Power(Plus(a,Times(c,Power(x,C2))),n),x))),And(And(FreeQ(List(a,c,d,e,n),x),NonzeroQ(Plus(n,C1))),Not(And(IntIntegerQ(n),Greater(n,C0)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),$p(a,true)),n_),Power(Plus(Times($p(e,true),x_),d_),m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1)))),Times(Power(Plus(a,Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(c,Plus(Plus(m,Times(C2,n)),C1)),CN1))),Times(CN1,Dist(Times(Plus(Times(a,Power(e,C2)),Times(c,Power(d,C2))),Times(Plus(m,Times(CN1,C1)),Power(Times(c,Plus(Plus(m,Times(C2,n)),C1)),CN1))),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C2))),Power(Plus(a,Times(c,Power(x,C2))),n)),x)))),And(And(And(FreeQ(List(a,c,d,e),x),RationalQ(List(m,n))),Greater(m,C1)),ZeroQ(Plus(m,n))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),$p(a,true)),n_),Power(Plus(Times($p(e,true),x_),d_),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1)))),Times(Power(Plus(a,Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(c,Plus(Plus(m,Times(C2,n)),C1)),CN1))),Dist(Times(Times(Times(C2,c),d),Times(Plus(m,n),Power(Times(c,Plus(Plus(m,Times(C2,n)),C1)),CN1))),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1))),Power(Plus(a,Times(c,Power(x,C2))),n)),x))),And(And(And(And(And(FreeQ(List(a,c,d,e,n),x),RationalQ(m)),Greater(m,C1)),NonzeroQ(Plus(Plus(m,Times(C2,n)),C1))),Not(And(IntIntegerQ(n),GreaterEqual(n,CN1)))),ZeroQ(Plus(Times(a,Power(e,C2)),Times(c,Power(d,C2))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),a_),n_),Power(Plus(Times($p(e,true),x_),d_),m_)),$p(x,SymbolHead)),
    Condition(Times(Times(e,Power(Plus(d,Times(e,x)),m)),Times(Power(Plus(a,Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Times(Times(C2,c),d),Plus(n,C1)),CN1))),And(And(And(FreeQ(List(a,c,d,e,n),x),ZeroQ(Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2))))),ZeroQ(Plus(m,Times(C2,Plus(n,C1))))),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),a_),n_),Power(Plus(Times($p(e,true),x_),d_),m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(Times(CN1,e),Power(Plus(d,Times(e,x)),m)),Times(Power(Plus(a,Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Times(Times(C2,c),d),Plus(Plus(m,n),C1)),CN1))),Dist(Times(Plus(m,Times(C2,Plus(n,C1))),Power(Times(Times(C2,d),Plus(Plus(m,n),C1)),CN1)),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(c,Power(x,C2))),n)),x))),And(And(And(And(FreeQ(List(a,c,d,e,n),x),RationalQ(m)),Less(m,CN1)),ZeroQ(Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2))))),NonzeroQ(Plus(Plus(m,n),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),a_),n_),Power(Plus(Times($p(e,true),x_),d_),m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(e,Power(Plus(d,Times(e,x)),Plus(m,C1))),Times(Power(Plus(a,Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Plus(m,C1),Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2)))),CN1))),Dist(Times(Times(Times(C2,c),d),Times(Plus(Plus(m,n),C2),Power(Times(Plus(m,C1),Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2)))),CN1))),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(c,Power(x,C2))),n)),x))),And(And(And(And(And(FreeQ(List(a,c,d,e,n),x),RationalQ(m)),Less(m,CN1)),NonzeroQ(Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2))))),Not(And(IntIntegerQ(n),GreaterEqual(n,CN1)))),ZeroQ(Plus(Plus(m,Times(C2,n)),C3))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),$p(a,true)),$p(n,true)),Power(Plus(Times($p(e,true),x_),d_),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Times(Power(Plus(d,Times(e,x)),Plus(m,n)),Power(Plus(Times(a,Power(d,CN1)),Times(Times(c,Power(e,CN1)),x)),n)),x),And(And(FreeQ(List(a,b,c,d,e,m),x),IntIntegerQ(n)),ZeroQ(Plus(Plus(Times(a,Power(e,C2)),Times(c,Power(d,C2))),Times(CN1,Times(Times(b,d),e))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),$p(a,true)),n_),Power(Plus(Times($p(e,true),x_),$p(d,true)),m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(Times(CN1,e),Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1)))),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(c,Plus(m,Times(CN1,C1))),CN1))),Dist(Times(Power(e,C2),Power(c,CN1)),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C2))),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1))),x))),And(And(And(And(FreeQ(List(a,b,c,d,e),x),RationalQ(List(m,n))),Less(n,CN1)),ZeroQ(Plus(Plus(m,Times(C2,n)),C1))),ZeroQ(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))))))),
SetDelayed(Int(Times(Plus(Times($p(e,true),x_),$p(d,true)),Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),$p(a,true)),n_)),$p(x,SymbolHead)),
    Condition(Times(e,Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Times(C2,c),Plus(n,C1)),CN1))),And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))))),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(Times(Plus(Times($p(e,true),x_),$p(d,true)),Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),$p(a,true)),n_)),$p(x,SymbolHead)),
    Condition(Plus(Times(e,Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Times(C2,c),Plus(n,C1)),CN1))),Dist(Times(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))),Power(Times(C2,c),CN1)),Int(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n),x))),And(And(FreeQ(List(a,b,c,d,e,n),x),NonzeroQ(Plus(n,C1))),Not(And(IntIntegerQ(n),Greater(n,C0)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),$p(a,true)),n_),Power(Plus(Times($p(e,true),x_),$p(d,true)),m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1)))),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(c,Plus(Plus(m,Times(C2,n)),C1)),CN1))),Times(CN1,Dist(Times(Plus(Times(e,Plus(Times(a,e),Times(CN1,Times(b,d)))),Times(c,Power(d,C2))),Times(Plus(m,Times(CN1,C1)),Power(Times(c,Plus(Plus(m,Times(C2,n)),C1)),CN1))),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C2))),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n)),x)))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,n),x),RationalQ(m)),Greater(m,C1)),NonzeroQ(Plus(Plus(m,Times(C2,n)),C1))),Not(And(IntIntegerQ(n),GreaterEqual(n,CN1)))),Or(ZeroQ(Plus(m,n)),ZeroQ(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),$p(a,true)),n_),Power(Plus(Times($p(e,true),x_),$p(d,true)),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1)))),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(c,Plus(Plus(m,Times(C2,n)),C1)),CN1))),Dist(Times(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))),Times(Plus(m,n),Power(Times(c,Plus(Plus(m,Times(C2,n)),C1)),CN1))),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1))),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n)),x))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,n),x),RationalQ(m)),Greater(m,C1)),NonzeroQ(Plus(Plus(m,Times(C2,n)),C1))),Not(And(IntIntegerQ(n),GreaterEqual(n,CN1)))),ZeroQ(Plus(Times(e,Times(Plus(Times(a,e),Times(CN1,Times(b,d))),Power(c,CN1))),Power(d,C2)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_)),n_),Power(x_,m_)),$p(x,SymbolHead)),
    Condition(Times(Power(x,m),Times(Power(Plus(Times(b,x),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(b,Plus(Plus(m,n),C1)),CN1))),And(And(FreeQ(List(b,c,m,n),x),NonzeroQ(Plus(Plus(m,n),C1))),ZeroQ(Plus(m,Times(C2,Plus(n,C1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_)),n_),Power(x_,m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,m),Times(Power(Plus(Times(b,x),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(b,Plus(Plus(m,n),C1)),CN1))),Times(CN1,Dist(Times(c,Times(Plus(m,Times(C2,Plus(n,C1))),Power(Times(b,Plus(Plus(m,n),C1)),CN1))),Int(Times(Power(x,Plus(m,C1)),Power(Plus(Times(b,x),Times(c,Power(x,C2))),n)),x)))),And(And(And(And(FreeQ(List(b,c,n),x),RationalQ(m)),Less(m,CN1)),NonzeroQ(Plus(Plus(m,n),C1))),Not(And(IntIntegerQ(n),GreaterEqual(n,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(c,true)),Times($p(b,true),x_),a_),n_),Power(Plus(Times($p(e,true),x_),$p(d,true)),m_)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(e,Power(Plus(d,Times(e,x)),Plus(m,C1))),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Plus(m,C1),Plus(Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2))),Times(CN1,Times(Times(b,d),e)))),CN1))),Dist(Times(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))),Times(Plus(Plus(m,n),C2),Power(Times(Plus(m,C1),Plus(Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2))),Times(CN1,Times(Times(b,d),e)))),CN1))),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n)),x))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,n),x),RationalQ(m)),Less(m,CN1)),NonzeroQ(Plus(Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2))),Times(CN1,Times(Times(b,d),e))))),Not(And(IntIntegerQ(n),GreaterEqual(n,CN1)))),ZeroQ(Plus(Plus(m,Times(C2,n)),C3))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(b,true)),Times(Power(x_,C4),$p(c,true)),a_),CN1),$p(u,true)),$p(x,SymbolHead)),
    Condition(Dist(c,Int(Times(u,Power(Power(Plus(Times(b,C1D2),Times(c,Power(x,C2))),C2),CN1)),x)),And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))),IntPolynomialQ(u,x)))),
SetDelayed(Int(Times(Plus(Times(Power(x_,C2),$p(e,true)),d_),Power(Plus(Times(Power(x_,C2),$p(b,true)),Times(Power(x_,C4),$p(c,true)),a_),CN1)),$p(x,SymbolHead)),
    Condition(Times(Times(d,Power(Times(a,Rt(Times(Plus(Times(d,b),Times(Times(C2,e),a)),Power(Times(d,a),CN1)),C2)),CN1)),ArcTan(Times(Times(d,Rt(Times(Plus(Times(d,b),Times(Times(C2,e),a)),Power(Times(d,a),CN1)),C2)),Times(x,Power(Plus(d,Times(CN1,Times(e,Power(x,C2)))),CN1))))),And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Times(Power(d,C2),c),Times(CN1,Times(Power(e,C2),a))))),PosQ(Times(Plus(Times(d,b),Times(Times(C2,e),a)),Power(Times(d,a),CN1)))))),
SetDelayed(Int(Times(Plus(Times(Power(x_,C2),$p(e,true)),d_),Power(Plus(Times(Power(x_,C2),$p(b,true)),Times(Power(x_,C4),$p(c,true)),a_),CN1)),$p(x,SymbolHead)),
    Condition(Times(Times(d,Power(Times(a,Rt(Times(Times(CN1,Plus(Times(d,b),Times(Times(C2,e),a))),Power(Times(d,a),CN1)),C2)),CN1)),ArcTanh(Times(Times(d,Rt(Times(Times(CN1,Plus(Times(d,b),Times(Times(C2,e),a))),Power(Times(d,a),CN1)),C2)),Times(x,Power(Plus(d,Times(CN1,Times(e,Power(x,C2)))),CN1))))),And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Times(Power(d,C2),c),Times(CN1,Times(Power(e,C2),a))))),NegQ(Times(Plus(Times(d,b),Times(Times(C2,e),a)),Power(Times(d,a),CN1)))))),
SetDelayed(Int(Power(Plus(Times(Power(x_,C2),$p(b,true)),Times(Power(x_,C4),$p(c,true)),a_),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Times(a,Power(c,CN1)),C2))),Plus(Dist(Times(c,Times(q,Power(Times(C2,a),CN1))),Int(Times(Plus(q,Power(x,C2)),Power(Plus(Plus(a,Times(b,Power(x,C2))),Times(c,Power(x,C4))),CN1)),x)),Dist(Times(c,Times(q,Power(Times(C2,a),CN1))),Int(Times(Plus(q,Times(CN1,Power(x,C2))),Power(Plus(Plus(a,Times(b,Power(x,C2))),Times(c,Power(x,C4))),CN1)),x)))),And(And(FreeQ(List(a,b,c),x),PosQ(Times(a,Power(c,CN1)))),Or(NegativeQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),And(RationalQ(Times(a,Power(c,CN1))),Not(PositiveQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))))))
  );
}
