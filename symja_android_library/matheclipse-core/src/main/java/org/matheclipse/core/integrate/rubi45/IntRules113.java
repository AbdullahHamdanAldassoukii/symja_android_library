package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules113 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(u_,Power(E,Times(pn_DEFAULT,ArcTan(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Times(Power(Plus(c,Times(pd,Sqr(x))),p),Power(Power(Plus(C1,Times(Sqr(a),Sqr(x))),p),CN1),Int(Times(u,Power(Plus(C1,Times(Sqr(a),Sqr(x))),p),Power(E,Times(pn,ArcTan(Times(a,x))))),x)),And(And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),Not(Or(IntegerQ(p),PositiveQ(c)))),Not(IntegerQ(Times(CI,C1D2,pn)))),Not(IntegerQ(Plus(p,C1D2)))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcTan(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Int(Times(u,Power(Power(x,Times(C2,p)),CN1),Power(Plus(C1,Times(Sqr(a),Sqr(x))),p),Power(E,Times(pn,ArcTan(Times(a,x))))),x)),And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),IntegerQ(p)))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_,ArcTan(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_)),x_Symbol),
    Condition(Times(Power(c,p),Int(Times(u,Power(Plus(C1,Times(CN1,CI,Power(Times(a,x),CN1))),p),Power(Plus(C1,Times(CI,Power(Times(a,x),CN1))),p),Power(E,Times(pn,ArcTan(Times(a,x))))),x)),And(And(And(And(FreeQ(List(a,c,pd,p),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),Not(IntegerQ(p))),IntegerQ(Times(CI,C1D2,pn))),PositiveQ(c)))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_,ArcTan(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_)),x_Symbol),
    Condition(Times(Power(x,Times(C2,p)),Power(Plus(c,Times(pd,Power(x,CN2))),p),Power(Times(Power(Plus(C1,Times(CN1,CI,a,x)),p),Power(Plus(C1,Times(CI,a,x)),p)),CN1),Int(Times(u,Power(Power(x,Times(C2,p)),CN1),Power(Plus(C1,Times(CN1,CI,a,x)),p),Power(Plus(C1,Times(CI,a,x)),p),Power(E,Times(pn,ArcTan(Times(a,x))))),x)),And(And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),Not(IntegerQ(p))),IntegerQ(Times(CI,C1D2,pn))),Not(PositiveQ(c))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcTan(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_)),x_Symbol),
    Condition(Times(Power(x,Times(C2,p)),Power(Plus(c,Times(pd,Power(x,CN2))),p),Power(Power(Plus(C1,Times(Sqr(a),Sqr(x))),p),CN1),Int(Times(u,Power(Power(x,Times(C2,p)),CN1),Power(Plus(C1,Times(Sqr(a),Sqr(x))),p),Power(E,Times(pn,ArcTan(Times(a,x))))),x)),And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),Not(IntegerQ(p))),Not(IntegerQ(Times(CI,C1D2,pn)))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_,ArcCot(Times(a_DEFAULT,x_))))),x_Symbol),
    Condition(Times(Power(CN1,Times(CI,C1D2,pn)),Int(Times(u,Power(E,Times(CN1,pn,ArcTan(Times(a,x))))),x)),And(FreeQ(a,x),IntegerQ(Times(CI,C1D2,pn))))),
ISetDelayed(Int(Power(E,Times(pn_,ArcCot(Times(a_DEFAULT,x_)))),x_Symbol),
    Condition(Times(CN1,Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(C1D2,Plus(Times(CI,pn),C1))),Power(Times(Sqr(x),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(C1D2,Plus(Times(CI,pn),Times(CN1,C1)))),Sqrt(Plus(C1,Times(Sqr(x),Power(a,CN2))))),CN1)),x),x,Power(x,CN1))),And(FreeQ(a,x),OddQ(Times(CI,pn))))),
ISetDelayed(Int(Times(Power(E,Times(pn_,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(C1D2,Plus(Times(CI,pn),C1))),Power(Times(Power(x,Plus(m,C2)),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(C1D2,Plus(Times(CI,pn),Times(CN1,C1)))),Sqrt(Plus(C1,Times(Sqr(x),Power(a,CN2))))),CN1)),x),x,Power(x,CN1))),And(And(FreeQ(a,x),OddQ(Times(CI,pn))),IntegerQ(m)))),
ISetDelayed(Int(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),x_Symbol),
    Condition(Times(CN1,Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(CI,C1D2,pn)),Power(Times(Sqr(x),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(CI,C1D2,pn))),CN1)),x),x,Power(x,CN1))),And(FreeQ(List(a,pn),x),Not(IntegerQ(Times(CI,pn)))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(C1D2,pn)),Power(Times(Power(x,Plus(m,C2)),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(C1D2,pn))),CN1)),x),x,Power(x,CN1))),And(And(FreeQ(List(a,pn),x),Not(IntegerQ(Times(CI,pn)))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(E,Times(pn_,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_)),x_Symbol),
    Condition(Times(CN1,Power(x,m),Power(Power(x,CN1),m),Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(C1D2,Plus(Times(CI,pn),C1))),Power(Times(Power(x,Plus(m,C2)),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(C1D2,Plus(Times(CI,pn),Times(CN1,C1)))),Sqrt(Plus(C1,Times(Sqr(x),Power(a,CN2))))),CN1)),x),x,Power(x,CN1))),And(And(FreeQ(List(a,m),x),OddQ(Times(CI,pn))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_)),x_Symbol),
    Condition(Times(CN1,Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(C1D2,pn)),Power(Times(Power(x,Plus(m,C2)),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(C1D2,pn))),CN1)),x),x,Power(x,CN1))),And(And(FreeQ(List(a,m,pn),x),Not(IntegerQ(Times(CI,C1D2,pn)))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(x_,pd_DEFAULT)),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Int(Times(u,Power(x,p),Power(Plus(C1,Times(c,Power(Times(pd,x),CN1))),p),Power(E,Times(pn,ArcCot(Times(a,x))))),x)),And(And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(Times(Sqr(a),Sqr(c)),Sqr(pd)))),Not(IntegerQ(Times(CI,C1D2,pn)))),IntegerQ(p)))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(x_,pd_DEFAULT)),p_)),x_Symbol),
    Condition(Times(Power(Plus(c,Times(pd,x)),p),Power(Times(Power(x,p),Power(Plus(C1,Times(c,Power(Times(pd,x),CN1))),p)),CN1),Int(Times(u,Power(x,p),Power(Plus(C1,Times(c,Power(Times(pd,x),CN1))),p),Power(E,Times(pn,ArcCot(Times(a,x))))),x)),And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(Times(Sqr(a),Sqr(c)),Sqr(pd)))),Not(IntegerQ(Times(CI,C1D2,pn)))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN1))),p_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(c,p),Subst(Int(Times(Power(Plus(C1,Times(pd,x,Power(c,CN1))),p),Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(CI,C1D2,pn)),Power(Times(Sqr(x),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(CI,C1D2,pn))),CN1)),x),x,Power(x,CN1))),And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(Sqr(c),Times(Sqr(a),Sqr(pd))))),Not(IntegerQ(Times(CI,C1D2,pn)))),Or(IntegerQ(p),PositiveQ(c))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_DEFAULT),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN1))),p_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(c,p),Subst(Int(Times(Power(Plus(C1,Times(pd,x,Power(c,CN1))),p),Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(CI,C1D2,pn)),Power(Times(Power(x,Plus(m,C2)),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(CI,C1D2,pn))),CN1)),x),x,Power(x,CN1))),And(And(And(And(FreeQ(List(a,c,pd,m,pn,p),x),ZeroQ(Plus(Sqr(c),Times(Sqr(a),Sqr(pd))))),Not(IntegerQ(Times(CI,C1D2,pn)))),Or(IntegerQ(p),PositiveQ(c))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN1))),p_)),x_Symbol),
    Condition(Times(Power(Plus(c,Times(pd,Power(x,CN1))),p),Power(Power(Plus(C1,Times(pd,Power(Times(c,x),CN1))),p),CN1),Int(Times(Power(Plus(C1,Times(pd,Power(Times(c,x),CN1))),p),Power(E,Times(pn,ArcCot(Times(a,x))))),x)),And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(Sqr(c),Times(Sqr(a),Sqr(pd))))),Not(IntegerQ(Times(CI,C1D2,pn)))),Not(Or(IntegerQ(p),PositiveQ(c)))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN1))),p_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(c,p),Power(x,m),Power(Power(x,CN1),m),Subst(Int(Times(Power(Plus(C1,Times(pd,x,Power(c,CN1))),p),Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Times(CI,C1D2,pn)),Power(Times(Power(x,Plus(m,C2)),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Times(CI,C1D2,pn))),CN1)),x),x,Power(x,CN1))),And(And(And(And(FreeQ(List(a,c,pd,m,pn,p),x),ZeroQ(Plus(Sqr(c),Times(Sqr(a),Sqr(pd))))),Not(IntegerQ(Times(CI,C1D2,pn)))),Or(IntegerQ(p),PositiveQ(c))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN1))),p_)),x_Symbol),
    Condition(Times(Power(Plus(c,Times(pd,Power(x,CN1))),p),Power(Power(Plus(C1,Times(pd,Power(Times(c,x),CN1))),p),CN1),Int(Times(u,Power(Plus(C1,Times(pd,Power(Times(c,x),CN1))),p),Power(E,Times(pn,ArcCot(Times(a,x))))),x)),And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(Sqr(c),Times(Sqr(a),Sqr(pd))))),Not(IntegerQ(Times(CI,C1D2,pn)))),Not(Or(IntegerQ(p),PositiveQ(c)))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),CN1)),x_Symbol),
    Condition(Times(CN1,Power(E,Times(pn,ArcCot(Times(a,x)))),Power(Times(a,c,pn),CN1)),And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),QQ(-3L,2L))),x_Symbol),
    Condition(Times(CN1,Plus(pn,Times(CN1,a,x)),Power(E,Times(pn,ArcCot(Times(a,x)))),Power(Times(a,c,Plus(Sqr(pn),C1),Sqrt(Plus(c,Times(pd,Sqr(x))))),CN1)),And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),Not(OddQ(Times(CI,pn)))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(pn,Times(C2,a,Plus(p,C1),x)),Power(Plus(c,Times(pd,Sqr(x))),Plus(p,C1)),Power(E,Times(pn,ArcCot(Times(a,x)))),Power(Times(a,c,Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1))))),CN1)),Times(C2,Plus(p,C1),Plus(Times(C2,p),C3),Power(Times(c,Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1))))),CN1),Int(Times(Power(Plus(c,Times(pd,Sqr(x))),Plus(p,C1)),Power(E,Times(pn,ArcCot(Times(a,x))))),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),RationalQ(p)),Less(p,CN1)),Unequal(p,QQ(-3L,2L))),NonzeroQ(Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1)))))),Not(And(IntegerQ(p),EvenQ(Times(CI,pn))))),Not(And(Not(IntegerQ(p)),OddQ(Times(CI,pn))))))),
ISetDelayed(Int(Times(x_,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),QQ(-3L,2L))),x_Symbol),
    Condition(Times(CN1,Plus(C1,Times(a,pn,x)),Power(E,Times(pn,ArcCot(Times(a,x)))),Power(Times(Sqr(a),c,Plus(Sqr(pn),C1),Sqrt(Plus(c,Times(pd,Sqr(x))))),CN1)),And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),Not(OddQ(Times(CI,pn)))))),
ISetDelayed(Int(Times(x_,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(Plus(Times(C2,Plus(p,C1)),Times(CN1,a,pn,x)),Power(Plus(c,Times(pd,Sqr(x))),Plus(p,C1)),Power(E,Times(pn,ArcCot(Times(a,x)))),Power(Times(Sqr(a),c,Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1))))),CN1)),Times(pn,Plus(Times(C2,p),C3),Power(Times(a,c,Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1))))),CN1),Int(Times(Power(Plus(c,Times(pd,Sqr(x))),Plus(p,C1)),Power(E,Times(pn,ArcCot(Times(a,x))))),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),RationalQ(p)),LessEqual(p,CN1)),Unequal(p,QQ(-3L,2L))),NonzeroQ(Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1)))))),Not(And(IntegerQ(p),EvenQ(Times(CI,pn))))),Not(And(Not(IntegerQ(p)),OddQ(Times(CI,pn))))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Sqr(x_),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Plus(pn,Times(C2,Plus(p,C1),a,x)),Power(Plus(c,Times(pd,Sqr(x))),Plus(p,C1)),Power(E,Times(pn,ArcCot(Times(a,x)))),Power(Times(Power(a,C3),c,Sqr(pn),Plus(Sqr(pn),C1)),CN1)),And(And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),ZeroQ(Plus(Sqr(pn),Times(CN1,C2,Plus(p,C1))))),NonzeroQ(Plus(Sqr(pn),C1))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Sqr(x_),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(Plus(pn,Times(C2,Plus(p,C1),a,x)),Power(Plus(c,Times(pd,Sqr(x))),Plus(p,C1)),Power(E,Times(pn,ArcCot(Times(a,x)))),Power(Times(Power(a,C3),c,Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1))))),CN1)),Times(Plus(Sqr(pn),Times(CN1,C2,Plus(p,C1))),Power(Times(Sqr(a),c,Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1))))),CN1),Int(Times(Power(Plus(c,Times(pd,Sqr(x))),Plus(p,C1)),Power(E,Times(pn,ArcCot(Times(a,x))))),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),RationalQ(p)),LessEqual(p,CN1)),NonzeroQ(Plus(Sqr(pn),Times(CN1,C2,Plus(p,C1))))),NonzeroQ(Plus(Sqr(pn),Times(C4,Sqr(Plus(p,C1)))))),Not(And(IntegerQ(p),EvenQ(Times(CI,pn))))),Not(And(Not(IntegerQ(p)),OddQ(Times(CI,pn))))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_DEFAULT),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Times(CN1,Power(c,p),Power(Power(a,Plus(m,C1)),CN1),Subst(Int(Times(Power(E,Times(pn,x)),Power(Cot(x),Plus(m,Times(C2,Plus(p,C1)))),Power(Power(Cos(x),Times(C2,Plus(p,C1))),CN1)),x),x,ArcCot(Times(a,x)))),And(And(And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),IntegerQ(m)),LessEqual(LessEqual(C3,m),Times(CN2,Plus(p,C1)))),IntegerQ(p)))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Int(Times(u,Power(x,Times(C2,p)),Power(Plus(C1,Power(Times(Sqr(a),Sqr(x)),CN1)),p),Power(E,Times(pn,ArcCot(Times(a,x))))),x)),And(And(And(FreeQ(List(a,c,pd,pn),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),Not(IntegerQ(Times(CI,C1D2,pn)))),IntegerQ(p)))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Times(Power(Plus(c,Times(pd,Sqr(x))),p),Power(Times(Power(x,Times(C2,p)),Power(Plus(C1,Power(Times(Sqr(a),Sqr(x)),CN1)),p)),CN1),Int(Times(u,Power(x,Times(C2,p)),Power(Plus(C1,Power(Times(Sqr(a),Sqr(x)),CN1)),p),Power(E,Times(pn,ArcCot(Times(a,x))))),x)),And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(pd,Times(CN1,Sqr(a),c)))),Not(IntegerQ(Times(CI,C1D2,pn)))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(c,p),Power(Power(Times(CI,a),Times(C2,p)),CN1),Int(Times(u,Power(Power(x,Times(C2,p)),CN1),Power(Plus(CN1,Times(CI,a,x)),Plus(p,Times(CN1,CI,C1D2,pn))),Power(Plus(C1,Times(CI,a,x)),Plus(p,Times(CI,C1D2,pn)))),x)),And(And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),Not(IntegerQ(Times(CI,C1D2,pn)))),Or(IntegerQ(p),PositiveQ(c))),IntegersQ(Times(C2,p),Plus(p,Times(CI,C1D2,pn)))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(c,p),Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Plus(p,Times(CI,C1D2,pn))),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Plus(p,Times(CN1,CI,C1D2,pn))),Power(x,CN2)),x),x,Power(x,CN1))),And(And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),Not(IntegerQ(Times(CI,C1D2,pn)))),Or(IntegerQ(p),PositiveQ(c))),Not(IntegersQ(Times(C2,p),Plus(p,Times(CI,C1D2,pn))))))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_DEFAULT),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(c,p),Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Plus(p,Times(CI,C1D2,pn))),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Plus(p,Times(CN1,CI,C1D2,pn))),Power(Power(x,Plus(m,C2)),CN1)),x),x,Power(x,CN1))),And(And(And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),Not(IntegerQ(Times(CI,C1D2,pn)))),Or(IntegerQ(p),PositiveQ(c))),Not(IntegersQ(Times(C2,p),Plus(p,Times(CI,C1D2,pn))))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(x_,m_),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(c,p),Power(x,m),Power(Power(x,CN1),m),Subst(Int(Times(Power(Plus(C1,Times(CN1,CI,x,Power(a,CN1))),Plus(p,Times(CI,C1D2,pn))),Power(Plus(C1,Times(CI,x,Power(a,CN1))),Plus(p,Times(CN1,CI,C1D2,pn))),Power(Power(x,Plus(m,C2)),CN1)),x),x,Power(x,CN1))),And(And(And(And(And(FreeQ(List(a,c,pd,m,pn,p),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),Not(IntegerQ(Times(CI,C1D2,pn)))),Or(IntegerQ(p),PositiveQ(c))),Not(IntegersQ(Times(C2,p),Plus(p,Times(CI,C1D2,pn))))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Times(a_DEFAULT,x_)))),Power(Plus(c_,Times(pd_DEFAULT,Power(x_,CN2))),p_)),x_Symbol),
    Condition(Times(Power(Plus(c,Times(pd,Power(x,CN2))),p),Power(Power(Plus(C1,Power(Times(Sqr(a),Sqr(x)),CN1)),p),CN1),Int(Times(u,Power(Plus(C1,Power(Times(Sqr(a),Sqr(x)),CN1)),p),Power(E,Times(pn,ArcCot(Times(a,x))))),x)),And(And(And(FreeQ(List(a,c,pd,pn,p),x),ZeroQ(Plus(c,Times(CN1,Sqr(a),pd)))),Not(IntegerQ(Times(CI,C1D2,pn)))),Not(Or(IntegerQ(p),PositiveQ(c)))))),
ISetDelayed(Int(Power(E,Times(pn_DEFAULT,ArcTan(Times(c_DEFAULT,Plus(a_,Times(b_DEFAULT,x_)))))),x_Symbol),
    Condition(Int(Times(Power(Plus(C1,Times(CN1,CI,a,c),Times(CN1,CI,b,c,x)),Times(CI,C1D2,pn)),Power(Power(Plus(C1,Times(CI,a,c),Times(CI,b,c,x)),Times(CI,C1D2,pn)),CN1)),x),FreeQ(List(a,b,c,pn),x))),
ISetDelayed(Int(Times(Power(E,Times(pn_,ArcTan(Times(c_DEFAULT,Plus(a_,Times(b_DEFAULT,x_)))))),Power(x_,m_)),x_Symbol),
    Condition(Times(C4,Power(Times(Power(CI,m),pn,Power(b,Plus(m,C1)),Power(c,Plus(m,C1))),CN1),Subst(Int(Times(Power(x,Times(C2,Power(Times(CI,pn),CN1))),Power(Plus(C1,Times(CN1,CI,a,c),Times(CN1,Plus(C1,Times(CI,a,c)),Power(x,Times(C2,Power(Times(CI,pn),CN1))))),m),Power(Power(Plus(C1,Power(x,Times(C2,Power(Times(CI,pn),CN1)))),Plus(m,C2)),CN1)),x),x,Times(Power(Plus(C1,Times(CN1,CI,c,Plus(a,Times(b,x)))),Times(CI,C1D2,pn)),Power(Power(Plus(C1,Times(CI,c,Plus(a,Times(b,x)))),Times(CI,C1D2,pn)),CN1)))),And(And(And(FreeQ(List(a,b,c),x),NegativeIntegerQ(m)),RationalQ(Times(CI,pn))),Less(Less(CN1,Times(CI,pn)),C1)))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcTan(Times(c_DEFAULT,Plus(a_,Times(b_DEFAULT,x_)))))),Power(Plus(pd_DEFAULT,Times(x_,pe_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(pd,Times(pe,x)),m),Power(Plus(C1,Times(CN1,CI,a,c),Times(CN1,CI,b,c,x)),Times(CI,C1D2,pn)),Power(Power(Plus(C1,Times(CI,a,c),Times(CI,b,c,x)),Times(CI,C1D2,pn)),CN1)),x),FreeQ(List(a,b,c,pd,pe,m,pn),x))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcTan(Plus(a_,Times(b_DEFAULT,x_))))),Power(Plus(c_,Times(x_,pd_DEFAULT),Times(pe_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(c,Power(Plus(C1,Sqr(a)),CN1)),p),Int(Times(u,Power(Plus(C1,Times(CN1,CI,a),Times(CN1,CI,b,x)),Plus(p,Times(CI,C1D2,pn))),Power(Plus(C1,Times(CI,a),Times(CI,b,x)),Plus(p,Times(CN1,CI,C1D2,pn)))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,pn,p),x),ZeroQ(Plus(Times(b,pd),Times(CN1,C2,a,pe)))),ZeroQ(Plus(Times(Sqr(b),c),Times(CN1,pe,Plus(C1,Sqr(a)))))),Or(IntegerQ(p),PositiveQ(Times(c,Power(Plus(C1,Sqr(a)),CN1))))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcTan(Plus(a_,Times(b_DEFAULT,x_))))),Power(Plus(c_,Times(x_,pd_DEFAULT),Times(pe_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(c,Times(pd,x),Times(pe,Sqr(x))),p),Power(Power(Plus(C1,Sqr(a),Times(C2,a,b,x),Times(Sqr(b),Sqr(x))),p),CN1),Int(Times(u,Power(Plus(C1,Sqr(a),Times(C2,a,b,x),Times(Sqr(b),Sqr(x))),p),Power(E,Times(pn,ArcTan(Times(a,x))))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,pn,p),x),ZeroQ(Plus(Times(b,pd),Times(CN1,C2,a,pe)))),ZeroQ(Plus(Times(Sqr(b),c),Times(CN1,pe,Plus(C1,Sqr(a)))))),Not(Or(IntegerQ(p),PositiveQ(Times(c,Power(Plus(C1,Sqr(a)),CN1)))))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_,ArcCot(Times(c_DEFAULT,Plus(a_,Times(b_DEFAULT,x_))))))),x_Symbol),
    Condition(Times(Power(CN1,Times(CI,C1D2,pn)),Int(Times(u,Power(E,Times(CN1,pn,ArcTan(Times(c,Plus(a,Times(b,x))))))),x)),And(FreeQ(List(a,b,c),x),IntegerQ(Times(CI,C1D2,pn))))),
ISetDelayed(Int(Power(E,Times(pn_DEFAULT,ArcCot(Times(c_DEFAULT,Plus(a_,Times(b_DEFAULT,x_)))))),x_Symbol),
    Condition(Times(Power(Times(CI,c,Plus(a,Times(b,x))),Times(CI,C1D2,pn)),Power(Plus(C1,Power(Times(CI,c,Plus(a,Times(b,x))),CN1)),Times(CI,C1D2,pn)),Power(Power(Plus(C1,Times(CI,a,c),Times(CI,b,c,x)),Times(CI,C1D2,pn)),CN1),Int(Times(Power(Plus(C1,Times(CI,a,c),Times(CI,b,c,x)),Times(CI,C1D2,pn)),Power(Power(Plus(CN1,Times(CI,a,c),Times(CI,b,c,x)),Times(CI,C1D2,pn)),CN1)),x)),And(FreeQ(List(a,b,c,pn),x),Not(IntegerQ(Times(CI,C1D2,pn)))))),
ISetDelayed(Int(Times(Power(E,Times(pn_,ArcCoth(Times(c_DEFAULT,Plus(a_,Times(b_DEFAULT,x_)))))),Power(x_,m_)),x_Symbol),
    Condition(Times(C4,Power(Times(Power(CI,m),pn,Power(b,Plus(m,C1)),Power(c,Plus(m,C1))),CN1),Subst(Int(Times(Power(x,Times(C2,Power(Times(CI,pn),CN1))),Power(Plus(C1,Times(CI,a,c),Times(Plus(C1,Times(CN1,CI,a,c)),Power(x,Times(C2,Power(Times(CI,pn),CN1))))),m),Power(Power(Plus(CN1,Power(x,Times(C2,Power(Times(CI,pn),CN1)))),Plus(m,C2)),CN1)),x),x,Times(Power(Plus(C1,Power(Times(CI,c,Plus(a,Times(b,x))),CN1)),Times(CI,C1D2,pn)),Power(Power(Plus(C1,Times(CN1,Power(Times(CI,c,Plus(a,Times(b,x))),CN1))),Times(CI,C1D2,pn)),CN1)))),And(And(And(FreeQ(List(a,b,c),x),NegativeIntegerQ(m)),RationalQ(Times(CI,pn))),Less(Less(CN1,Times(CI,pn)),C1)))),
ISetDelayed(Int(Times(Power(E,Times(pn_DEFAULT,ArcCoth(Times(c_DEFAULT,Plus(a_,Times(b_DEFAULT,x_)))))),Power(Plus(pd_DEFAULT,Times(x_,pe_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(CI,c,Plus(a,Times(b,x))),Times(CI,C1D2,pn)),Power(Plus(C1,Power(Times(CI,c,Plus(a,Times(b,x))),CN1)),Times(CI,C1D2,pn)),Power(Power(Plus(C1,Times(CI,a,c),Times(CI,b,c,x)),Times(CI,C1D2,pn)),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),m),Power(Plus(C1,Times(CI,a,c),Times(CI,b,c,x)),Times(CI,C1D2,pn)),Power(Power(Plus(CN1,Times(CI,a,c),Times(CI,b,c,x)),Times(CI,C1D2,pn)),CN1)),x)),And(FreeQ(List(a,b,c,pd,pe,m,pn),x),Not(IntegerQ(Times(CI,C1D2,pn)))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Plus(a_,Times(b_DEFAULT,x_))))),Power(Plus(c_,Times(x_,pd_DEFAULT),Times(pe_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(c,Power(Plus(C1,Sqr(a)),CN1)),p),Power(Times(Plus(Times(CI,a),Times(CI,b,x)),Power(Plus(C1,Times(CI,a),Times(CI,b,x)),CN1)),Times(CI,C1D2,pn)),Power(Times(Plus(C1,Times(CI,a),Times(CI,b,x)),Power(Plus(Times(CI,a),Times(CI,b,x)),CN1)),Times(CI,C1D2,pn)),Power(Plus(C1,Times(CN1,CI,a),Times(CN1,CI,b,x)),Times(CI,C1D2,pn)),Power(Power(Plus(CN1,Times(CI,a),Times(CI,b,x)),Times(CI,C1D2,pn)),CN1),Int(Times(u,Power(Plus(C1,Times(CN1,CI,a),Times(CN1,CI,b,x)),Plus(p,Times(CN1,CI,C1D2,pn))),Power(Plus(C1,Times(CI,a),Times(CI,b,x)),Plus(p,Times(CI,C1D2,pn)))),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,pn,p),x),Not(IntegerQ(Times(CI,C1D2,pn)))),ZeroQ(Plus(Times(b,pd),Times(CN1,C2,a,pe)))),ZeroQ(Plus(Times(Sqr(b),c),Times(CN1,pe,Plus(C1,Sqr(a)))))),Or(IntegerQ(p),PositiveQ(Times(c,Power(Plus(C1,Sqr(a)),CN1))))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Plus(a_,Times(b_DEFAULT,x_))))),Power(Plus(c_,Times(x_,pd_DEFAULT),Times(pe_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(c,Times(pd,x),Times(pe,Sqr(x))),p),Power(Power(Plus(C1,Sqr(a),Times(C2,a,b,x),Times(Sqr(b),Sqr(x))),p),CN1),Int(Times(u,Power(Plus(C1,Sqr(a),Times(C2,a,b,x),Times(Sqr(b),Sqr(x))),p),Power(E,Times(pn,ArcCot(Times(a,x))))),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,pn,p),x),Not(IntegerQ(Times(CI,C1D2,pn)))),ZeroQ(Plus(Times(b,pd),Times(CN1,C2,a,pe)))),ZeroQ(Plus(Times(Sqr(b),c),Times(CN1,pe,Plus(C1,Sqr(a)))))),Not(Or(IntegerQ(p),PositiveQ(Times(c,Power(Plus(C1,Sqr(a)),CN1)))))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcTan(Times(c_DEFAULT,Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_)),CN1)))))),x_Symbol),
    Condition(Int(Times(u,Power(E,Times(pn,ArcCot(Plus(Times(a,Power(c,CN1)),Times(b,x,Power(c,CN1))))))),x),FreeQ(List(a,b,c,pn),x))),
ISetDelayed(Int(Times(u_DEFAULT,Power(E,Times(pn_DEFAULT,ArcCot(Times(c_DEFAULT,Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_)),CN1)))))),x_Symbol),
    Condition(Int(Times(u,Power(E,Times(pn,ArcTan(Plus(Times(a,Power(c,CN1)),Times(b,x,Power(c,CN1))))))),x),FreeQ(List(a,b,c,pn),x))),
ISetDelayed(Int(Times(u_DEFAULT,ArcTan(Plus(v_,Times(s_DEFAULT,Sqrt(w_))))),x_Symbol),
    Condition(Plus(Times(Pi,C1D4,s,Int(u,x)),Times(C1D2,Int(Times(u,ArcTan(v)),x))),And(ZeroQ(Plus(Sqr(s),Times(CN1,C1))),ZeroQ(Plus(w,Times(CN1,Plus(Sqr(v),C1))))))),
ISetDelayed(Int(Times(u_DEFAULT,ArcCot(Plus(v_,Times(s_DEFAULT,Sqrt(w_))))),x_Symbol),
    Condition(Plus(Times(Pi,C1D4,s,Int(u,x)),Times(CN1,C1D2,Int(Times(u,ArcTan(v)),x))),And(ZeroQ(Plus(Sqr(s),Times(CN1,C1))),ZeroQ(Plus(w,Times(CN1,Plus(Sqr(v),C1))))))),
ISetDelayed(Int(Times(u_,Power(v_,pn_DEFAULT)),x_Symbol),
    Condition(Module(List(Set($s("tmp"),InverseFunctionOfLinear(u,x))),Condition(Times(Power(Times(CN1,Discriminant(v,x),Power(Times(C4,Coefficient(v,x,C2)),CN1)),pn),Power(Coefficient(Part($s("tmp"),C1),x,C1),CN1),Subst(Int(SimplifyIntegrand(Times(SubstForInverseFunction(u,$s("tmp"),x),Power(Sec(x),Times(C2,Plus(pn,C1)))),x),x),x,$s("tmp"))),And(And(NotFalseQ($s("tmp")),SameQ(Head($s("tmp")),$s("ArcTan"))),ZeroQ(Plus(Times(Discriminant(v,x),Sqr(Part($s("tmp"),C1))),Sqr(D(v,x))))))),And(And(And(And(QuadraticQ(v,x),IntegerQ(pn)),Less(pn,C0)),NegQ(Discriminant(v,x))),MatchQ(u,Condition(Times(r_DEFAULT,Power(f_,w_)),FreeQ(f,x)))))),
ISetDelayed(Int(Times(u_,Power(v_,pn_DEFAULT)),x_Symbol),
    Condition(Module(List(Set($s("tmp"),InverseFunctionOfLinear(u,x))),Condition(Times(CN1,Power(Times(CN1,Discriminant(v,x),Power(Times(C4,Coefficient(v,x,C2)),CN1)),pn),Power(Coefficient(Part($s("tmp"),C1),x,C1),CN1),Subst(Int(SimplifyIntegrand(Times(SubstForInverseFunction(u,$s("tmp"),x),Power(Csc(x),Times(C2,Plus(pn,C1)))),x),x),x,$s("tmp"))),And(And(NotFalseQ($s("tmp")),SameQ(Head($s("tmp")),$s("ArcCot"))),ZeroQ(Plus(Times(Discriminant(v,x),Sqr(Part($s("tmp"),C1))),Sqr(D(v,x))))))),And(And(And(And(QuadraticQ(v,x),IntegerQ(pn)),Less(pn,C0)),NegQ(Discriminant(v,x))),MatchQ(u,Condition(Times(r_DEFAULT,Power(f_,w_)),FreeQ(f,x)))))),
ISetDelayed(Int(ArcTan(u_),x_Symbol),
    Condition(Plus(Times(x,ArcTan(u)),Times(CN1,Int(SimplifyIntegrand(Times(x,D(u,x),Power(Plus(C1,Sqr(u)),CN1)),x),x))),InverseFunctionFreeQ(u,x))),
ISetDelayed(Int(ArcCot(u_),x_Symbol),
    Condition(Plus(Times(x,ArcCot(u)),Int(SimplifyIntegrand(Times(x,D(u,x),Power(Plus(C1,Sqr(u)),CN1)),x),x)),InverseFunctionFreeQ(u,x))),
ISetDelayed(Int(Times(Plus(a_DEFAULT,Times(b_DEFAULT,ArcTan(u_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Plus(a,Times(b,ArcTan(u))),Power(Times(pd,Plus(m,C1)),CN1)),Times(CN1,b,Power(Times(pd,Plus(m,C1)),CN1),Int(SimplifyIntegrand(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),D(u,x),Power(Plus(C1,Sqr(u)),CN1)),x),x))),And(And(And(And(FreeQ(List(a,b,c,pd,m),x),NonzeroQ(Plus(m,C1))),InverseFunctionFreeQ(u,x)),Not(FunctionOfQ(Power(Plus(c,Times(pd,x)),Plus(m,C1)),u,x))),FalseQ(PowerVariableExpn(u,Plus(m,C1),x))))),
ISetDelayed(Int(Times(Plus(a_DEFAULT,Times(b_DEFAULT,ArcCot(u_))),Power(Plus(c_DEFAULT,Times(x_,pd_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),Plus(a,Times(b,ArcCot(u))),Power(Times(pd,Plus(m,C1)),CN1)),Times(b,Power(Times(pd,Plus(m,C1)),CN1),Int(SimplifyIntegrand(Times(Power(Plus(c,Times(pd,x)),Plus(m,C1)),D(u,x),Power(Plus(C1,Sqr(u)),CN1)),x),x))),And(And(And(And(FreeQ(List(a,b,c,pd,m),x),NonzeroQ(Plus(m,C1))),InverseFunctionFreeQ(u,x)),Not(FunctionOfQ(Power(Plus(c,Times(pd,x)),Plus(m,C1)),u,x))),FalseQ(PowerVariableExpn(u,Plus(m,C1),x))))),
ISetDelayed(Int(Times(v_,Plus(a_DEFAULT,Times(b_DEFAULT,ArcTan(u_)))),x_Symbol),
    Condition(Module(List(Set(w,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(v,x)))),Condition(Plus(Dist(Plus(a,Times(b,ArcTan(u))),w,x),Times(CN1,b,Int(SimplifyIntegrand(Times(w,D(u,x),Power(Plus(C1,Sqr(u)),CN1)),x),x))),InverseFunctionFreeQ(w,x))),And(And(And(FreeQ(List(a,b),x),InverseFunctionFreeQ(u,x)),Not(MatchQ(v,Condition(Power(Plus(c_DEFAULT,Times(pd_DEFAULT,x)),m_DEFAULT),FreeQ(List(c,pd,m),x))))),FalseQ(FunctionOfLinear(Times(v,Plus(a,Times(b,ArcTan(u)))),x))))),
ISetDelayed(Int(Times(v_,Plus(a_DEFAULT,Times(b_DEFAULT,ArcCot(u_)))),x_Symbol),
    Condition(Module(List(Set(w,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(v,x)))),Condition(Plus(Dist(Plus(a,Times(b,ArcCot(u))),w,x),Times(b,Int(SimplifyIntegrand(Times(w,D(u,x),Power(Plus(C1,Sqr(u)),CN1)),x),x))),InverseFunctionFreeQ(w,x))),And(And(And(FreeQ(List(a,b),x),InverseFunctionFreeQ(u,x)),Not(MatchQ(v,Condition(Power(Plus(c_DEFAULT,Times(pd_DEFAULT,x)),m_DEFAULT),FreeQ(List(c,pd,m),x))))),FalseQ(FunctionOfLinear(Times(v,Plus(a,Times(b,ArcCot(u)))),x))))),
ISetDelayed(Int(Times(ArcTan(v_),Log(w_),Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_)),CN1)),x_Symbol),
    Condition(Plus(Times(C1D2,CI,Int(Times(Log(Plus(C1,Times(CN1,CI,v))),Log(w),Power(Plus(a,Times(b,x)),CN1)),x)),Times(CN1,C1D2,CI,Int(Times(Log(Plus(C1,Times(CI,v))),Log(w),Power(Plus(a,Times(b,x)),CN1)),x))),And(And(And(And(FreeQ(List(a,b),x),LinearQ(v,x)),LinearQ(w,x)),ZeroQ(Simplify(D(Times(v,Power(Plus(a,Times(b,x)),CN1)),x)))),ZeroQ(Simplify(D(Times(w,Power(Plus(a,Times(b,x)),CN1)),x)))))),
ISetDelayed(Int(Times(ArcTan(v_),Log(w_)),x_Symbol),
    Condition(Plus(Times(x,ArcTan(v),Log(w)),Times(CN1,Int(SimplifyIntegrand(Times(x,Log(w),D(v,x),Power(Plus(C1,Sqr(v)),CN1)),x),x)),Times(CN1,Int(SimplifyIntegrand(Times(x,ArcTan(v),D(w,x),Power(w,CN1)),x),x))),And(InverseFunctionFreeQ(v,x),InverseFunctionFreeQ(w,x)))),
ISetDelayed(Int(Times(ArcCot(v_),Log(w_)),x_Symbol),
    Condition(Plus(Times(x,ArcCot(v),Log(w)),Int(SimplifyIntegrand(Times(x,Log(w),D(v,x),Power(Plus(C1,Sqr(v)),CN1)),x),x),Times(CN1,Int(SimplifyIntegrand(Times(x,ArcCot(v),D(w,x),Power(w,CN1)),x),x))),And(InverseFunctionFreeQ(v,x),InverseFunctionFreeQ(w,x))))
  );
}
