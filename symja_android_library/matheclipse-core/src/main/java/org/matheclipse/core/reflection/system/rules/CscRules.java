package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.IAST;

/**
 * <p>Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.</p>
 * <p>See GIT repository at: <a href="https://bitbucket.org/axelclk/symja_android_library">bitbucket.org/axelclk/symja_android_library under the tools directory</a>.</p>
 */
public interface CscRules {
  /**
   * <ul>
   * <li>index 0 - number of equal rules in <code>RULES</code></li>
	 * </ul>
	 */
  final public static int[] SIZES = { 43, 0 };

  final public static IAST RULES = List(
    IInit(Csc, SIZES),
    // Csc(0)=ComplexInfinity
    ISet(Csc(C0),
      CComplexInfinity),
    // Csc(Rational(1,12)*Pi)=Sqrt(2)+Sqrt(6)
    ISet(Csc(Times(QQ(1L,12L),Pi)),
      Plus(CSqrt2,CSqrt6)),
    // Csc(Rational(1,10)*Pi)=1+Sqrt(5)
    ISet(Csc(Times(QQ(1L,10L),Pi)),
      Plus(C1,CSqrt5)),
    // Csc(Rational(1,8)*Pi)=Sqrt(4+2*Sqrt(2))
    ISet(Csc(Times(QQ(1L,8L),Pi)),
      Sqrt(Plus(C4,Times(C2,CSqrt2)))),
    // Csc(Rational(1,6)*Pi)=2
    ISet(Csc(Times(QQ(1L,6L),Pi)),
      C2),
    // Csc(Rational(1,5)*Pi)=Sqrt(2+2/Sqrt(5))
    ISet(Csc(Times(QQ(1L,5L),Pi)),
      Sqrt(Plus(C2,Times(C2,C1DSqrt5)))),
    // Csc(Rational(1,4)*Pi)=Sqrt(2)
    ISet(Csc(Times(C1D4,Pi)),
      CSqrt2),
    // Csc(Rational(3,10)*Pi)=Sqrt(5)+(-1)*1
    ISet(Csc(Times(QQ(3L,10L),Pi)),
      Plus(CN1,CSqrt5)),
    // Csc(Rational(1,3)*Pi)=2/Sqrt(3)
    ISet(Csc(Times(C1D3,Pi)),
      Times(C2,C1DSqrt3)),
    // Csc(Rational(2,5)*Pi)=Sqrt(2-2/Sqrt(5))
    ISet(Csc(Times(QQ(2L,5L),Pi)),
      Sqrt(Plus(C2,Times(CN2,C1DSqrt5)))),
    // Csc(Rational(5,12)*Pi)=Sqrt(6)-Sqrt(2)
    ISet(Csc(Times(QQ(5L,12L),Pi)),
      Plus(Negate(CSqrt2),CSqrt6)),
    // Csc(Rational(1,2)*Pi)=1
    ISet(Csc(Times(C1D2,Pi)),
      C1),
    // Csc(Rational(7,12)*Pi)=Sqrt(6)-Sqrt(2)
    ISet(Csc(Times(QQ(7L,12L),Pi)),
      Plus(Negate(CSqrt2),CSqrt6)),
    // Csc(Rational(3,5)*Pi)=Sqrt(2-2/Sqrt(5))
    ISet(Csc(Times(QQ(3L,5L),Pi)),
      Sqrt(Plus(C2,Times(CN2,C1DSqrt5)))),
    // Csc(Rational(2,3)*Pi)=2/Sqrt(3)
    ISet(Csc(Times(QQ(2L,3L),Pi)),
      Times(C2,C1DSqrt3)),
    // Csc(Rational(7,10)*Pi)=Sqrt(5)+(-1)*1
    ISet(Csc(Times(QQ(7L,10L),Pi)),
      Plus(CN1,CSqrt5)),
    // Csc(Rational(3,4)*Pi)=Sqrt(2)
    ISet(Csc(Times(QQ(3L,4L),Pi)),
      CSqrt2),
    // Csc(Rational(4,5)*Pi)=Sqrt(2+2/Sqrt(5))
    ISet(Csc(Times(QQ(4L,5L),Pi)),
      Sqrt(Plus(C2,Times(C2,C1DSqrt5)))),
    // Csc(Rational(5,6)*Pi)=2
    ISet(Csc(Times(QQ(5L,6L),Pi)),
      C2),
    // Csc(Rational(9,10)*Pi)=1+Sqrt(5)
    ISet(Csc(Times(QQ(9L,10L),Pi)),
      Plus(C1,CSqrt5)),
    // Csc(Rational(11,12)*Pi)=Sqrt(6)+Sqrt(2)
    ISet(Csc(Times(QQ(11L,12L),Pi)),
      Plus(CSqrt2,CSqrt6)),
    // Csc(Pi)=ComplexInfinity
    ISet(Csc(Pi),
      CComplexInfinity),
    // Csc(Rational(11,10)*Pi)=-1-Sqrt(5)
    ISet(Csc(Times(QQ(11L,10L),Pi)),
      Plus(CN1,Negate(CSqrt5))),
    // Csc(Rational(7,6)*Pi)=-2
    ISet(Csc(Times(QQ(7L,6L),Pi)),
      CN2),
    // Csc(Rational(6,5)*Pi)=-Sqrt(2+2/Sqrt(5))
    ISet(Csc(Times(QQ(6L,5L),Pi)),
      Negate(Sqrt(Plus(C2,Times(C2,C1DSqrt5))))),
    // Csc(Rational(5,4)*Pi)=-Sqrt(2)
    ISet(Csc(Times(QQ(5L,4L),Pi)),
      Negate(CSqrt2)),
    // Csc(Rational(13,10)*Pi)=1-Sqrt(5)
    ISet(Csc(Times(QQ(13L,10L),Pi)),
      Plus(C1,Negate(CSqrt5))),
    // Csc(Rational(4,3)*Pi)=-2/Sqrt(3)
    ISet(Csc(Times(QQ(4L,3L),Pi)),
      Times(CN2,C1DSqrt3)),
    // Csc(Rational(17,12)*Pi)=Sqrt(2)-Sqrt(6)
    ISet(Csc(Times(QQ(17L,12L),Pi)),
      Plus(CSqrt2,Negate(CSqrt6))),
    // Csc(Rational(3,2)*Pi)=-1
    ISet(Csc(Times(QQ(3L,2L),Pi)),
      CN1),
    // Csc(Rational(19,12)*Pi)=Sqrt(2)-Sqrt(6)
    ISet(Csc(Times(QQ(19L,12L),Pi)),
      Plus(CSqrt2,Negate(CSqrt6))),
    // Csc(Rational(8,5)*Pi)=-Sqrt(2-2/Sqrt(5))
    ISet(Csc(Times(QQ(8L,5L),Pi)),
      Negate(Sqrt(Plus(C2,Times(CN2,C1DSqrt5))))),
    // Csc(Rational(5,3)*Pi)=-2/Sqrt(3)
    ISet(Csc(Times(QQ(5L,3L),Pi)),
      Times(CN2,C1DSqrt3)),
    // Csc(Rational(17,10)*Pi)=1-Sqrt(5)
    ISet(Csc(Times(QQ(17L,10L),Pi)),
      Plus(C1,Negate(CSqrt5))),
    // Csc(Rational(7,4)*Pi)=-Sqrt(2)
    ISet(Csc(Times(QQ(7L,4L),Pi)),
      Negate(CSqrt2)),
    // Csc(Rational(9,5)*Pi)=-Sqrt(2+2/Sqrt(5))
    ISet(Csc(Times(QQ(9L,5L),Pi)),
      Negate(Sqrt(Plus(C2,Times(C2,C1DSqrt5))))),
    // Csc(Rational(11,6)*Pi)=-2
    ISet(Csc(Times(QQ(11L,6L),Pi)),
      CN2),
    // Csc(Rational(19,10)*Pi)=-1-Sqrt(5)
    ISet(Csc(Times(QQ(19L,10L),Pi)),
      Plus(CN1,Negate(CSqrt5))),
    // Csc(Rational(23,12)*Pi)=-2*Sqrt(2+Sqrt(3))
    ISet(Csc(Times(QQ(23L,12L),Pi)),
      Times(CN2,Sqrt(Plus(C2,CSqrt3)))),
    // Csc(2*Pi)=ComplexInfinity
    ISet(Csc(Times(C2,Pi)),
      CComplexInfinity),
    // Csc(I*Infinity)=0
    ISet(Csc(DirectedInfinity(CI)),
      C0),
    // Csc((-1)*I*Infinity)=0
    ISet(Csc(DirectedInfinity(CNI)),
      C0),
    // Csc(ComplexInfinity)=Indeterminate
    ISet(Csc(CComplexInfinity),
      Indeterminate)
  );
}
