package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules118 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),Times(CN1,b,c,pn,Int(Times(x,Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Greater(pn,C0)))),
ISetDelayed(Int(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),x_Symbol),
    Condition(Plus(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(CN1,c,Power(Times(b,Plus(pn,C1)),CN1),Int(Times(x,Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Less(pn,CN1)))),
ISetDelayed(Int(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),x_Symbol),
    Condition(Times(CN1,Power(Times(b,c),CN1),Subst(Int(Times(Power(x,pn),Sinh(Plus(Times(a,Power(b,CN1)),Times(CN1,x,Power(b,CN1))))),x),x,Plus(a,Times(b,ArcCosh(Times(c,x)))))),FreeQ(List(a,b,c,pn),x))),
ISetDelayed(Int(Times(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(pd,Times(pe,x)),Plus(m,C1)),Plus(a,Times(b,ArcCosh(Times(c,x)))),Power(Times(pe,Plus(m,C1)),CN1)),Times(CN1,b,c,Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Times(pe,Plus(m,C1),Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),Plus(m,C1)),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(FreeQ(List(a,b,c,pd,pe),x),IntegerQ(Plus(m,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(pd,Times(pe,x)),Plus(m,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(pe,Plus(m,C1)),CN1)),Times(CN1,b,c,pn,Power(Times(pe,Plus(m,C1)),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),Plus(m,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),RationalQ(pn)),Greater(pn,C0)),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(Power(Times(b,Power(c,Plus(m,C1)),Plus(pn,C1)),CN1),Subst(Int(ExpandTrigReduce(Times(Power(Plus(a,Times(b,x)),Plus(pn,C1)),Power(Cosh(x),Plus(m,Times(CN1,C1))),Plus(m,Times(CN1,Plus(m,C1),Sqr(Cosh(x))))),x),x),x,ArcCosh(Times(c,x))))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),And(LessEqual(CN2,pn),Less(pn,CN1))),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(m,Power(Times(b,c,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1)),x)),Times(CN1,c,Plus(m,C1),Power(Times(b,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1)),x))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Less(pn,CN2)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Plus(Times(x_,pe_DEFAULT),pd_),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,x)),m),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),x),And(And(And(FreeQ(List(a,b,c,pd,pe),x),RationalQ(pn)),Less(pn,CN1)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Power(c,Plus(m,C1)),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Power(Plus(Times(c,pd),Times(pe,Cosh(x))),m),Sinh(x)),x),x,ArcCosh(Times(c,x)))),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),IntegerQ(m)),Or(Greater(m,C0),PositiveIntegerQ(pn))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(Plus(pd,Times(pe,x)),m),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,m,pn),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),x),And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),IntegerQ(p)),PositiveIntegerQ(pn)),Or(PositiveIntegerQ(p),NonzeroQ(a))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(x,m),Power(Plus(pd,Times(pe,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,m,pn,p),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Times(Sqrt(Plus(Times(g_DEFAULT,x_),f_)),Sqrt(Plus(Times(x_,pe_DEFAULT),pd_))),CN1)),x_Symbol),
    Condition(Times(Power(Times(b,c,Sqrt(pd),Sqrt(Times(CN1,f))),CN1),Subst(Int(Power(x,pn),x),x,Plus(a,Times(b,ArcCosh(Times(c,x)))))),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Plus(Times(C2,p),C1),CN1)),Times(CN1,b,c,pn,Sqrt(pd),Sqrt(Times(CN1,f)),Power(Plus(Times(C2,p),C1),CN1),Int(Times(x,Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(C2,pd,f,p,Power(Plus(Times(C2,p),C1),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(pn)),Greater(pn,C0)),Greater(p,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Times(Plus(Times(g_DEFAULT,x_),f_),Plus(Times(x_,pe_DEFAULT),pd_)),CN1)),x_Symbol),
    Condition(Times(CN1,Power(Times(c,pd,f),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Csch(x)),x),x,ArcCosh(Times(c,x)))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)),PositiveIntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Times(Power(Plus(Times(g_DEFAULT,x_),f_),QQ(3L,2L)),Power(Plus(Times(x_,pe_DEFAULT),pd_),QQ(3L,2L))),CN1)),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(pd,f,Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1)),Times(CN1,b,c,pn,Power(Times(Sqrt(pd),Sqrt(Times(CN1,f))),CN1),Int(Times(x,Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Times(Plus(pd,Times(pe,x)),Plus(f,Times(g,x))),CN1)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)),RationalQ(pn)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,x,Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(C2,pd,f,Plus(p,C1)),CN1)),Times(CN1,b,c,pn,Power(Times(C2,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(p,C1)),CN1),Int(Times(x,Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(Plus(Times(C2,p),C3),Power(Times(C2,pd,f,Plus(p,C1)),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(pn)),Greater(pn,C0)),Less(p,CN1)),Unequal(p,QQ(-2L,3L))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(pn,C1)),CN1)),Times(CN1,pe,g,Plus(Times(C2,p),C1),Power(Times(b,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(pn,C1)),CN1),Int(Times(x,Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(pn)),Less(pn,CN1)),Unequal(p,CN1D2)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Power(Times(CN1,f),p),Power(c,CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Power(Sinh(x),Plus(Times(C2,p),C1))),x),x,ArcCosh(Times(c,x)))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveIntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Power(Times(CN1,f),p),Int(Times(Power(Plus(C1,Times(c,x)),p),Power(Plus(CN1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(p)),Not(And(PositiveQ(pd),NegativeQ(f)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Power(pd,Plus(p,Times(CN1,C1D2))),Power(Times(CN1,f),Plus(p,Times(CN1,C1D2))),Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x))),Power(Times(Sqrt(Plus(C1,Times(c,x))),Sqrt(Plus(CN1,Times(c,x)))),CN1),Int(Times(Power(Plus(C1,Times(c,x)),p),Power(Plus(CN1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveIntegerQ(Plus(p,C1D2))),Not(And(PositiveQ(pd),NegativeQ(f)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Power(pd,Plus(p,C1D2)),Power(Times(CN1,f),Plus(p,C1D2)),Sqrt(Plus(C1,Times(c,x))),Sqrt(Plus(CN1,Times(c,x))),Power(Times(Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1),Int(Times(Power(Plus(C1,Times(c,x)),p),Power(Plus(CN1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))),Not(And(PositiveQ(pd),NegativeQ(f)))))),
ISetDelayed(Int(Times(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcCosh(Times(c,x)))),u,x),Times(CN1,b,c,Int(SimplifyIntegrand(Times(u,Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1)),x),x)))),And(FreeQ(List(a,b,c,pd,pe,f,g),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcCosh(Times(c,x)))),u,x),Times(CN1,b,c,Int(Dist(Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1),u,x),x)))),And(FreeQ(List(a,b,c,pd,pe,f,g),x),NegativeIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),x),And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,f,g,pn,p),x))),
ISetDelayed(Int(Times(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Power(Plus(pd,Times(pe,Sqr(x))),p),x)))),Plus(Dist(Plus(a,Times(b,ArcCosh(Times(c,x)))),u,x),Times(CN1,b,c,Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1),Int(SimplifyIntegrand(Times(u,Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x),x)))),And(FreeQ(List(a,b,c,pd,pe),x),Or(PositiveIntegerQ(p),NegativeIntegerQ(Plus(p,C1D2)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(pd,Times(CN1,c,pd,x)),p),Power(Plus(C1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(pd,Times(pe,Sqr(x)))),Power(Times(Sqrt(Plus(pd,Times(CN1,c,pd,x))),Sqrt(Plus(C1,Times(c,x)))),CN1),Int(Times(Power(Plus(pd,Times(CN1,c,pd,x)),p),Power(Plus(C1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(pd,Times(CN1,c,pd,x))),Sqrt(Plus(C1,Times(c,x))),Power(Plus(pd,Times(pe,Sqr(x))),CN1D2),Int(Times(Power(Plus(pd,Times(CN1,c,pd,x)),p),Power(Plus(C1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,Sqr(x))),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),x),And(FreeQ(List(a,b,c,pd,pe,pn),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(Sqrt(pd),Times(CN1,Sqrt(Times(CN1,pe)),x)),p),Power(Plus(Sqrt(pd),Times(Sqrt(Times(CN1,pe)),x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),x),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),NegativeIntegerQ(p)),PositiveIntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(Plus(pd,Times(pe,Sqr(x))),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,pn,p),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),x_),x_Symbol),
    Condition(Plus(Times(Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(C2,pe,g,Plus(p,C1)),CN1)),Times(CN1,b,pn,Power(Times(C2,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(p,C1)),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(pn)),Greater(pn,C0)),Unequal(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Plus(m,C1),CN1)),Times(CN1,b,c,Sqrt(pd),Sqrt(Times(CN1,f)),pn,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(CN1,C2,pe,g,p,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C2)),Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(m,pn)),Greater(pn,C0)),Greater(p,C0)),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Plus(m,Times(C2,p),C1),CN1)),Times(CN1,b,c,pn,Sqrt(pd),Sqrt(Times(CN1,f)),Power(Plus(m,Times(C2,p),C1),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(C2,pd,f,p,Power(Plus(m,Times(C2,p),C1),CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(m,pn)),Greater(pn,C0)),Greater(p,C0)),Unequal(Plus(m,Times(C2,p),C1),C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(pd,f,Plus(m,C1)),CN1)),Times(b,c,pn,Power(Times(Sqrt(pd),Sqrt(Times(CN1,f)),Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(m,pn)),Greater(pn,C0)),Less(p,C0)),Unequal(m,CN1)),Equal(Plus(m,Times(C2,p),C3),C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Times(Plus(Times(g_DEFAULT,x_),f_),Plus(Times(x_,pe_DEFAULT),pd_)),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(Times(Power(c,Plus(m,C1)),pd),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Power(Cosh(x),m),Csch(x)),x),x,ArcCosh(Times(c,x)))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)),PositiveIntegerQ(pn)),IntegerQ(m)),Equal(Sqr(m),C1)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(pe,g,Plus(m,Times(C2,p),C1)),CN1)),Times(CN1,b,c,Sqrt(pd),Sqrt(Times(CN1,f)),pn,Power(Times(pe,g,Plus(m,Times(C2,p),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(Plus(m,Times(CN1,C1)),Power(Times(Sqr(c),Plus(m,Times(C2,p),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(m,pn)),Greater(pn,C0)),And(LessEqual(CN1,p),Less(p,C0))),Greater(m,C1)),NonzeroQ(Plus(m,Times(C2,p),C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(C2,pe,g,Plus(p,C1)),CN1)),Times(CN1,b,pn,Power(Times(C2,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(CN1,Plus(m,Times(CN1,C1)),Power(Times(C2,pe,g,Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(m,pn)),Greater(pn,C0)),Less(p,CN1)),Greater(m,C1)))),
ISetDelayed(Int(Times(ArcCosh(Times(c_DEFAULT,x_)),Power(Times(Sqrt(Plus(Times(g_DEFAULT,x_),f_)),Sqrt(Plus(Times(x_,pe_DEFAULT),pd_)),x_),CN1)),x_Symbol),
    Condition(Plus(Times(CN2,ArcCosh(Times(c,x)),ArcTan(Plus(Times(c,x),Times(CN1,Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))))),Power(Times(Sqrt(pd),Sqrt(Times(CN1,f))),CN1)),Times(CI,PolyLog(C2,Times(CI,Plus(Times(c,x),Times(CN1,Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x))))))),Power(Times(Sqrt(pd),Sqrt(Times(CN1,f))),CN1)),Times(CN1,CI,PolyLog(C2,Times(CI,Plus(Times(CN1,c,x),Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x))))))),Power(Times(Sqrt(pd),Sqrt(Times(CN1,f))),CN1))),And(And(And(And(FreeQ(List(c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)))),
ISetDelayed(Int(Times(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_),Power(Times(Sqrt(Plus(Times(g_DEFAULT,x_),f_)),Sqrt(Plus(Times(x_,pe_DEFAULT),pd_)),x_),CN1)),x_Symbol),
    Condition(Plus(Times(a,Int(Power(Times(x,Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1),x)),Times(b,Int(Times(ArcCosh(Times(c,x)),Power(Times(x,Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,CN1)),x_Symbol),
    Condition(Plus(Times(Sqr(c),Int(Times(x,Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),Times(Power(Times(pd,f),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(x,CN1)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(pn)),Greater(pn,C0)),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(pd,f,Plus(m,C1)),CN1)),Times(b,c,pn,Power(Times(Sqrt(pd),Sqrt(Times(CN1,f)),Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(Sqr(c),Plus(m,Times(C2,p),C3),Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C2)),Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(m,pn)),Greater(pn,C0)),Less(p,C0)),Less(m,CN1)),Unequal(Plus(m,Times(C2,p),C3),C0)))),
ISetDelayed(Int(Times(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Times(Sqrt(Plus(Times(g_DEFAULT,x_),f_)),Sqrt(Plus(Times(x_,pe_DEFAULT),pd_))),CN1),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Plus(a,Times(b,ArcCosh(Times(c,x)))),Hypergeometric2F1(C1D2,Times(C1D2,Plus(C1,m)),Times(C1D2,Plus(C3,m)),Times(Sqr(c),Sqr(x))),Power(Times(Plus(m,C1),Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1)),Times(b,c,Power(x,Plus(m,C2)),HypergeometricPFQ(List(C1,Plus(C1,Times(C1D2,m)),Plus(C1,Times(C1D2,m))),List(Plus(QQ(3L,2L),Times(C1D2,m)),Plus(C2,Times(C1D2,m))),Times(Sqr(c),Sqr(x))),Power(Times(Sqrt(pd),Sqrt(Times(CN1,f)),Plus(m,C1),Plus(m,C2)),CN1))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Times(Sqrt(Plus(Times(g_DEFAULT,x_),f_)),Sqrt(Plus(Times(x_,pe_DEFAULT),pd_))),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(pn,C1)),CN1)),Times(CN1,m,Power(Times(b,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,m),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)),RationalQ(pn)),Less(pn,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(pn,C1)),CN1)),Times(m,Sqrt(pd),Sqrt(Times(CN1,f)),Power(Times(b,c,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(m,pn)),Less(pn,CN1)),Equal(Plus(m,Times(C2,p),C1),C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(pn,C1)),CN1)),Times(m,Sqrt(pd),Sqrt(Times(CN1,f)),Power(Times(b,c,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1))),x)),Times(CN1,c,Sqrt(pd),Sqrt(Times(CN1,f)),Plus(m,Times(C2,p),C1),Power(Times(b,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(pd,Times(pe,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(f,Times(g,x)),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),Plus(pn,C1))),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),RationalQ(m,pn)),Less(pn,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Times(pd,f),CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,x)),Plus(p,C1)),Power(Plus(f,Times(g,x)),Plus(p,C1)),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),Times(CN1,pe,g,Power(Times(pd,f),CN1),Int(Times(Power(x,Plus(m,C2)),Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),NegativeIntegerQ(Plus(p,C1D2))),PositiveQ(pd)),NegativeQ(f)),NegativeIntegerQ(Times(C1D2,Plus(m,Times(CN1,C1))))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Times(Sqrt(Plus(Times(g_DEFAULT,x_),f_)),Sqrt(Plus(Times(x_,pe_DEFAULT),pd_))),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(Power(c,Plus(m,C1)),Sqrt(pd),Sqrt(Times(CN1,f))),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Power(Cosh(x),m)),x),x,ArcCosh(Times(c,x)))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveQ(pd)),NegativeQ(f)),IntegerQ(m)),Or(Greater(m,C0),PositiveIntegerQ(pn))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Power(Times(CN1,f),p),Power(Power(c,Plus(m,C1)),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Power(Cosh(x),m),Power(Sinh(x),Plus(Times(C2,p),C1))),x),x,ArcCosh(Times(c,x)))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveIntegerQ(Times(C2,p))),PositiveQ(pd)),NegativeQ(f)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn),Power(Times(Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1)),Times(Power(x,m),Power(Plus(pd,Times(pe,x)),Plus(p,C1D2)),Power(Plus(f,Times(g,x)),Plus(p,C1D2))),x),x),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,m,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveIntegerQ(Plus(p,C1D2))),PositiveQ(pd)),NegativeQ(f)),Not(PositiveIntegerQ(Times(C1D2,Plus(m,C1))))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Power(Times(CN1,f),p),Int(Times(Power(x,m),Power(Plus(C1,Times(c,x)),p),Power(Plus(CN1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,m,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),IntegerQ(p)),Not(And(PositiveQ(pd),NegativeQ(f)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,Plus(p,Times(CN1,C1D2))),Power(Times(CN1,f),Plus(p,Times(CN1,C1D2))),Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x))),Power(Times(Sqrt(Plus(C1,Times(c,x))),Sqrt(Plus(CN1,Times(c,x)))),CN1),Int(Times(Power(x,m),Power(Plus(C1,Times(c,x)),p),Power(Plus(CN1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,m,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),PositiveIntegerQ(Plus(p,C1D2))),Not(And(PositiveQ(pd),NegativeQ(f)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,Plus(p,C1D2)),Power(Times(CN1,f),Plus(p,C1D2)),Sqrt(Plus(C1,Times(c,x))),Sqrt(Plus(CN1,Times(c,x))),Power(Times(Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1),Int(Times(Power(x,m),Power(Plus(C1,Times(c,x)),p),Power(Plus(CN1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,g,m,pn),x),ZeroQ(Plus(pe,Times(CN1,c,pd)))),ZeroQ(Plus(g,Times(c,f)))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))),Not(And(PositiveQ(pd),NegativeQ(f)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),x),And(FreeQ(List(a,b,c,pd,pe,f,g,m,pn),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(x,m),Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,f,g,m,pn,p),x))),
ISetDelayed(Int(Times(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_DEFAULT),x_),x_Symbol),
    Condition(Plus(Times(Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1)),Plus(a,Times(b,ArcCosh(Times(c,x)))),Power(Times(C2,pe,Plus(p,C1)),CN1)),Times(CN1,b,c,Power(Times(C2,pe,Plus(p,C1)),CN1),Int(Times(Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1)),Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1)),x))),And(FreeQ(List(a,b,c,pd,pe,p),x),NonzeroQ(Plus(p,C1))))),
ISetDelayed(Int(Times(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Sqr(x))),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcCosh(Times(c,x)))),u,x),Times(CN1,b,c,Int(SimplifyIntegrand(Times(u,Power(Times(Sqrt(Plus(CN1,Times(c,x))),Sqrt(Plus(C1,Times(c,x)))),CN1)),x),x)))),And(FreeQ(List(a,b,c,pd,pe,m,p),x),Or(Or(And(PositiveIntegerQ(p),Not(And(NegativeIntegerQ(Times(C1D2,Plus(m,Times(CN1,C1)))),Greater(Plus(m,Times(C2,p),C3),C0)))),And(PositiveIntegerQ(Times(C1D2,Plus(m,C1))),Not(And(NegativeIntegerQ(p),Greater(Plus(m,Times(C2,p),C3),C0))))),And(NegativeIntegerQ(Times(C1D2,Plus(m,Times(C2,p),C1))),Not(NegativeIntegerQ(Times(C1D2,Plus(m,Times(CN1,C1)))))))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCosh(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(Plus(pd,Times(CN1,c,pd,x)),p),Power(Plus(C1,Times(c,x)),p),Power(Plus(a,Times(b,ArcCosh(Times(c,x)))),pn)),x),And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(p))))
  );
}
