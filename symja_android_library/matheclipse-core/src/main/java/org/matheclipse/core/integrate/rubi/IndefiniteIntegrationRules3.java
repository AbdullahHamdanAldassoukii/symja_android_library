package org.matheclipse.core.integrate.rubi;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IndefiniteIntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IndefiniteIntegrationRules3 { 
  public static IAST RULES = List( 
SetDelayed(Int(Times(Power(Plus(Times(Power(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT),C1D2),$p(e,true)),Times(Power(Plus(Times(Power(x_,n_DEFAULT),$p(d,true)),c_DEFAULT),C1D2),f_DEFAULT)),m_),u_DEFAULT),x_Symbol),
    Condition(Dist(Power(Plus(Times(b,Power(e,C2)),Times(CN1,d,Power(f,C2))),m),Int(Times(u,Power(Plus(Times(e,Sqrt(Plus(a,Times(b,Power(x,n))))),Times(CN1,f,Sqrt(Plus(c,Times(d,Power(x,n)))))),Times(CN1,m)),Power(x,Times(m,n))),x)),And(And(And(FreeQ(List(a,b,c,d,e,f,n),x),IntIntegerQ(m)),Less(m,C0)),ZeroQ(Plus(Times(a,Power(e,C2)),Times(CN1,c,Power(f,C2))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(Plus(Times(Power(x_,n_),$p(d,true)),c_),C1D2),b_DEFAULT),a_),CN1),u_DEFAULT),x_Symbol),
    Condition(Plus(Dist(Times(CN1,a,Power(Times(Power(b,C2),d),CN1)),Int(Times(u,Power(Power(x,n),CN1)),x)),Dist(Power(Times(b,d),CN1),Int(Times(u,Sqrt(Plus(c,Times(d,Power(x,n)))),Power(Power(x,n),CN1)),x))),And(FreeQ(List(a,b,c,d,n),x),SameQ(Power(a,C2),Times(Power(b,C2),c))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,m_DEFAULT),a_DEFAULT),Times(Power(Plus(Times(Power(x_,n_),$p(d,true)),c_),C1D2),b_DEFAULT)),CN1),u_DEFAULT),x_Symbol),
    Condition(Plus(Dist(Times(CN1,a,Power(Times(Power(b,C2),c),CN1)),Int(Times(u,Power(x,m)),x)),Dist(Power(Times(b,c),CN1),Int(Times(u,Sqrt(Plus(c,Times(d,Power(x,n))))),x))),And(And(FreeQ(List(a,b,c,d,m,n),x),SameQ(n,Times(C2,m))),SameQ(Power(a,C2),Times(Power(b,C2),d))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,m_DEFAULT),b_DEFAULT),Times(Power(Plus(Times(Power(x_,n_),$p(e,true)),$p(d)),C1D2),c_DEFAULT),a_),CN1),u_DEFAULT),x_Symbol),
    Condition(Plus(Dist(Power(Times(C2,b),CN1),Int(Times(u,Power(Power(x,m),CN1)),x)),Dist(Power(Times(C2,a),CN1),Int(u,x)),Times(CN1,Dist(Times(c,Power(Times(C2,a,b),CN1)),Int(Times(u,Sqrt(Plus(d,Times(e,Power(x,n)))),Power(Power(x,m),CN1)),x)))),And(And(And(FreeQ(List(a,b,c,d,m,n),x),SameQ(n,Times(C2,m))),SameQ(Power(a,C2),Times(Power(c,C2),d))),SameQ(Power(b,C2),Times(Power(c,C2),e))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,m_DEFAULT),b_DEFAULT),Times(Power(Plus(Times(Power(x_,n_),$p(e,true)),$p(d)),C1D2),c_DEFAULT),a_),CN1),u_DEFAULT),x_Symbol),
    Condition(Plus(Dist(Times(a,Power(Power(b,C2),CN1)),Int(Times(u,Power(Power(x,Times(C2,m)),CN1)),x)),Dist(Power(b,CN1),Int(Times(u,Power(Power(x,m),CN1)),x)),Times(CN1,Dist(Times(c,Power(Power(b,C2),CN1)),Int(Times(u,Sqrt(Plus(d,Times(e,Power(x,n)))),Power(Power(x,Times(C2,m)),CN1)),x)))),And(And(And(FreeQ(List(a,b,c,d,m,n),x),SameQ(n,m)),SameQ(Power(a,C2),Times(Power(c,C2),d))),SameQ(Times(C2,a,b),Times(Power(c,C2),e))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(Plus(Times(Power(x_,C2),$p(d,true)),c_DEFAULT),C1D2),b_DEFAULT),Times(a_DEFAULT,x_)),CN1),u_DEFAULT),x_Symbol),
    Condition(Plus(Dist(a,Int(Times(x,u,Power(Plus(Times(CN1,Power(b,C2),c),Times(Plus(Power(a,C2),Times(CN1,Power(b,C2),d)),Power(x,C2))),CN1)),x)),Times(CN1,Dist(b,Int(Times(u,Sqrt(Plus(c,Times(d,Power(x,C2)))),Power(Plus(Times(CN1,Power(b,C2),c),Times(Plus(Power(a,C2),Times(CN1,Power(b,C2),d)),Power(x,C2))),CN1)),x)))),FreeQ(List(a,b,c,d),x))),
SetDelayed(Int(Times(Power(Plus(Times(Power(Power(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT),p_DEFAULT),C1D2),$p(e,true)),Times(Power(Power(Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT),q_DEFAULT),C1D2),f_DEFAULT)),CN1),u_DEFAULT),x_Symbol),
    Condition(Int(Times(u,Plus(Times(e,Sqrt(Power(Plus(a,Times(b,Power(x,n))),p))),Times(CN1,f,Sqrt(Power(Plus(a,Times(b,Power(x,n))),q)))),Power(Plus(Times(Power(e,C2),Power(Plus(a,Times(b,Power(x,n))),p)),Times(CN1,Power(f,C2),Power(Plus(a,Times(b,Power(x,n))),q))),CN1)),x),And(FreeQ(List(a,b,e,f),x),IntIntegerQ(List(n,p,q))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(x_,C2),$p(d,true)),c_),C1D2),Power(Plus(Times(b_DEFAULT,x_),a_),CN1),u_DEFAULT),x_Symbol),
    Condition(Plus(Times(a,Int(Times(u,Power(Sqrt(Plus(c,Times(d,Power(x,C2)))),CN1)),x)),Times(CN1,b,Int(Times(x,u,Power(Sqrt(Plus(c,Times(d,Power(x,C2)))),CN1)),x))),And(And(FreeQ(List(a,b,c,d),x),SameQ(c,Power(a,C2))),SameQ(d,Times(CN1,Power(b,C2)))))),
SetDelayed(Int(Times(Power(Plus(Power(Plus(Times(Power(x_,C4),c_DEFAULT),a_),C1D2),Times(Power(x_,C2),b_DEFAULT)),C1D2),Power(Plus(Times(Power(x_,C4),c_DEFAULT),a_),CN1D2)),x_Symbol),
    Condition(Times(ArcTanh(Times(Rt(Times(C2,b),C2),x,Power(Sqrt(Plus(Times(b,Power(x,C2)),Sqrt(Plus(a,Times(c,Power(x,C4)))))),CN1))),Power(Rt(Times(C2,b),C2),CN1)),And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(Power(b,C2),Times(CN1,c)))),PosQ(b)))),
SetDelayed(Int(Times(Power(Plus(Power(Plus(Times(Power(x_,C4),c_DEFAULT),a_),C1D2),Times(Power(x_,C2),b_DEFAULT)),C1D2),Power(Plus(Times(Power(x_,C4),c_DEFAULT),a_),CN1D2)),x_Symbol),
    Condition(Times(ArcTan(Times(Rt(Times(CN2,b),C2),x,Power(Sqrt(Plus(Times(b,Power(x,C2)),Sqrt(Plus(a,Times(c,Power(x,C4)))))),CN1))),Power(Rt(Times(CN2,b),C2),CN1)),And(And(FreeQ(List(a,b,c),x),ZeroQ(Plus(Power(b,C2),Times(CN1,c)))),NegQ(b)))),
SetDelayed(Int(Times(Power(Plus(Power(Plus(a_,w_),C1D2),v_),C1D2),Power(Plus(a_,w_),CN1D2),u_DEFAULT),x_Symbol),
    Condition(Plus(Dist(Times(Rational(C1,C2),Plus(C1,Times(CN1,CI))),Int(Times(u,Power(Sqrt(Plus(Sqrt(a),Times(CN1,CI,v))),CN1)),x)),Dist(Times(Rational(C1,C2),Plus(C1,CI)),Int(Times(u,Power(Sqrt(Plus(Sqrt(a),Times(CI,v))),CN1)),x))),And(And(And(FreeQ(a,x),ZeroQ(Plus(w,Times(CN1,Power(v,C2))))),PositiveQ(a)),Not(LinearQ(v,x))))),
SetDelayed(Int(Power(Plus(Times(b_DEFAULT,u_),a_),CN1),x_Symbol),
    Condition(Module(List(Set($s("lst"),ConstantFactor(Plus(a,Times(b,u)),x))),Condition(Dist(Power(Part($s("lst"),C1),CN1),Int(Power(Part($s("lst"),C2),CN1),x)),UnsameQ(Part($s("lst"),C1),C1))),And(FreeQ(List(a,b),x),Or(MatchQ(u,Condition(Power(f_,Plus(c_DEFAULT,Times($p(d,true),x))),FreeQ(List(c,d,f),x))),MatchQ(u,Condition($(f_,Plus(c_DEFAULT,Times($p(d,true),x))),And(FreeQ(List(c,d),x),MemberQ(List($s("Tan"),$s("Cot"),$s("Tanh"),$s("Coth")),f)))))))),
SetDelayed(Int(Power(E,Plus(Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Times(Power(E,Plus(a,Times(b,x))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(f_,Plus(Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Times(Power(f,Plus(a,Times(b,x))),Power(Times(b,Log(f)),CN1)),FreeQ(List(a,b,f),x))),
SetDelayed(Int(Power(E,Plus(Times(Power(x_,C2),b_DEFAULT),a_DEFAULT)),x_Symbol),
    Condition(Times(Power(E,a),Sqrt(Pi),Erfi(Times(x,Rt(b,C2))),Power(Times(C2,Rt(b,C2)),CN1)),And(FreeQ(List(a,b),x),PosQ(b)))),
SetDelayed(Int(Power(f_,Plus(Times(Power(x_,C2),b_DEFAULT),a_DEFAULT)),x_Symbol),
    Condition(Times(Power(f,a),Sqrt(Pi),Erfi(Times(x,Rt(Times(b,Log(f)),C2))),Power(Times(C2,Rt(Times(b,Log(f)),C2)),CN1)),And(FreeQ(List(a,b,f),x),PosQ(Times(b,Log(f)))))),
SetDelayed(Int(Power(E,Plus(Times(Power(x_,C2),b_DEFAULT),a_DEFAULT)),x_Symbol),
    Condition(Times(Power(E,a),Sqrt(Pi),Erf(Times(x,Rt(Times(CN1,b),C2))),Power(Times(C2,Rt(Times(CN1,b),C2)),CN1)),And(FreeQ(List(a,b),x),NegQ(b)))),
SetDelayed(Int(Power(f_,Plus(Times(Power(x_,C2),b_DEFAULT),a_DEFAULT)),x_Symbol),
    Condition(Times(Power(f,a),Sqrt(Pi),Erf(Times(x,Rt(Times(CN1,b,Log(f)),C2))),Power(Times(C2,Rt(Times(CN1,b,Log(f)),C2)),CN1)),And(FreeQ(List(a,b,f),x),NegQ(Times(b,Log(f)))))),
SetDelayed(Int(Power(E,Plus(Times(Power(x_,n_),b_DEFAULT),a_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(E,a),x,Gamma(Power(n,CN1),Times(CN1,b,Power(x,n))),Power(Times(n,Power(Times(CN1,b,Power(x,n)),Power(n,CN1))),CN1)),And(FreeQ(List(a,b,n),x),Not(FractionOrNegativeQ(n))))),
SetDelayed(Int(Power(f_,Plus(Times(Power(x_,n_),b_DEFAULT),a_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(f,a),x,Gamma(Power(n,CN1),Times(CN1,b,Power(x,n),Log(f))),Power(Times(n,Power(Times(CN1,b,Power(x,n),Log(f)),Power(n,CN1))),CN1)),And(FreeQ(List(a,b,f,n),x),Not(FractionOrNegativeQ(n))))),
SetDelayed(Int(Power(E,Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),x_Symbol),
    Condition(Plus(Times(x,Power(E,Plus(a,Times(b,Power(x,n))))),Times(CN1,Dist(Times(b,n),Int(Times(Power(x,n),Power(E,Plus(a,Times(b,Power(x,n))))),x)))),And(And(FreeQ(List(a,b),x),IntIntegerQ(n)),Less(n,C0)))),
SetDelayed(Int(Power(f_,Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),x_Symbol),
    Condition(Plus(Times(x,Power(f,Plus(a,Times(b,Power(x,n))))),Times(CN1,Dist(Times(b,n,Log(f)),Int(Times(Power(x,n),Power(f,Plus(a,Times(b,Power(x,n))))),x)))),And(And(FreeQ(List(a,b,f),x),IntIntegerQ(n)),Less(n,C0)))),
SetDelayed(Int(Times(Power(E,Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),Power(x_,CN1)),x_Symbol),
    Condition(Times(Power(E,a),ExpIntegralEi(Times(b,Power(x,n))),Power(n,CN1)),FreeQ(List(a,b,n),x))),
SetDelayed(Int(Times(Power(f_,Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),Power(x_,CN1)),x_Symbol),
    Condition(Times(Power(f,a),ExpIntegralEi(Times(b,Power(x,n),Log(f))),Power(n,CN1)),FreeQ(List(a,b,f,n),x))),
SetDelayed(Int(Times(Power(f_,Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,n),C1)),Power(f,Plus(a,Times(b,Power(x,n)))),Power(Times(b,n,Log(f)),CN1)),Times(CN1,Dist(Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,Log(f)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(f,Plus(a,Times(b,Power(x,n))))),x)))),And(And(And(FreeQ(List(a,b,f),x),IntIntegerQ(n)),RationalQ(m)),And(Less(C0,n),LessEqual(n,m))))),
SetDelayed(Int(Times(Power(f_,Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(f,Plus(a,Times(b,Power(x,n)))),Power(Plus(m,C1),CN1)),Times(CN1,Dist(Times(b,n,Log(f),Power(Plus(m,C1),CN1)),Int(Times(Power(x,Plus(m,n)),Power(f,Plus(a,Times(b,Power(x,n))))),x)))),And(And(And(FreeQ(List(a,b,f),x),IntIntegerQ(n)),RationalQ(m)),Or(And(Greater(n,C0),Less(m,CN1)),And(Less(C0,Times(CN1,n)),LessEqual(Times(CN1,n),Plus(m,C1))))))),
SetDelayed(Int(Times(Power(f_,Plus(Times(Power(x_,n_DEFAULT),b_DEFAULT),a_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(f,a),Power(x,Plus(m,C1)),Gamma(Times(Plus(m,C1),Power(n,CN1)),Times(CN1,b,Power(x,n),Log(f))),Power(Times(n,Power(Times(CN1,b,Power(x,n),Log(f)),Times(Plus(m,C1),Power(n,CN1)))),CN1)),And(And(And(And(And(FreeQ(List(a,b,f,m,n),x),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(m,Times(CN1,n),C1))),Not(And(SameQ(m,Rational(CN1,C2)),ZeroQ(Plus(n,Times(CN1,C1)))))),Not(And(And(IntIntegerQ(List(m,n)),Greater(n,C0)),Or(Less(m,CN1),GreaterEqual(m,n))))),Not(And(RationalQ(List(m,n)),Or(FractionQ(m),FractionOrNegativeQ(n))))))),
SetDelayed(Int(Power(f_,Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Int(Power(f,Times(Power(Plus(b,Times(C2,c,x)),C2),Power(Times(C4,c),CN1))),x),And(FreeQ(List(a,b,c,f),x),ZeroQ(Plus(Power(b,C2),Times(CN1,C4,a,c)))))),
SetDelayed(Int(Power(f_,Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Times(Power(f,Plus(a,Times(CN1,Power(b,C2),Power(Times(C4,c),CN1)))),Int(Power(f,Times(Power(Plus(b,Times(C2,c,x)),C2),Power(Times(C4,c),CN1))),x)),FreeQ(List(a,b,c,f),x))),
SetDelayed(Int(Times(Plus(Times($p(e,true),x_),$p(d,true)),Power(f_,Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT))),x_Symbol),
    Condition(Plus(Times(e,Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2)))),Power(Times(C2,c,Log(f)),CN1)),Times(CN1,Dist(Times(Plus(Times(b,e),Times(CN1,C2,c,d)),Power(Times(C2,c),CN1)),Int(Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2)))),x)))),And(FreeQ(List(a,b,c,d,e,f),x),NonzeroQ(Plus(Times(b,e),Times(CN1,C2,c,d)))))),
SetDelayed(Int(Times(Power(Plus(Times($p(e,true),x_),$p(d,true)),m_),Power(f_,Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT))),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1))),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2)))),Power(Times(C2,c,Log(f)),CN1)),Times(CN1,Dist(Times(Plus(m,Times(CN1,C1)),Power(e,C2),Power(Times(C2,c,Log(f)),CN1)),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C2))),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2))))),x)))),And(And(And(FreeQ(List(a,b,c,d,e,f),x),RationalQ(m)),Greater(m,C1)),ZeroQ(Plus(Times(b,e),Times(CN1,C2,c,d)))))),
SetDelayed(Int(Times(Power(Plus(Times($p(e,true),x_),$p(d,true)),m_),Power(f_,Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT))),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1))),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2)))),Power(Times(C2,c,Log(f)),CN1)),Times(CN1,Dist(Times(Plus(Times(b,e),Times(CN1,C2,c,d)),Power(Times(C2,c),CN1)),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C1))),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2))))),x))),Times(CN1,Dist(Times(Plus(m,Times(CN1,C1)),Power(e,C2),Power(Times(C2,c,Log(f)),CN1)),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Times(CN1,C2))),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2))))),x)))),And(And(And(FreeQ(List(a,b,c,d,e,f),x),RationalQ(m)),Greater(m,C1)),NonzeroQ(Plus(Times(b,e),Times(CN1,C2,c,d)))))),
SetDelayed(Int(Times(Power(Plus(Times($p(e,true),x_),$p(d,true)),m_),Power(f_,Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT))),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2)))),Power(Times(e,Plus(m,C1)),CN1)),Times(CN1,Dist(Times(C2,c,Log(f),Power(Times(Power(e,C2),Plus(m,C1)),CN1)),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C2)),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2))))),x)))),And(And(And(FreeQ(List(a,b,c,d,e,f),x),RationalQ(m)),Less(m,CN1)),ZeroQ(Plus(Times(b,e),Times(CN1,C2,c,d)))))),
SetDelayed(Int(Times(Power(Plus(Times($p(e,true),x_),$p(d,true)),m_),Power(f_,Plus(Times(Power(x_,C2),c_DEFAULT),Times(b_DEFAULT,x_),a_DEFAULT))),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2)))),Power(Times(e,Plus(m,C1)),CN1)),Times(CN1,Dist(Times(Plus(Times(b,e),Times(CN1,C2,c,d)),Log(f),Power(Times(Power(e,C2),Plus(m,C1)),CN1)),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2))))),x))),Times(CN1,Dist(Times(C2,c,Log(f),Power(Times(Power(e,C2),Plus(m,C1)),CN1)),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C2)),Power(f,Plus(a,Times(b,x),Times(c,Power(x,C2))))),x)))),And(And(And(FreeQ(List(a,b,c,d,e,f),x),RationalQ(m)),Less(m,CN1)),NonzeroQ(Plus(Times(b,e),Times(CN1,C2,c,d)))))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(f_,Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_DEFAULT))),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(f,Power(Plus(c,Times(d,x)),n)),Power(Times(b,Plus(m,C1)),CN1)),Times(CN1,Dist(Times(d,n,Log(f),Power(Times(b,Plus(m,C1)),CN1)),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(f,Power(Plus(c,Times(d,x)),n)),Power(Plus(c,Times(d,x)),Plus(n,Times(CN1,C1)))),x)))),And(And(And(And(FreeQ(List(a,b,c,d),x),RationalQ(m)),Less(m,CN1)),IntIntegerQ(n)),Greater(n,C1)))),
SetDelayed(Int(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Times(CN1,Log(Plus(b,Times(a,Power(f,Plus(Times(CN1,c),Times(CN1,d,x)))))),Power(Times(a,d,Log(f)),CN1)),And(FreeQ(List(a,b,c,d,f),x),NegativeCoefficientQ(d)))),
SetDelayed(Int(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(x,Power(a,CN1)),Times(CN1,Log(Plus(a,Times(b,Power(f,Plus(c,Times(d,x)))))),Power(Times(a,d,Log(f)),CN1))),FreeQ(List(a,b,c,d,f),x))),
SetDelayed(Int(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(CN2,ArcTanh(Times(Sqrt(Plus(a,Times(b,Power(f,Plus(c,Times(d,x)))))),Power(Sqrt(a),CN1))),Power(Times(Sqrt(a),d,Log(f)),CN1)),And(FreeQ(List(a,b,c,d,f),x),PosQ(a)))),
SetDelayed(Int(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(C2,ArcTan(Times(Sqrt(Plus(a,Times(b,Power(f,Plus(c,Times(d,x)))))),Power(Sqrt(Times(CN1,a)),CN1))),Power(Times(Sqrt(Times(CN1,a)),d,Log(f)),CN1)),And(FreeQ(List(a,b,c,d,f),x),NegQ(a)))),
SetDelayed(Int(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,Power(f,Plus(c,Times(d,x))))),n),Power(Times(n,d,Log(f)),CN1)),Dist(a,Int(Power(Plus(a,Times(b,Power(f,Plus(c,Times(d,x))))),Plus(n,Times(CN1,C1))),x))),And(And(FreeQ(List(a,b,c,d,f),x),FractionQ(n)),Greater(n,C0)))),
SetDelayed(Int(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(a,Times(b,Power(f,Plus(c,Times(d,x))))),Plus(n,C1)),Power(Times(Plus(n,C1),a,d,Log(f)),CN1)),Dist(Power(a,CN1),Int(Power(Plus(a,Times(b,Power(f,Plus(c,Times(d,x))))),Plus(n,C1)),x))),And(And(FreeQ(List(a,b,c,d,f),x),RationalQ(n)),Less(n,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Dist(Times(b,Power(a,CN1)),Int(Times(Power(x,m),Power(f,Plus(c,Times(d,x))),Power(Plus(a,Times(b,Power(f,Plus(c,Times(d,x))))),CN1)),x)))),And(And(FreeQ(List(a,b,c,d,f),x),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("ShowSteps"),False),Set($s("StepCounter"),Null)),Int(Power(Plus(a,Times(b,Power(f,Plus(c,Times(d,x))))),n),x)))),Plus(Times(Power(x,m),u),Times(CN1,Dist(m,Int(Times(Power(x,Plus(m,Times(CN1,C1))),u),x))))),And(And(And(FreeQ(List(a,b,c,d,f),x),RationalQ(List(m,n))),Greater(m,C0)),Less(n,CN1)))),
SetDelayed(Int(Times(Power(f_,Times(Power(Plus(Times(b_DEFAULT,x_),a_),C2),c_DEFAULT)),Power(x_,m_)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(f,Plus(Times(Power(a,C2),c),Times(C2,a,b,c,x),Times(Power(b,C2),c,Power(x,C2))))),x),And(And(FreeQ(List(a,b,c,f),x),FractionQ(m)),Greater(m,C1)))),
SetDelayed(Int(Times(Power(f_,Times(Power(Plus(Times(b_DEFAULT,x_),a_),n_),c_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Power(Power(b,m),CN1),Int(Times(Expand(Plus(Times(Power(b,m),Power(x,m)),Times(CN1,Power(Plus(a,Times(b,x)),m))),x),Power(f,Times(c,Power(Plus(a,Times(b,x)),n)))),x)),Dist(Power(Power(b,Plus(m,C1)),CN1),Subst(Int(Times(Power(x,m),Power(f,Times(c,Power(x,n)))),x),x,Plus(a,Times(b,x))))),And(And(FreeQ(List(a,b,c,f,n),x),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Log(Plus(C1,Times(b,Power(f,Plus(c,Times(d,x))),Power(a,CN1)))),Power(Times(b,d,Log(f)),CN1)),Times(CN1,Dist(Times(m,Power(Times(b,d,Log(f)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Log(Plus(C1,Times(b,Power(a,CN1),Power(f,Plus(c,Times(d,x))))))),x)))),And(And(FreeQ(List(a,b,c,d,f),x),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(f_,v_),b_DEFAULT),a_DEFAULT),CN1),Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("ShowSteps"),False),Set($s("StepCounter"),Null)),Int(Times(Power(f,Plus(c,Times(d,x))),Power(Plus(a,Times(b,Power(f,v))),CN1)),x)))),Plus(Times(Power(x,m),u),Times(CN1,Dist(m,Int(Times(Power(x,Plus(m,Times(CN1,C1))),u),x))))),And(And(And(FreeQ(List(a,b,c,d,f),x),ZeroQ(Plus(Times(C2,Plus(c,Times(d,x))),Times(CN1,v)))),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),a_DEFAULT),Times(Power(f_,v_),b_DEFAULT)),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("ShowSteps"),False),Set($s("StepCounter"),Null)),Int(Power(Plus(Times(a,Power(f,Plus(c,Times(d,x)))),Times(b,Power(f,v))),CN1),x)))),Plus(Times(Power(x,m),u),Times(CN1,Dist(m,Int(Times(Power(x,Plus(m,Times(CN1,C1))),u),x))))),And(And(And(FreeQ(List(a,b,c,d,f),x),ZeroQ(Plus(c,Times(d,x),v))),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Log(Plus(C1,Times(Power(f_,Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT))),x_Symbol),
    Condition(Times(CN1,PolyLog(C2,Times(CN1,c,Power(f,Plus(a,Times(b,x))))),Power(Times(b,Log(f)),CN1)),FreeQ(List(a,b,c,f),x))),
SetDelayed(Int(Log(Plus(Times(Power(f_,Plus(Times(b_DEFAULT,x_),a_DEFAULT)),$p(d,true)),c_)),x_Symbol),
    Condition(Plus(Times(x,Log(Plus(c,Times(d,Power(f,Plus(a,Times(b,x))))))),Times(CN1,x,Log(Plus(C1,Times(d,Power(c,CN1),Power(f,Plus(a,Times(b,x))))))),Int(Log(Plus(C1,Times(d,Power(c,CN1),Power(f,Plus(a,Times(b,x)))))),x)),And(FreeQ(List(a,b,c,d,f),x),NonzeroQ(Plus(c,Times(CN1,C1)))))),
SetDelayed(Int(Times(Log(Plus(C1,Times(Power(f_,Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT))),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,m),PolyLog(C2,Times(CN1,c,Power(f,Plus(a,Times(b,x))))),Power(Times(b,Log(f)),CN1)),Dist(Times(m,Power(Times(b,Log(f)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),PolyLog(C2,Times(CN1,c,Power(f,Plus(a,Times(b,x)))))),x))),And(And(FreeQ(List(a,b,c,f),x),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Log(Plus(Times(Power(f_,Plus(Times(b_DEFAULT,x_),a_DEFAULT)),$p(d,true)),c_)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Log(Plus(c,Times(d,Power(f,Plus(a,Times(b,x)))))),Power(Plus(m,C1),CN1)),Times(CN1,Power(x,Plus(m,C1)),Log(Plus(C1,Times(d,Power(c,CN1),Power(f,Plus(a,Times(b,x)))))),Power(Plus(m,C1),CN1)),Int(Times(Power(x,m),Log(Plus(C1,Times(d,Power(c,CN1),Power(f,Plus(a,Times(b,x))))))),x)),And(And(And(FreeQ(List(a,b,c,d,f),x),NonzeroQ(Plus(c,Times(CN1,C1)))),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(PolyLog(n_,Times(Power(f_,Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT)),x_Symbol),
    Condition(Times(PolyLog(Plus(n,C1),Times(c,Power(f,Plus(a,Times(b,x))))),Power(Times(b,Log(f)),CN1)),FreeQ(List(a,b,c,n),x))),
SetDelayed(Int(Times(PolyLog(n_,Times(Power(f_,Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),PolyLog(Plus(n,C1),Times(c,Power(f,Plus(a,Times(b,x))))),Power(Times(b,Log(f)),CN1)),Times(CN1,Dist(Times(m,Power(Times(b,Log(f)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),PolyLog(Plus(n,C1),Times(c,Power(f,Plus(a,Times(b,x)))))),x)))),And(And(FreeQ(List(a,b,c,n),x),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(ArcTanh(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Rational(C1,C2),Int(Log(Plus(C1,Times(b,Power(f,Plus(c,Times(d,x)))))),x)),Times(CN1,Dist(Rational(C1,C2),Int(Log(Plus(C1,Times(CN1,b,Power(f,Plus(c,Times(d,x)))))),x)))),FreeQ(List(b,c,d,f),x))),
SetDelayed(Int(Times(ArcTanh(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Rational(C1,C2),Int(Times(Power(x,m),Log(Plus(C1,Times(b,Power(f,Plus(c,Times(d,x))))))),x)),Times(CN1,Dist(Rational(C1,C2),Int(Times(Power(x,m),Log(Plus(C1,Times(CN1,b,Power(f,Plus(c,Times(d,x))))))),x)))),And(And(FreeQ(List(b,c,d,f),x),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(ArcCoth(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Rational(C1,C2),Int(Log(Plus(C1,Power(Times(b,Power(f,Plus(c,Times(d,x)))),CN1))),x)),Times(CN1,Dist(Rational(C1,C2),Int(Log(Plus(C1,Times(CN1,Power(Times(b,Power(f,Plus(c,Times(d,x)))),CN1)))),x)))),FreeQ(List(b,c,d,f),x))),
SetDelayed(Int(Times(ArcCoth(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Rational(C1,C2),Int(Times(Power(x,m),Log(Plus(C1,Power(Times(b,Power(f,Plus(c,Times(d,x)))),CN1)))),x)),Times(CN1,Dist(Rational(C1,C2),Int(Times(Power(x,m),Log(Plus(C1,Times(CN1,Power(Times(b,Power(f,Plus(c,Times(d,x)))),CN1))))),x)))),And(And(FreeQ(List(b,c,d,f),x),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(ArcTan(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Times(Rational(C1,C2),CI),Int(Log(Plus(C1,Times(CN1,b,CI,Power(f,Plus(c,Times(d,x)))))),x)),Times(CN1,Dist(Times(Rational(C1,C2),CI),Int(Log(Plus(C1,Times(b,CI,Power(f,Plus(c,Times(d,x)))))),x)))),FreeQ(List(b,c,d,f),x))),
SetDelayed(Int(Times(ArcTan(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Times(Rational(C1,C2),CI),Int(Times(Power(x,m),Log(Plus(C1,Times(CN1,a,CI),Times(CN1,b,CI,Power(f,Plus(c,Times(d,x))))))),x)),Times(CN1,Dist(Times(Rational(C1,C2),CI),Int(Times(Power(x,m),Log(Plus(C1,Times(a,CI),Times(b,CI,Power(f,Plus(c,Times(d,x))))))),x)))),And(And(FreeQ(List(a,b,c,d,f),x),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(ArcCot(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Times(Rational(C1,C2),CI),Int(Log(Plus(C1,Times(CN1,CI,Power(Times(b,Power(f,Plus(c,Times(d,x)))),CN1)))),x)),Times(CN1,Dist(Times(Rational(C1,C2),CI),Int(Log(Plus(C1,Times(CI,Power(Times(b,Power(f,Plus(c,Times(d,x)))),CN1)))),x)))),FreeQ(List(b,c,d,f),x))),
SetDelayed(Int(Times(ArcCot(Plus(Times(Power(f_,Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Dist(Times(Rational(C1,C2),CI),Int(Times(Power(x,m),Log(Plus(C1,Times(CN1,CI,Power(Plus(a,Times(b,Power(f,Plus(c,Times(d,x))))),CN1))))),x)),Times(CN1,Dist(Times(Rational(C1,C2),CI),Int(Times(Power(x,m),Log(Plus(C1,Times(CI,Power(Plus(a,Times(b,Power(f,Plus(c,Times(d,x))))),CN1))))),x)))),And(And(FreeQ(List(a,b,c,d,f),x),IntIntegerQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Power(f_,Times(Power(Plus(Times($p(d,true),x_),c_DEFAULT),n_DEFAULT),$p(e,true))),p_DEFAULT)),x_Symbol),
    Condition(Dist(Power(b,CN1),Subst(Int(Times(Power(x,m),Power(Power(f,Times(e,Power(Plus(c,Times(CN1,a,d,Power(b,CN1)),Times(d,x,Power(b,CN1))),n))),p)),x),x,Plus(a,Times(b,x)))),And(And(FreeQ(List(a,b,c,d,e,f,m,n),x),RationalQ(p)),Not(And(SameQ(a,C0),SameQ(b,C1)))))),
SetDelayed(Int(Power(f_,Times(Plus(Times(Power(x_,C4),b_DEFAULT),a_DEFAULT),Power(x_,CN2))),x_Symbol),
    Condition(Plus(Times(Sqrt(Pi),Exp(Times(C2,Sqrt(Times(CN1,a,Log(f))),Sqrt(Times(CN1,b,Log(f))))),Erf(Times(Plus(Sqrt(Times(CN1,a,Log(f))),Times(Sqrt(Times(CN1,b,Log(f))),Power(x,C2))),Power(x,CN1))),Power(Times(C4,Sqrt(Times(CN1,b,Log(f)))),CN1)),Times(CN1,Sqrt(Pi),Exp(Times(CN2,Sqrt(Times(CN1,a,Log(f))),Sqrt(Times(CN1,b,Log(f))))),Erf(Times(Plus(Sqrt(Times(CN1,a,Log(f))),Times(CN1,Sqrt(Times(CN1,b,Log(f))),Power(x,C2))),Power(x,CN1))),Power(Times(C4,Sqrt(Times(CN1,b,Log(f)))),CN1))),FreeQ(List(a,b,f),x))),
SetDelayed(Int(Power(Plus(Times(Power(f_,u_),b_DEFAULT),Times(Power(f_,v_),c_DEFAULT),a_),CN1),x_Symbol),
    Condition(Plus(Times(x,Power(a,CN1)),Times(CN1,Dist(Power(a,CN1),Int(Times(Power(f,u),Plus(b,Times(c,Power(f,u))),Power(Plus(a,Times(b,Power(f,u)),Times(c,Power(f,v))),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,f),x),LinearQ(u,x)),LinearQ(v,x)),ZeroQ(Plus(Times(C2,u),Times(CN1,v)))),Not(RationalQ(Rt(Plus(Power(b,C2),Times(CN1,C4,a,c)),C2)))))),
SetDelayed(Int(Times(Plus(Times(Power(f_,u_),$p(e,true)),$p(d)),Power(Plus(Times(Power(f_,u_),b_DEFAULT),Times(Power(f_,v_),c_DEFAULT),a_),CN1)),x_Symbol),
    Condition(Plus(Times(d,x,Power(a,CN1)),Times(CN1,Dist(Power(a,CN1),Int(Times(Power(f,u),Plus(Times(b,d),Times(CN1,a,e),Times(c,d,Power(f,u))),Power(Plus(a,Times(b,Power(f,u)),Times(c,Power(f,v))),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,d,e,f),x),LinearQ(u,x)),LinearQ(v,x)),ZeroQ(Plus(Times(C2,u),Times(CN1,v)))),Not(RationalQ(Rt(Plus(Power(b,C2),Times(CN1,C4,a,c)),C2)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(f_,v_),b_DEFAULT),Times(Power(f_,w_),c_DEFAULT),a_),CN1),u_),x_Symbol),
    Condition(Int(Times(u,Power(f,v),Power(Plus(c,Times(a,Power(f,v)),Times(b,Power(f,Times(C2,v)))),CN1)),x),And(And(And(And(FreeQ(List(a,b,c,f),x),LinearQ(v,x)),LinearQ(w,x)),ZeroQ(Plus(v,w))),If(RationalQ(Coefficient(v,x,C1)),Greater(Coefficient(v,x,C1),C0),Less(LeafCount(v),LeafCount(w)))))),
SetDelayed(Int(Times(Power(Plus(Power(E,x_),Power(x_,m_DEFAULT)),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(Power(E,x),Power(x,m)),Plus(n,C1)),Power(Plus(n,C1),CN1)),Int(Power(Plus(Power(E,x),Power(x,m)),Plus(n,C1)),x),Dist(m,Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(Power(E,x),Power(x,m)),n)),x))),And(And(RationalQ(List(m,n)),Greater(m,C0)),NonzeroQ(Plus(n,C1))))),
SetDelayed(Int(Sin(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Cos(Plus(a,Times(b,x))),Power(b,CN1)),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Sin(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),C2),x_Symbol),
    Condition(Plus(Times(Rational(C1,C2),x),Times(CN1,Cos(Plus(a,Times(b,x))),Sin(Plus(a,Times(b,x))),Power(Times(C2,b),CN1))),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Sin(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),n_),x_Symbol),
    Condition(Dist(Times(CN1,Power(b,CN1)),Subst(Int(Regularize(Power(Plus(C1,Times(CN1,Power(x,C2))),Times(Rational(C1,C2),Plus(n,Times(CN1,C1)))),x),x),x,Cos(Plus(a,Times(b,x))))),And(And(FreeQ(List(a,b),x),OddQ(n)),Greater(n,C1)))),
SetDelayed(Int(Power(Times(Sin(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(CN1,c,Cos(Plus(a,Times(b,x))),Power(Times(c,Sin(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C1))),Power(Times(b,n),CN1)),Dist(Times(Plus(n,Times(CN1,C1)),Power(c,C2),Power(n,CN1)),Int(Power(Times(c,Sin(Plus(a,Times(b,x)))),Plus(n,Times(CN1,C2))),x))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Greater(n,C1)),Not(OddQ(n))))),
SetDelayed(Int(Power(Times(Sin(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_DEFAULT),n_),x_Symbol),
    Condition(Plus(Times(Cos(Plus(a,Times(b,x))),Power(Times(c,Sin(Plus(a,Times(b,x)))),Plus(n,C1)),Power(Times(c,b,Plus(n,C1)),CN1)),Dist(Times(Plus(n,C2),Power(Times(Plus(n,C1),Power(c,C2)),CN1)),Int(Power(Times(c,Sin(Plus(a,Times(b,x)))),Plus(n,C2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(n,CN1)))),
SetDelayed(Int(Power(Times(Sin(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),c_),n_),x_Symbol),
    Condition(Times(Power(Times(c,Sin(Plus(a,Times(b,x)))),n),Power(Power(Sin(Plus(a,Times(b,x))),n),CN1),Int(Power(Sin(Plus(a,Times(b,x))),n),x)),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(Less(CN1,n),C1)))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Times(CN1,Cos(Plus(c,Times(d,x))),Power(Times(d,Plus(b,Times(a,Sin(Plus(c,Times(d,x)))))),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Times(C2,ArcTan(Times(Plus(b,Times(a,Tan(Times(Rational(C1,C2),Plus(c,Times(d,x)))))),Power(Rt(Plus(Power(a,C2),Times(CN1,Power(b,C2))),C2),CN1))),Power(Times(d,Rt(Plus(Power(a,C2),Times(CN1,Power(b,C2))),C2)),CN1)),And(FreeQ(List(a,b,c,d),x),PosQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1),x_Symbol),
    Condition(Times(CN2,ArcTanh(Times(Plus(b,Times(a,Tan(Times(Rational(C1,C2),Plus(c,Times(d,x)))))),Power(Rt(Plus(Power(b,C2),Times(CN1,Power(a,C2))),C2),CN1))),Power(Times(d,Rt(Plus(Power(b,C2),Times(CN1,Power(a,C2))),C2)),CN1)),And(FreeQ(List(a,b,c,d),x),NegQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),C1D2),x_Symbol),
    Condition(Times(CN2,b,Cos(Plus(c,Times(d,x))),Power(Times(d,Sqrt(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))))),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_DEFAULT),C1D2),x_Symbol),
    Condition(Times(C2,Sqrt(Plus(a,b)),EllipticE(Times(Rational(C1,C2),Plus(Times(Rational(C1,C2),CN1,Pi),c,Times(d,x))),Times(C2,b,Power(Plus(a,b),CN1))),Power(d,CN1)),And(And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),PositiveQ(Plus(a,b))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_DEFAULT),C1D2),x_Symbol),
    Condition(Times(Sqrt(Plus(a,Times(b,Sin(Plus(c,Times(d,x)))))),Power(Sqrt(Times(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Power(Plus(a,b),CN1))),CN1),Int(Sqrt(Plus(Times(a,Power(Plus(a,b),CN1)),Times(b,Power(Plus(a,b),CN1),Sin(Plus(c,Times(d,x)))))),x)),And(And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),Not(PositiveQ(Plus(a,b)))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(CN2,ArcTanh(Cos(Times(Rational(C1,C2),Plus(c,Times(CN1,Rational(C1,C2),Pi),Times(d,x))))),Sin(Times(Rational(C1,C2),Plus(c,Times(CN1,Rational(C1,C2),Pi),Times(d,x)))),Power(Times(d,Sqrt(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))))),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(a,b))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(C2,ArcTanh(Sin(Times(Rational(C1,C2),Plus(c,Times(CN1,Rational(C1,C2),Pi),Times(d,x))))),Cos(Times(Rational(C1,C2),Plus(c,Times(CN1,Rational(C1,C2),Pi),Times(d,x)))),Power(Times(d,Sqrt(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))))),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(a,Times(CN1,b)))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_DEFAULT),CN1D2),x_Symbol),
    Condition(Times(C2,EllipticF(Times(Rational(C1,C2),Plus(Times(Rational(C1,C2),CN1,Pi),c,Times(d,x))),Times(C2,b,Power(Plus(a,b),CN1))),Power(Times(d,Sqrt(Plus(a,b))),CN1)),And(And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),PositiveQ(Plus(a,b))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1D2),x_Symbol),
    Condition(Times(Sqrt(Times(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Power(Plus(a,b),CN1))),Power(Sqrt(Plus(a,Times(b,Sin(Plus(c,Times(d,x)))))),CN1),Int(Power(Sqrt(Plus(Times(a,Power(Plus(a,b),CN1)),Times(b,Power(Plus(a,b),CN1),Sin(Plus(c,Times(d,x)))))),CN1),x)),And(And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),Not(PositiveQ(Plus(a,b)))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(CN1,b,Cos(Plus(c,Times(d,x))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Plus(n,Times(CN1,C1))),Power(Times(d,n),CN1)),Dist(Times(a,Plus(Times(C2,n),Times(CN1,C1)),Power(n,CN1)),Int(Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Plus(n,Times(CN1,C1))),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(n)),Greater(n,C1)),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(b,Cos(Plus(c,Times(d,x))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),n),Power(Times(a,d,Plus(Times(C2,n),C1)),CN1)),Dist(Times(Plus(n,C1),Power(Times(a,Plus(Times(C2,n),C1)),CN1)),Int(Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Plus(n,C1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),RationalQ(n)),Less(n,CN1)),ZeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN2),x_Symbol),
    Condition(Plus(Times(b,Cos(Plus(c,Times(d,x))),Power(Times(d,Plus(Power(a,C2),Times(CN1,Power(b,C2))),Plus(a,Times(b,Sin(Plus(c,Times(d,x)))))),CN1)),Dist(Times(a,Power(Plus(Power(a,C2),Times(CN1,Power(b,C2))),CN1)),Int(Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),CN1),x))),And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),x_Symbol),
    Condition(Plus(Times(CN1,b,Cos(Plus(c,Times(d,x))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Plus(n,C1)),Power(Times(d,Plus(n,C1),Plus(Power(a,C2),Times(CN1,Power(b,C2)))),CN1)),Dist(Power(Times(Plus(n,C1),Plus(Power(a,C2),Times(CN1,Power(b,C2)))),CN1),Int(Times(Plus(Times(a,Plus(n,C1)),Times(CN1,b,Plus(n,C2),Sin(Plus(c,Times(d,x))))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Plus(n,C1))),x))),And(And(And(FreeQ(List(a,b,c,d),x),RationalQ(n)),Less(n,CN1)),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Times(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Dist(Power(Times(C2,a),n),Int(Times(Power(x,m),Power(Cos(Plus(Times(Rational(C1,C4),CN1,Pi),Times(Rational(C1,C2),c),Times(d,Rational(C1,C2),x))),Times(C2,n))),x)),And(And(And(And(FreeQ(List(a,b,c,d),x),RationalQ(m)),IntIntegerQ(n)),Less(n,C0)),ZeroQ(Plus(a,Times(CN1,b)))))),
SetDelayed(Int(Times(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Dist(Power(C2,n),Int(Times(Power(x,m),Power(Times(a,Power(Cos(Plus(Times(Rational(C1,C4),CN1,Pi),Times(Rational(C1,C2),c),Times(d,Rational(C1,C2),x))),C2)),n)),x)),And(And(FreeQ(List(a,b,c,d),x),RationalQ(List(m,n))),ZeroQ(Plus(a,Times(CN1,b)))))),
SetDelayed(Int(Times(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Dist(Power(Times(C2,a),n),Int(Times(Power(x,m),Power(Cos(Plus(Times(Rational(C1,C4),Pi),Times(Rational(C1,C2),c),Times(d,Rational(C1,C2),x))),Times(C2,n))),x)),And(And(And(And(FreeQ(List(a,b,c,d),x),RationalQ(m)),IntIntegerQ(n)),Less(n,C0)),ZeroQ(Plus(a,b))))),
SetDelayed(Int(Times(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Dist(Power(C2,n),Int(Times(Power(x,m),Power(Times(a,Power(Cos(Plus(Times(Rational(C1,C4),Pi),Times(Rational(C1,C2),c),Times(d,Rational(C1,C2),x))),C2)),n)),x)),And(And(FreeQ(List(a,b,c,d),x),RationalQ(List(m,n))),ZeroQ(Plus(a,b))))),
SetDelayed(Int(Times(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN2),x_),x_Symbol),
    Condition(Plus(Dist(Times(a,Power(Plus(Power(a,C2),Times(CN1,Power(b,C2))),CN1)),Int(Times(x,Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),CN1)),x)),Times(CN1,Dist(Times(b,Power(Plus(Power(a,C2),Times(CN1,Power(b,C2))),CN1)),Int(Times(x,Plus(b,Times(a,Sin(Plus(c,Times(d,x))))),Power(Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),C2),CN1)),x)))),And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Times(Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Dist(Power(Power(C2,n),CN1),Int(Times(Power(x,m),Power(Plus(Times(CI,b),Times(C2,a,Power(E,Plus(Times(CI,c),Times(CI,d,x)))),Times(CN1,CI,b,Power(E,Times(C2,Plus(Times(CI,c),Times(CI,d,x)))))),n),Power(Power(E,Times(n,Plus(Times(CI,c),Times(CI,d,x)))),CN1)),x)),And(And(And(And(And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),IntIntegerQ(n)),Less(n,C0)),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),$p("B",true)),$p("A",true)),Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN1D2)),x_Symbol),
    Condition(Plus(Dist(Times(Plus(Times(b,$s("A")),Times(CN1,a,$s("B"))),Power(b,CN1)),Int(Power(Sqrt(Plus(a,Times(b,Sin(Plus(c,Times(d,x)))))),CN1),x)),Dist(Times($s("B"),Power(b,CN1)),Int(Sqrt(Plus(a,Times(b,Sin(Plus(c,Times(d,x)))))),x))),And(FreeQ(List(a,b,c,d,$s("A"),$s("B")),x),NonzeroQ(Plus(Times(b,$s("A")),Times(CN1,a,$s("B"))))))),
SetDelayed(Int(Times(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),$p("B",true)),$p("A",true)),Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),n_)),x_Symbol),
    Condition(Plus(Times(CN1,$s("B"),Cos(Plus(c,Times(d,x))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),n),Power(Times(d,Plus(n,C1)),CN1)),Dist(Power(Plus(n,C1),CN1),Int(Times(Plus(Times(b,$s("B"),n),Times(a,$s("A"),Plus(n,C1)),Times(Plus(Times(a,$s("B"),n),Times(b,$s("A"),Plus(n,C1))),Sin(Plus(c,Times(d,x))))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Plus(n,Times(CN1,C1)))),x))),And(And(And(FreeQ(List(a,b,c,d,$s("A"),$s("B")),x),RationalQ(n)),Greater(n,C1)),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Times(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),$p("B",true)),$p("A")),Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN2)),x_Symbol),
    Condition(Times(CN1,$s("B"),Cos(Plus(c,Times(d,x))),Power(Times(a,d,Plus(a,Times(b,Sin(Plus(c,Times(d,x)))))),CN1)),And(FreeQ(List(a,b,c,d,$s("A"),$s("B")),x),ZeroQ(Plus(Times(a,$s("A")),Times(CN1,b,$s("B"))))))),
SetDelayed(Int(Times(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),$p("B",true)),$p("A")),Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_),CN2),x_),x_Symbol),
    Condition(Plus(Times(CN1,$s("B"),x,Cos(Plus(c,Times(d,x))),Power(Times(a,d,Plus(a,Times(b,Sin(Plus(c,Times(d,x)))))),CN1)),Dist(Times($s("B"),Power(Times(a,d),CN1)),Int(Times(Cos(Plus(c,Times(d,x))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d,$s("A"),$s("B")),x),ZeroQ(Plus(Times(a,$s("A")),Times(CN1,b,$s("B"))))))),
SetDelayed(Int(Times(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),$p("B",true)),$p("A",true)),Power(Plus(Times(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),b_DEFAULT),a_DEFAULT),n_)),x_Symbol),
    Condition(Plus(Times(Plus(Times(a,$s("B")),Times(CN1,b,$s("A"))),Cos(Plus(c,Times(d,x))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Plus(n,C1)),Power(Times(d,Plus(n,C1),Plus(Power(a,C2),Times(CN1,Power(b,C2)))),CN1)),Dist(Power(Times(Plus(n,C1),Plus(Power(a,C2),Times(CN1,Power(b,C2)))),CN1),Int(Times(Plus(Times(Plus(n,C1),Plus(Times(a,$s("A")),Times(CN1,b,$s("B")))),Times(Plus(n,C2),Plus(Times(a,$s("B")),Times(CN1,b,$s("A"))),Sin(Plus(c,Times(d,x))))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),Plus(n,C1))),x))),And(And(And(FreeQ(List(a,b,c,d,$s("A"),$s("B")),x),RationalQ(n)),Less(n,CN1)),NonzeroQ(Plus(Power(a,C2),Times(CN1,Power(b,C2))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power(Sin(Plus(Times($p(d,true),x_),c_DEFAULT)),C2),b_DEFAULT),a_),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Dist(C2,Int(Times(Power(x,m),Power(Plus(Times(C2,a),b,Times(CN1,b,Cos(Plus(Times(C2,c),Times(C2,d,x))))),CN1)),x)),And(And(And(FreeQ(List(a,b,c,d),x),IntIntegerQ(m)),Greater(m,C0)),NonzeroQ(Plus(a,b)))))
  );
}
