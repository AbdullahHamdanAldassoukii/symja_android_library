package org.matheclipse.core.integrate.rubi42;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi42.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi42.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntegrationRulesForExpressionsInvolvingHyperbolicFunctionsOfTheFollowingForms2 { 
  public static IAST RULES = List( 
SetDelayed(Int(Times(Power(Tanh(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1)))),x)),Int(Times(Power(x,m),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x)),And(And(And(FreeQ(List(a,b),x),RationalQ(m,n,p)),Greater(p,C1)),Less(Less(C0,n),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Coth(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1)))),x)),Int(Times(Power(x,m),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C2)))),x)),And(And(And(FreeQ(List(a,b),x),RationalQ(m,n,p)),Greater(p,C1)),Less(Less(C0,n),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Tanh(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,n),C1)),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,C1)),Power(Times(b,n,Plus(p,C1)),CN1)),Times(CN1,Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,C1))),x)),Int(Times(Power(x,m),Power(Tanh(Plus(a,Times(b,Power(x,n)))),Plus(p,C2))),x)),And(And(And(FreeQ(List(a,b),x),RationalQ(m,n,p)),Less(p,CN1)),Less(Less(C0,n),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Coth(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,n),C1)),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,C1)),Power(Times(b,n,Plus(p,C1)),CN1)),Times(CN1,Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,C1))),x)),Int(Times(Power(x,m),Power(Coth(Plus(a,Times(b,Power(x,n)))),Plus(p,C2))),x)),And(And(And(FreeQ(List(a,b),x),RationalQ(m,n,p)),Less(p,CN1)),Less(Less(C0,n),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Sinh(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(n,true)),Power(Tanh(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Power(x,m),Power(Sinh(Plus(a,Times(b,x))),n),Power(Tanh(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x),Times(CN1,Int(Times(Power(x,m),Power(Sinh(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Tanh(Plus(a,Times(b,x))),p)),x))),And(FreeQ(List(a,b,m),x),PositiveIntegerQ(n,p)))),
SetDelayed(Int(Times(Power(Cosh(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(n,true)),Power(Coth(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Power(x,m),Power(Cosh(Plus(a,Times(b,x))),n),Power(Coth(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x),Int(Times(Power(x,m),Power(Cosh(Plus(a,Times(b,x))),Plus(n,Times(CN1,C2))),Power(Coth(Plus(a,Times(b,x))),p)),x)),And(FreeQ(List(a,b,m),x),PositiveIntegerQ(n,p)))),
SetDelayed(Int(Times(Power(Tanh(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(p)),Power($p(x),$p(m,true)),Sech(Plus(Times($p(b,true),$p(x)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Power(x,m),Sech(Plus(a,Times(b,x))),Power(Tanh(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x),Times(CN1,Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,x))),C3),Power(Tanh(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x))),And(FreeQ(List(a,b,m),x),PositiveIntegerQ(Times(C1D2,p))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(n,true)),Power(Tanh(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,x))),n),Power(Tanh(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x),Times(CN1,Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,x))),Plus(n,C2)),Power(Tanh(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x))),And(FreeQ(List(a,b,m,n),x),PositiveIntegerQ(Times(C1D2,p))))),
SetDelayed(Int(Times(Csch(Plus(Times($p(b,true),$p(x)),$p(a,true))),Power(Coth(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Power(x,m),Csch(Plus(a,Times(b,x))),Power(Coth(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x),Int(Times(Power(x,m),Power(Csch(Plus(a,Times(b,x))),C3),Power(Coth(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x)),And(FreeQ(List(a,b,m),x),PositiveIntegerQ(Times(C1D2,p))))),
SetDelayed(Int(Times(Power(Coth(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(p)),Power(Csch(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(n,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Power(x,m),Power(Csch(Plus(a,Times(b,x))),n),Power(Coth(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x),Int(Times(Power(x,m),Power(Csch(Plus(a,Times(b,x))),Plus(n,C2)),Power(Coth(Plus(a,Times(b,x))),Plus(p,Times(CN1,C2)))),x)),And(FreeQ(List(a,b,m,n),x),PositiveIntegerQ(Times(C1D2,p))))),
SetDelayed(Int(Sech(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(x,SymbolHead)),
    Condition(Times(Power(n,CN1),Subst(Int(Times(Power(x,Plus(Power(n,CN1),Times(CN1,C1))),Sech(Plus(a,Times(b,x)))),x),x,Power(x,n))),And(FreeQ(List(a,b),x),PositiveIntegerQ(Power(n,CN1))))),
SetDelayed(Int(Csch(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(x,SymbolHead)),
    Condition(Times(Power(n,CN1),Subst(Int(Times(Power(x,Plus(Power(n,CN1),Times(CN1,C1))),Csch(Plus(a,Times(b,x)))),x),x,Power(x,n))),And(FreeQ(List(a,b),x),PositiveIntegerQ(Power(n,CN1))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(n,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(n,CN1))),Times(CN1,C1))),Power(Sech(Plus(a,Times(b,x))),p)),x),x,Power(x,n))),And(FreeQ(List(a,b,m,n,p),x),PositiveIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(n,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(n,CN1))),Times(CN1,C1))),Power(Csch(Plus(a,Times(b,x))),p)),x),x,Power(x,n))),And(FreeQ(List(a,b,m,n,p),x),PositiveIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition($(Defer($s("Int")),Times(Power(x,m),Power(Sech(Plus(a,Times(b,Power(x,n)))),p)),x),FreeQ(List(a,b,m,n,p),x))),
SetDelayed(Int(Times(Power(Csch(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition($(Defer($s("Int")),Times(Power(x,m),Power(Csch(Plus(a,Times(b,Power(x,n)))),p)),x),FreeQ(List(a,b,m,n,p),x))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true)),Sinh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true)))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Sech(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Sech(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(FreeQ(List(a,b,p),x),RationalQ(m)),IntegerQ(n)),GreaterEqual(Plus(m,Times(CN1,n)),C0)),NonzeroQ(Plus(p,Times(CN1,C1)))))),
SetDelayed(Int(Times(Cosh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),Power(Csch(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Csch(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1))),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1)),Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,Plus(p,Times(CN1,C1))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Csch(Plus(a,Times(b,Power(x,n)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(FreeQ(List(a,b,p),x),RationalQ(m)),IntegerQ(n)),GreaterEqual(Plus(m,Times(CN1,n)),C0)),NonzeroQ(Plus(p,Times(CN1,C1)))))),
SetDelayed(Int(Times(Power(Sech(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),Power(Tanh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(q,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Sech(Plus(a,Times(b,Power(x,n)))),p),Power(Times(b,n,p),CN1)),Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,p),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Sech(Plus(a,Times(b,Power(x,n)))),p)),x))),And(And(And(And(FreeQ(List(a,b,p),x),RationalQ(m)),IntegerQ(n)),GreaterEqual(Plus(m,Times(CN1,n)),C0)),SameQ(q,C1)))),
SetDelayed(Int(Times(Power(Coth(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(q,true)),Power(Csch(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,n),C1)),Power(Csch(Plus(a,Times(b,Power(x,n)))),p),Power(Times(b,n,p),CN1)),Times(Plus(m,Times(CN1,n),C1),Power(Times(b,n,p),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Csch(Plus(a,Times(b,Power(x,n)))),p)),x))),And(And(And(And(FreeQ(List(a,b,p),x),RationalQ(m)),IntegerQ(n)),GreaterEqual(Plus(m,Times(CN1,n)),C0)),SameQ(q,C1)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(n,true)),Power(Sech(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(n,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(C2,n),Int(Times(Power(x,m),Power(Csch(Plus(Times(C2,a),Times(C2,b,x))),n)),x)),And(And(FreeQ(List(a,b),x),RationalQ(m)),IntegerQ(n)))),
SetDelayed(Int(Times(Power(Csch(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(n,true)),Power(Sech(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(u,Block(List(Set($s("ShowSteps"),False),Set($s("StepCounter"),Null)),Int(Times(Power(Csch(Plus(a,Times(b,x))),n),Power(Sech(Plus(a,Times(b,x))),p)),x)))),Plus(Dist(Power(x,m),u,x),Times(CN1,m,Int(Times(Power(x,Plus(m,Times(CN1,C1))),u),x)))),And(And(And(And(FreeQ(List(a,b),x),IntegersQ(n,p)),RationalQ(m)),Greater(m,C0)),Unequal(n,p)))),
SetDelayed(Int(Power($($p("F"),$p(v)),$p(p,true)),$p(x,SymbolHead)),
    Condition(Int(Power($($s("§f"),ExpandToSum(v,x)),p),x),And(And(And(FreeQ(p,x),HyperbolicQ($s("§f"))),BinomialQ(v,x)),Not(BinomialMatchQ(v,x))))),
SetDelayed(Int(Times(Power($($p("F"),$p(v)),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Times(Power(x,m),Power($($s("§f"),ExpandToSum(v,x)),p)),x),And(And(And(FreeQ(List(m,p),x),HyperbolicQ($s("§f"))),BinomialQ(v,x)),Not(BinomialMatchQ(v,x))))),
SetDelayed(Int(Power(Times(Power(Sinh(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,Times(CN1,C1D2))),Sqrt(Times(c,Power(Sinh(Plus(a,Times(b,Power(x,n)))),p))),Power(Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),CN1),Int(Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),PositiveIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Cosh(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,Times(CN1,C1D2))),Sqrt(Times(c,Power(Cosh(Plus(a,Times(b,Power(x,n)))),p))),Power(Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),CN1),Int(Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),PositiveIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Sinh(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,C1D2)),Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),Power(Sqrt(Times(c,Power(Sinh(Plus(a,Times(b,Power(x,n)))),p))),CN1),Int(Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),NegativeIntegerQ(Plus(q,Times(CN1,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Cosh(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,C1D2)),Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),Power(Sqrt(Times(c,Power(Cosh(Plus(a,Times(b,Power(x,n)))),p))),CN1),Int(Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),NegativeIntegerQ(Plus(q,Times(CN1,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Sinh(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(Times(c,Power(Sinh(Plus(a,Times(b,Power(x,n)))),p)),q),Power(Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),CN1),Int(Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),Not(IntegerQ(Plus(q,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Cosh(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(Times(c,Power(Cosh(Plus(a,Times(b,Power(x,n)))),p)),q),Power(Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),CN1),Int(Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),Not(IntegerQ(Plus(q,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Sinh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,Times(CN1,C1D2))),Sqrt(Times(c,Power(Sinh(Plus(a,Times(b,Power(x,n)))),p))),Power(Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),CN1),Int(Times(Power(x,m),Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),PositiveIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Cosh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,Times(CN1,C1D2))),Sqrt(Times(c,Power(Cosh(Plus(a,Times(b,Power(x,n)))),p))),Power(Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),CN1),Int(Times(Power(x,m),Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),PositiveIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Sinh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,C1D2)),Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),Power(Sqrt(Times(c,Power(Sinh(Plus(a,Times(b,Power(x,n)))),p))),CN1),Int(Times(Power(x,m),Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),NegativeIntegerQ(Plus(q,Times(CN1,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Cosh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,C1D2)),Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),Power(Sqrt(Times(c,Power(Cosh(Plus(a,Times(b,Power(x,n)))),p))),CN1),Int(Times(Power(x,m),Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),NegativeIntegerQ(Plus(q,Times(CN1,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Sinh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Times(c,Power(Sinh(Plus(a,Times(b,Power(x,n)))),p)),q),Power(Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),CN1),Int(Times(Power(x,m),Power(Sinh(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),Not(IntegerQ(Plus(q,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Cosh(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Times(c,Power(Cosh(Plus(a,Times(b,Power(x,n)))),p)),q),Power(Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(p,q)),CN1),Int(Times(Power(x,m),Power(Cosh(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),Not(IntegerQ(Plus(q,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Sech(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,Times(CN1,C1D2))),Sqrt(Times(c,Power(Sech(Plus(a,Times(b,Power(x,n)))),p))),Power(Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),CN1),Int(Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),PositiveIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Csch(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,Times(CN1,C1D2))),Sqrt(Times(c,Power(Csch(Plus(a,Times(b,Power(x,n)))),p))),Power(Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),CN1),Int(Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),PositiveIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Sech(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,C1D2)),Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),Power(Sqrt(Times(c,Power(Sech(Plus(a,Times(b,Power(x,n)))),p))),CN1),Int(Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),NegativeIntegerQ(Plus(q,Times(CN1,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Csch(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,C1D2)),Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),Power(Sqrt(Times(c,Power(Csch(Plus(a,Times(b,Power(x,n)))),p))),CN1),Int(Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),NegativeIntegerQ(Plus(q,Times(CN1,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Sech(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(Times(c,Power(Sech(Plus(a,Times(b,Power(x,n)))),p)),q),Power(Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(p,q)),CN1),Int(Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),Not(IntegerQ(Plus(q,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power(Csch(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Times(Power(Times(c,Power(Csch(Plus(a,Times(b,Power(x,n)))),p)),q),Power(Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(p,q)),CN1),Int(Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(p,q)),x)),And(And(FreeQ(List(a,b,c,n,p,q),x),Not(IntegerQ(Plus(q,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Sech(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,Times(CN1,C1D2))),Sqrt(Times(c,Power(Sech(Plus(a,Times(b,Power(x,n)))),p))),Power(Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),CN1),Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),PositiveIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Csch(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,Times(CN1,C1D2))),Sqrt(Times(c,Power(Csch(Plus(a,Times(b,Power(x,n)))),p))),Power(Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),CN1),Int(Times(Power(x,m),Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),PositiveIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Sech(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,C1D2)),Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),Power(Sqrt(Times(c,Power(Sech(Plus(a,Times(b,Power(x,n)))),p))),CN1),Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),NegativeIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Csch(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(c,Plus(q,C1D2)),Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(C1D2,p)),Power(Sqrt(Times(c,Power(Csch(Plus(a,Times(b,Power(x,n)))),p))),CN1),Int(Times(Power(x,m),Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),NegativeIntegerQ(Plus(q,C1D2))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Sech(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Times(c,Power(Sech(Plus(a,Times(b,Power(x,n)))),p)),q),Power(Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(p,q)),CN1),Int(Times(Power(x,m),Power(Sech(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),Not(IntegerQ(Plus(q,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Times(Power(Times(Power(Csch(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true))),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Times(c,Power(Csch(Plus(a,Times(b,Power(x,n)))),p)),q),Power(Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(p,q)),CN1),Int(Times(Power(x,m),Power(Csch(Plus(a,Times(b,Power(x,n)))),Times(p,q))),x)),And(And(FreeQ(List(a,b,c,m,n,p,q),x),Not(IntegerQ(Plus(q,C1D2)))),Not(OneQ(c,p))))),
SetDelayed(Int(Power(Times(Power($($p("F"),$p(v)),$p(p,true)),$p(c,true)),$p(q)),$p(x,SymbolHead)),
    Condition(Int(Power(Times(c,Power($($s("§f"),ExpandToSum(v,x)),p)),q),x),And(And(And(FreeQ(List(c,p,q),x),HyperbolicQ($s("§f"))),BinomialQ(v,x)),Not(BinomialMatchQ(v,x))))),
SetDelayed(Int(Times(Power(Times(Power($($p("F"),$p(v)),$p(p,true)),$p(c,true)),$p(q)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Times(Power(x,m),Power(Times(c,Power($($s("§f"),ExpandToSum(v,x)),p)),q)),x),And(And(And(FreeQ(List(c,m,p,q),x),HyperbolicQ($s("§f"))),BinomialQ(v,x)),Not(BinomialMatchQ(v,x)))))
  );
}
