package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules7 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,CN1)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),p),Power(Plus(c,Times(pd,x)),q),Power(x,CN1)),x),x,Power(x,pn))),And(And(And(And(FreeQ(List(a,b,c,pd,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(p,q)),Less(Less(CN1,p),C1)),Less(Less(CN1,q),C1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(pn,CN1))),Times(CN1,C1))),Power(Plus(a,Times(b,x)),p),Power(Plus(c,Times(pd,x)),q)),x),x,Power(x,pn))),And(And(FreeQ(List(a,b,c,pd,m,pn,p,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),PositiveIntegerQ(Simplify(Times(Plus(m,C1),Power(pn,CN1))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(m,C1),CN1),Subst(Int(Times(Power(Plus(a,Times(b,Power(x,Simplify(Times(pn,Power(Plus(m,C1),CN1)))))),p),Power(Plus(c,Times(pd,Power(x,Simplify(Times(pn,Power(Plus(m,C1),CN1)))))),q)),x),x,Power(x,Plus(m,C1)))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(m,C1))),PositiveIntegerQ(Simplify(Times(pn,Power(Plus(m,C1),CN1))))),RationalQ(p,q)),And(LessEqual(CN1,p),Less(p,C0))),And(LessEqual(CN1,q),Less(q,C0))))),
ISetDelayed(Int(Times(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_),Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),x_),CN1)),x_Symbol),
    Condition(Plus(Times(c,Log(x),Power(a,CN1)),Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(a,CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,pn))),CN1)),x))),And(FreeQ(List(a,b,c,pd,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_),Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(c,Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1)),And(And(And(FreeQ(List(a,b,c,pd,m,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),ZeroQ(Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_),Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn))),p),Plus(c,Times(pd,Power(x,pn)))),x),x),And(And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))))),PositiveIntegerQ(pn,p)),Or(Or(Or(Not(IntegerQ(Times(Plus(m,C1),Power(pn,CN1)))),Equal(p,C1)),Less(Less(Times(CN1,pn,Plus(p,C1)),m),CN1)),Less(m,Times(CN3,pn,C1D2,Plus(p,C1))))))),
ISetDelayed(Int(Times(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_),Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(c,Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))),Power(Times(a,Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Power(Plus(a,Times(b,Power(x,pn))),p)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,m,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))))),RationalQ(m,pn)),Less(m,CN1)),Greater(pn,C0)),Not(And(IntegerQ(p),Less(p,CN1)))))),
ISetDelayed(Int(Times(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_),Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Times(a,b,pn,Plus(p,C1)),CN1)),Times(CN1,Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))),Power(Times(a,b,pn,Plus(p,C1)),CN1),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1))),x))),And(And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))))),RationalQ(p)),Less(p,CN1)))),
ISetDelayed(Int(Times(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_),Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(pd,Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Times(b,Plus(m,Times(pn,Plus(p,C1)),C1)),CN1)),Times(CN1,Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))),Power(Times(b,Plus(m,Times(pn,Plus(p,C1)),C1)),CN1),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn))),p)),x))),And(And(And(FreeQ(List(a,b,c,pd,m,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))))),NonzeroQ(Plus(m,Times(pn,Plus(p,C1)),C1))))),
ISetDelayed(Int(Times(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_),Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn))),p),Plus(c,Times(pd,Power(x,pn)))),x),x),And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(a,pd,Plus(m,C1)),Times(CN1,b,c,Plus(m,Times(pn,Plus(p,C1)),C1))))))),
ISetDelayed(Int(Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),Plus(Times(Power(x_,pn_),pd_DEFAULT),c_),x_),CN1),x_Symbol),
    Condition(Plus(Times(Log(x),Power(Times(a,c),CN1)),Times(CN1,Sqr(b),Power(Times(a,Plus(Times(b,c),Times(CN1,a,pd))),CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,pn))),CN1)),x)),Times(Sqr(pd),Power(Times(c,Plus(Times(b,c),Times(CN1,a,pd))),CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Power(Plus(c,Times(pd,Power(x,pn))),CN1)),x))),And(FreeQ(List(a,b,c,pd,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),Plus(Times(Power(x_,pn_),pd_DEFAULT),c_)),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(b,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn))),CN1)),x)),Times(CN1,pd,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1),Int(Times(Power(x,m),Power(Plus(c,Times(pd,Power(x,pn))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn)),Less(Less(CN1,m),pn)))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),Plus(Times(Power(x_,pn_),pd_DEFAULT),c_)),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,a,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(a,Times(b,Power(x,pn))),CN1)),x)),Times(c,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(c,Times(pd,Power(x,pn))),CN1)),x))),And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),Or(Or(And(RationalQ(m,pn),LessEqual(LessEqual(pn,m),Plus(Times(C2,pn),Times(CN1,C1)))),ZeroQ(Plus(m,Times(CN1,pn)))),ZeroQ(Plus(m,Times(CN1,C2,pn),C1)))))),
ISetDelayed(Int(Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),Sqrt(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT)),x_),CN1),x_Symbol),
    Condition(Plus(Times(Power(a,CN1),Int(Power(Times(x,Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1),x)),Times(CN1,b,Power(a,CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Power(Times(Plus(a,Times(b,Power(x,pn))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x))),And(FreeQ(List(a,b,c,pd,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),Sqrt(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT))),CN1),Power(x_,m_)),x_Symbol),
    Condition(Module(List(Set(r,Numerator(Rt(Times(CN1,a,Power(b,CN1)),C2))),Set(s,Denominator(Rt(Times(CN1,a,Power(b,CN1)),C2)))),Plus(Times(r,Power(Times(C2,a),CN1),Int(Times(Power(x,m),Power(Times(Plus(r,Times(s,Power(x,Times(C1D2,pn)))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x)),Times(r,Power(Times(C2,a),CN1),Int(Times(Power(x,m),Power(Times(Plus(r,Times(CN1,s,Power(x,Times(C1D2,pn)))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),PositiveIntegerQ(m,Times(C1D2,pn))),Less(m,Times(C1D2,pn))),CoprimeQ(Plus(m,C1),pn)))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),Sqrt(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT))),CN1),Power(x_,m_)),x_Symbol),
    Condition(Module(List(Set(r,Numerator(Rt(Times(CN1,a,Power(b,CN1)),C2))),Set(s,Denominator(Rt(Times(CN1,a,Power(b,CN1)),C2)))),Plus(Times(s,Power(Times(C2,b),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1D2,pn))),Power(Times(Plus(r,Times(s,Power(x,Times(C1D2,pn)))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x)),Times(CN1,s,Power(Times(C2,b),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1D2,pn))),Power(Times(Plus(r,Times(CN1,s,Power(x,Times(C1D2,pn)))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x)))),And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),PositiveIntegerQ(m,Times(C1D2,pn))),And(LessEqual(Times(C1D2,pn),m),Less(m,pn))),CoprimeQ(Plus(m,C1),pn)))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),Sqrt(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT))),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(b,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(c,Times(pd,Power(x,pn))),CN1D2)),x)),Times(CN1,a,Power(b,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Times(Plus(a,Times(b,Power(x,pn))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),PositiveIntegerQ(pn,m)),Less(Less(pn,Plus(m,C1)),Times(C2,pn))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_)),Power(Times(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),x_),CN1)),x_Symbol),
    Condition(Plus(Times(c,Power(a,CN1),Int(Power(Times(x,Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1),x)),Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(a,CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Power(Times(Plus(a,Times(b,Power(x,pn))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x))),And(FreeQ(List(a,b,c,pd,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),CN1),Sqrt(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(pd,Power(b,CN1),Int(Times(Power(x,m),Power(Plus(c,Times(pd,Power(x,pn))),CN1D2)),x)),Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(b,CN1),Int(Times(Power(x,m),Power(Times(Plus(a,Times(b,Power(x,pn))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn)),Less(Less(CN1,m),Plus(pn,Times(CN1,C1)))))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(Times(Power(x_,pn_),b_DEFAULT),a_)),Sqrt(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_)),x_),CN1),x_Symbol),
    Condition(Times(CN2,Power(pn,CN1),Subst(Int(Power(Plus(a,Times(CN1,c,Sqr(x))),CN1),x),x,Times(Sqrt(Plus(a,Times(b,Power(x,pn)))),Power(Plus(c,Times(pd,Power(x,pn))),CN1D2)))),And(FreeQ(List(a,b,c,pd,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Times(Sqrt(Plus(Times(Power(x_,pn_),b_DEFAULT),a_)),Sqrt(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_))),CN1),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(b,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Sqrt(Plus(a,Times(b,Power(x,pn)))),Power(Plus(c,Times(pd,Power(x,pn))),CN1D2)),x)),Times(CN1,a,Power(b,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Times(Sqrt(Plus(a,Times(b,Power(x,pn)))),Sqrt(Plus(c,Times(pd,Power(x,pn))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),PositiveIntegerQ(pn,m)),Less(Less(pn,Plus(m,C1)),Times(C2,pn))),Not(And(Equal(pn,C2),SimplerSqrtQ(Times(CN1,b,Power(a,CN1)),Times(CN1,pd,Power(c,CN1)))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q)),x),x),And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),Or(And(And(IntegersQ(m,p,q),GreaterEqual(p,CN2)),Or(GreaterEqual(q,CN2),And(Equal(q,CN3),OddQ(m)))),PositiveIntegerQ(p,q))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(pn,CN1))),Times(CN1,C1))),Power(Plus(a,Times(b,x)),p),Power(Plus(c,Times(pd,x)),q)),x),x,Power(x,pn))),And(And(And(And(FreeQ(List(a,b,c,pd,m,pn,p,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(m,Times(pn,Plus(p,C1)),C1))),NegativeIntegerQ(Simplify(Times(Plus(m,C1),Power(pn,CN1))))),Or(Not(IntegerQ(p)),And(And(Not(PositiveIntegerQ(pn)),Not(NegativeIntegerQ(p))),Or(RationalQ(pn),Less(Less(C0,p),Times(CN1,Simplify(Times(Plus(m,C1),Power(pn,CN1))))))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(Plus(m,C1),CN1),Subst(Int(Times(Power(Plus(a,Times(b,Power(x,Simplify(Times(CN1,pn,Power(Plus(m,C1),CN1)))))),p),Power(Plus(c,Times(pd,Power(x,Simplify(Times(CN1,pn,Power(Plus(m,C1),CN1)))))),q),Power(x,CN2)),x),x,Power(x,Times(CN1,Plus(m,C1))))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(m,C1))),NegativeIntegerQ(Simplify(Plus(Times(pn,Power(Plus(m,C1),CN1)),C1)))),RationalQ(p,q)),And(LessEqual(CN1,p),Less(p,C0))),And(LessEqual(CN1,q),Less(q,C0))),Not(IntegerQ(pn))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(pn,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,x)),p),Power(Plus(c,Times(pd,x)),q)),x),x,Power(x,pn))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,m,p,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(m,Times(CN1,pn),C1))),RationalQ(pn)),Less(Less(CN1,pn),C1)),Not(And(NegativeIntegerQ(p),NegativeIntegerQ(Times(Plus(m,C1),Power(pn,CN1)))))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),pn))),Condition(Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,Times(pn,Power(g,CN1))))),p),Power(Plus(c,Times(pd,Power(x,Times(pn,Power(g,CN1))))),q)),x),x,Power(x,g))),Unequal(g,C1))),And(And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn,p,q)),Less(Less(C0,m),Plus(Times(C2,pn),Times(CN1,C1)))),And(LessEqual(CN1,p),Less(p,C0))),And(LessEqual(CN1,q),Less(q,C0))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Sqr(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT)),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Sqr(c),Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Power(Times(a,Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Simp(Plus(Times(b,Sqr(c),pn,Plus(p,C1)),Times(c,Plus(Times(b,c),Times(CN1,C2,a,pd)),Plus(m,C1)),Times(CN1,a,Plus(m,C1),Sqr(pd),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),p)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn)),Less(m,CN1)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Sqr(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Sqr(Plus(Times(b,c),Times(CN1,a,pd))),Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Times(a,Sqr(b),pn,Plus(p,C1)),CN1)),Times(Power(Times(a,Sqr(b),pn,Plus(p,C1)),CN1),Int(Times(Power(x,m),Simp(Plus(Times(Sqr(Plus(Times(b,c),Times(CN1,a,pd))),Plus(m,C1)),Times(Sqr(b),Sqr(c),pn,Plus(p,C1)),Times(a,b,Sqr(pd),pn,Plus(p,C1),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1))),x))),And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(p)),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Sqr(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT)),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Sqr(pd),Power(x,Plus(m,pn,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Times(b,Plus(m,Times(pn,Plus(p,C2)),C1)),CN1)),Times(Power(Times(b,Plus(m,Times(pn,Plus(p,C2)),C1)),CN1),Int(Times(Power(x,m),Simp(Plus(Times(b,Sqr(c),Plus(m,Times(pn,Plus(p,C2)),C1)),Times(pd,Plus(Times(Plus(Times(C2,b,c),Times(CN1,a,pd)),Plus(m,pn,C1)),Times(C2,b,c,pn,Plus(p,C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),p)),x))),And(And(FreeQ(List(a,b,c,pd,m,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(m,Times(pn,Plus(p,C2)),C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Times(b,pn,Plus(p,C1)),CN1)),Times(CN1,Power(Times(b,pn,Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(c,Plus(m,Times(CN1,pn),C1)),Times(pd,Plus(m,Times(pn,Plus(q,Times(CN1,C1))),C1),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1)))),x))),And(And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn,p,q)),Less(Less(C0,pn),Plus(m,C1))),Less(p,CN1)),Greater(q,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Plus(Times(c,b),Times(CN1,a,pd)),Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1))),Power(Times(a,b,pn,Plus(p,C1)),CN1)),Times(Power(Times(a,b,pn,Plus(p,C1)),CN1),Int(Times(Power(x,m),Simp(Plus(Times(c,Plus(Times(c,b,pn,Plus(p,C1)),Times(Plus(Times(c,b),Times(CN1,a,pd)),Plus(m,C1)))),Times(pd,Plus(Times(c,b,pn,Plus(p,C1)),Times(Plus(Times(c,b),Times(CN1,a,pd)),Plus(m,Times(pn,Plus(q,Times(CN1,C1))),C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C2)))),x))),And(And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(p,q)),Less(p,CN1)),Greater(q,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Times(a,pn,Plus(p,C1)),CN1)),Times(Power(Times(a,pn,Plus(p,C1)),CN1),Int(Times(Power(x,m),Simp(Plus(Times(c,Plus(m,Times(pn,Plus(p,C1)),C1)),Times(pd,Plus(m,Times(pn,Plus(p,q,C1)),C1),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1)))),x))),And(And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(p,q)),Less(p,CN1)),And(Less(C0,q),LessEqual(q,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,a,Power(x,Plus(m,Times(CN1,C2,pn),C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,C1)),Power(Times(b,pn,Plus(Times(b,c),Times(CN1,a,pd)),Plus(p,C1)),CN1)),Times(Power(Times(b,pn,Plus(Times(b,c),Times(CN1,a,pd)),Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Simp(Plus(Times(a,c,Plus(m,Times(CN1,C2,pn),C1)),Times(Plus(Times(a,pd,Plus(m,Times(CN1,pn),Times(pn,q),C1)),Times(b,c,pn,Plus(p,C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),q)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn,p)),Less(Less(C0,Times(C2,pn)),Plus(m,C1))),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,C1)),Power(Times(pn,Plus(Times(b,c),Times(CN1,a,pd)),Plus(p,C1)),CN1)),Times(CN1,Power(Times(pn,Plus(Times(b,c),Times(CN1,a,pd)),Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(c,Plus(m,Times(CN1,pn),C1)),Times(pd,Plus(m,Times(pn,Plus(p,q,C1)),C1),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),q)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn,p)),And(Less(Less(C0,pn),Plus(m,C1)),LessEqual(Plus(m,C1),Times(C2,pn)))),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Plus(m,C1),CN1)),Times(CN1,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,pn)),Simp(Plus(Times(pn,Plus(Times(b,c,p),Times(a,pd,q))),Times(b,pd,pn,Plus(p,q),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,Times(CN1,C1))),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1)))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn,p,q)),Less(m,CN1)),Greater(pn,C0)),Greater(p,C0)),Greater(q,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(c,Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1))),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Power(Times(a,Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Simp(Plus(Times(c,Plus(Times(c,b),Times(CN1,a,pd)),Plus(m,C1)),Times(c,pn,Plus(Times(b,c,Plus(p,C1)),Times(a,pd,Plus(q,Times(CN1,C1))))),Times(pd,Plus(Times(Plus(Times(c,b),Times(CN1,a,pd)),Plus(m,C1)),Times(c,b,pn,Plus(p,q))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C2)))),x))),And(And(And(And(And(FreeQ(List(a,b,c,pd,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn,q)),Less(m,CN1)),Greater(pn,C0)),Greater(q,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Power(Times(a,Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Simp(Plus(Times(c,b,Plus(m,C1)),Times(pn,Plus(Times(b,c,Plus(p,C1)),Times(a,pd,q))),Times(pd,Plus(Times(b,Plus(m,C1)),Times(b,pn,Plus(p,q,C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1)))),x))),And(And(And(And(And(FreeQ(List(a,b,c,pd,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn,q)),Less(m,CN1)),Greater(pn,C0)),And(Less(C0,q),LessEqual(q,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Plus(m,Times(pn,Plus(p,q)),C1),CN1)),Times(pn,Power(Plus(m,Times(pn,Plus(p,q)),C1),CN1),Int(Times(Power(x,m),Simp(Plus(Times(a,c,Plus(p,q)),Times(Plus(Times(q,Plus(Times(b,c),Times(CN1,a,pd))),Times(a,pd,Plus(p,q))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,Times(CN1,C1))),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1)))),x))),And(And(And(And(FreeQ(List(a,b,c,pd,m,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(p,q)),Greater(p,C0)),Greater(q,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(pd,Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1))),Power(Times(b,Plus(m,Times(pn,Plus(p,q)),C1)),CN1)),Times(Power(Times(b,Plus(m,Times(pn,Plus(p,q)),C1)),CN1),Int(Times(Power(x,m),Simp(Plus(Times(c,Plus(Times(Plus(Times(c,b),Times(CN1,a,pd)),Plus(m,C1)),Times(c,b,pn,Plus(p,q)))),Times(Plus(Times(pd,Plus(Times(c,b),Times(CN1,a,pd)),Plus(m,C1)),Times(pd,pn,Plus(q,Times(CN1,C1)),Plus(Times(b,c),Times(CN1,a,pd))),Times(c,b,pd,pn,Plus(p,q))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C2)))),x))),And(And(And(FreeQ(List(a,b,c,pd,m,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(q)),Greater(q,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,b,Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,C1)),Power(Times(a,pn,Plus(Times(b,c),Times(CN1,a,pd)),Plus(p,C1)),CN1)),Times(Power(Times(a,pn,Plus(Times(b,c),Times(CN1,a,pd)),Plus(p,C1)),CN1),Int(Times(Power(x,m),Simp(Plus(Times(c,b,Plus(m,C1)),Times(pn,Plus(Times(b,c),Times(CN1,a,pd)),Plus(p,C1)),Times(pd,b,Plus(m,Times(pn,Plus(p,q,C2)),C1),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),q)),x))),And(And(And(FreeQ(List(a,b,c,pd,m,pn,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(p)),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Times(b,Plus(m,Times(pn,Plus(p,q)),C1)),CN1)),Times(CN1,Power(Times(b,Plus(m,Times(pn,Plus(p,q)),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(a,c,Plus(m,Times(CN1,pn),C1)),Times(Plus(Times(a,pd,Plus(m,Times(CN1,pn),C1)),Times(CN1,pn,q,Plus(Times(b,c),Times(CN1,a,pd)))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,Times(CN1,C1)))),x))),And(And(And(And(FreeQ(List(a,b,c,pd,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn,q)),Less(Less(C0,pn),Plus(m,C1))),Greater(q,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C2,pn),C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,C1)),Power(Times(b,pd,Plus(m,Times(pn,Plus(p,q)),C1)),CN1)),Times(CN1,Power(Times(b,pd,Plus(m,Times(pn,Plus(p,q)),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Simp(Plus(Times(a,c,Plus(m,Times(CN1,C2,pn),C1)),Times(Plus(Times(a,pd,Plus(m,Times(pn,Plus(q,Times(CN1,C1))),C1)),Times(b,c,Plus(m,Times(pn,Plus(p,Times(CN1,C1))),C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q)),x))),And(And(And(FreeQ(List(a,b,c,pd,p,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn)),Less(Less(C0,Times(C2,pn)),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),Plus(p,C1)),Power(Plus(c,Times(pd,Power(x,pn))),Plus(q,C1)),Power(Times(a,c,Plus(m,C1)),CN1)),Times(CN1,Power(Times(a,c,Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Simp(Plus(Times(Plus(Times(b,c),Times(a,pd)),Plus(m,pn,C1)),Times(pn,Plus(Times(b,c,p),Times(a,pd,q))),Times(b,pd,Plus(m,Times(pn,Plus(p,q,C2)),C1),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,p,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),RationalQ(m,pn)),Less(m,CN1)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Times(Plus(m,C1),Power(Plus(C1,Times(b,Power(x,pn),Power(a,CN1))),p),Power(Plus(C1,Times(pd,Power(x,pn),Power(c,CN1))),q)),CN1),AppellF1(Times(Plus(m,C1),Power(pn,CN1)),Times(CN1,p),Times(CN1,q),Plus(C1,Times(Plus(m,C1),Power(pn,CN1))),Times(CN1,b,Power(x,pn),Power(a,CN1)),Times(CN1,pd,Power(x,pn),Power(c,CN1)))),And(And(And(FreeQ(List(a,b,c,pd,m,pn,p,q),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(m,C1))),NonzeroQ(Plus(m,Times(CN1,pn),C1))))),
ISetDelayed(Int(Times(Power(Times(Power(Plus(Times(Power(x_,pn_DEFAULT),pd_DEFAULT),c_),s_),f_DEFAULT),q_),Power(Times(Power(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),r_DEFAULT),pe_DEFAULT),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(pe,Power(Plus(a,Times(b,Power(x,pn))),r)),p),Power(Times(f,Power(Plus(c,Times(pd,Power(x,pn))),s)),q),Power(Times(Power(Plus(a,Times(b,Power(x,pn))),Times(p,r)),Power(Plus(c,Times(pd,Power(x,pn))),Times(q,s))),CN1),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn))),Times(p,r)),Power(Plus(c,Times(pd,Power(x,pn))),Times(q,s))),x)),FreeQ(List(a,b,c,pd,pe,f,m,pn,p,q,r,s),x))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(v_,pn_),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(w_,pn_),pd_DEFAULT),c_DEFAULT),q_DEFAULT),Power(u_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(u,m),Power(Times(Coefficient(v,x,C1),Power(v,m)),CN1),Subst(Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q)),x),x,v)),And(And(FreeQ(List(a,b,c,pd,m,pn,p,q),x),LinearPairQ(u,v,x)),ZeroQ(Plus(v,Times(CN1,w)))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,r_DEFAULT),pd_DEFAULT),c_),q_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(pd,Times(c,Power(x,pn))),q),Power(Power(x,Times(pn,q)),CN1)),x),And(And(And(FreeQ(List(a,b,c,pd,pn,p),x),ZeroQ(Plus(pn,r))),PosQ(pn)),IntegerQ(q)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,r_DEFAULT),pd_DEFAULT),c_),q_)),x_Symbol),
    Condition(Times(CN1,Subst(Int(Times(Power(Plus(b,Times(a,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Power(x,Plus(Times(pn,p),C2)),CN1)),x),x,Power(x,CN1))),And(And(And(And(FreeQ(List(a,b,c,pd,q),x),ZeroQ(Plus(pn,r))),PosQ(pn)),Not(IntegerQ(q))),IntegersQ(pn,p)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,r_DEFAULT),pd_DEFAULT),c_),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(x,Times(pn,q)),Power(Plus(c,Times(pd,Power(Power(x,pn),CN1))),q),Power(Power(Plus(pd,Times(c,Power(x,pn))),q),CN1),Int(Times(Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(pd,Times(c,Power(x,pn))),q),Power(Power(x,Times(pn,q)),CN1)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pn,p,q),x),ZeroQ(Plus(pn,r))),PosQ(pn)),Not(IntegerQ(q))),Not(IntegersQ(pn,p))))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,r_DEFAULT),pd_DEFAULT),c_),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,Plus(m,Times(CN1,pn,q))),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(pd,Times(c,Power(x,pn))),q)),x),And(And(And(FreeQ(List(a,b,c,pd,m,pn,p),x),ZeroQ(Plus(pn,r))),PosQ(pn)),IntegerQ(q)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),p_DEFAULT),Power(Plus(Times(Power(x_,r_DEFAULT),pd_DEFAULT),c_),q_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Subst(Int(Times(Power(Plus(b,Times(a,Power(x,pn))),p),Power(Plus(c,Times(pd,Power(x,pn))),q),Power(Power(x,Plus(m,Times(pn,p),C2)),CN1)),x),x,Power(x,CN1))),And(And(And(And(FreeQ(List(a,b,c,pd,q),x),ZeroQ(Plus(pn,r))),PosQ(pn)),Not(IntegerQ(q))),IntegersQ(m,pn,p)))),
ISetDelayed(Int(Times(Power(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),p_),Power(Plus(Times(Power(x_,r_DEFAULT),pd_DEFAULT),c_),q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Times(Power(x,Times(pn,q)),Power(Plus(c,Times(pd,Power(Power(x,pn),CN1))),q),Power(Power(Plus(pd,Times(c,Power(x,pn))),q),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn,q))),Power(Plus(a,Times(b,Power(x,pn))),p),Power(Plus(pd,Times(c,Power(x,pn))),q)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,m,pn,p,q),x),ZeroQ(Plus(pn,r))),PosQ(pn)),Not(IntegerQ(q))),Not(IntegersQ(m,pn,p))))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Power(x_,pn_DEFAULT),pd_DEFAULT),c_DEFAULT),CN1),pe_DEFAULT),p_),u_DEFAULT),x_Symbol),
    Condition(Times(Power(Times(b,pe,Power(pd,CN1)),p),Int(u,x)),And(FreeQ(List(a,b,c,pd,pe,pn,p),x),ZeroQ(Plus(Times(b,c),Times(CN1,a,pd)))))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Power(x_,pn_DEFAULT),pd_DEFAULT),c_DEFAULT),CN1),pe_DEFAULT),p_),u_DEFAULT),x_Symbol),
    Condition(Int(Times(u,Power(Times(pe,Plus(a,Times(b,Power(x,pn)))),p),Power(Power(Plus(c,Times(pd,Power(x,pn))),p),CN1)),x),And(And(FreeQ(List(a,b,c,pd,pe,pn,p),x),PositiveQ(Times(b,pd,pe))),PositiveQ(Plus(c,Times(CN1,a,pd,Power(b,CN1))))))),
ISetDelayed(Int(Power(Times(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Power(x_,pn_DEFAULT),pd_DEFAULT),c_DEFAULT),CN1),pe_DEFAULT),p_),x_Symbol),
    Condition(Module(List(Set(q,Denominator(p))),Times(q,pe,Plus(Times(b,c),Times(CN1,a,pd)),Power(pn,CN1),Subst(Int(Times(Power(x,Plus(Times(q,Plus(p,C1)),Times(CN1,C1))),Power(Plus(Times(CN1,a,pe),Times(c,Power(x,q))),Plus(Power(pn,CN1),Times(CN1,C1))),Power(Power(Plus(Times(b,pe),Times(CN1,pd,Power(x,q))),Plus(Power(pn,CN1),C1)),CN1)),x),x,Power(Times(pe,Plus(a,Times(b,Power(x,pn))),Power(Plus(c,Times(pd,Power(x,pn))),CN1)),Power(q,CN1))))),And(And(FreeQ(List(a,b,c,pd,pe),x),FractionQ(p)),IntegerQ(Power(pn,CN1))))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Power(x_,pn_DEFAULT),pd_DEFAULT),c_DEFAULT),CN1),pe_DEFAULT),p_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Denominator(p))),Times(q,pe,Plus(Times(b,c),Times(CN1,a,pd)),Power(pn,CN1),Subst(Int(Times(Power(x,Plus(Times(q,Plus(p,C1)),Times(CN1,C1))),Power(Plus(Times(CN1,a,pe),Times(c,Power(x,q))),Plus(Simplify(Times(Plus(m,C1),Power(pn,CN1))),Times(CN1,C1))),Power(Power(Plus(Times(b,pe),Times(CN1,pd,Power(x,q))),Plus(Simplify(Times(Plus(m,C1),Power(pn,CN1))),C1)),CN1)),x),x,Power(Times(pe,Plus(a,Times(b,Power(x,pn))),Power(Plus(c,Times(pd,Power(x,pn))),CN1)),Power(q,CN1))))),And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),FractionQ(p)),IntegerQ(Simplify(Times(Plus(m,C1),Power(pn,CN1))))))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Power(x_,pn_DEFAULT),pd_DEFAULT),c_DEFAULT),CN1),pe_DEFAULT),p_),Power(u_,r_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Denominator(p))),Times(q,pe,Plus(Times(b,c),Times(CN1,a,pd)),Power(pn,CN1),Subst(Int(SimplifyIntegrand(Times(Power(x,Plus(Times(q,Plus(p,C1)),Times(CN1,C1))),Power(Plus(Times(CN1,a,pe),Times(c,Power(x,q))),Plus(Power(pn,CN1),Times(CN1,C1))),Power(Power(Plus(Times(b,pe),Times(CN1,pd,Power(x,q))),Plus(Power(pn,CN1),C1)),CN1),Power(ReplaceAll(u,Rule(x,Times(Power(Plus(Times(CN1,a,pe),Times(c,Power(x,q))),Power(pn,CN1)),Power(Power(Plus(Times(b,pe),Times(CN1,pd,Power(x,q))),Power(pn,CN1)),CN1)))),r)),x),x),x,Power(Times(pe,Plus(a,Times(b,Power(x,pn))),Power(Plus(c,Times(pd,Power(x,pn))),CN1)),Power(q,CN1))))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),PolynomialQ(u,x)),FractionQ(p)),IntegerQ(Power(pn,CN1))),IntegerQ(r)))),
ISetDelayed(Int(Times(Power(Times(Plus(Times(Power(x_,pn_DEFAULT),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Power(x_,pn_DEFAULT),pd_DEFAULT),c_DEFAULT),CN1),pe_DEFAULT),p_),Power(u_,r_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Denominator(p))),Times(q,pe,Plus(Times(b,c),Times(CN1,a,pd)),Power(pn,CN1),Subst(Int(SimplifyIntegrand(Times(Power(x,Plus(Times(q,Plus(p,C1)),Times(CN1,C1))),Power(Plus(Times(CN1,a,pe),Times(c,Power(x,q))),Plus(Times(Plus(m,C1),Power(pn,CN1)),Times(CN1,C1))),Power(Power(Plus(Times(b,pe),Times(CN1,pd,Power(x,q))),Plus(Times(Plus(m,C1),Power(pn,CN1)),C1)),CN1),Power(ReplaceAll(u,Rule(x,Times(Power(Plus(Times(CN1,a,pe),Times(c,Power(x,q))),Power(pn,CN1)),Power(Power(Plus(Times(b,pe),Times(CN1,pd,Power(x,q))),Power(pn,CN1)),CN1)))),r)),x),x),x,Power(Times(pe,Plus(a,Times(b,Power(x,pn))),Power(Plus(c,Times(pd,Power(x,pn))),CN1)),Power(q,CN1))))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),PolynomialQ(u,x)),FractionQ(p)),IntegerQ(Power(pn,CN1))),IntegersQ(m,r)))),
ISetDelayed(Int(Times(Power(u_,p_DEFAULT),Power(v_,q_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(ExpandToSum(u,x),p),Power(ExpandToSum(v,x),q)),x),And(And(And(FreeQ(List(m,p,q),x),BinomialQ(List(u,v),x)),ZeroQ(Plus(BinomialDegree(u,x),Times(CN1,BinomialDegree(v,x))))),Not(BinomialMatchQ(List(u,v),x)))))
  );
}
