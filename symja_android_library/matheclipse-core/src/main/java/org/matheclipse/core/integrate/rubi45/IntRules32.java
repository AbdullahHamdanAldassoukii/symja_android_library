package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules32 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(u_,Power(Plus(Times(e_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Times(f_DEFAULT,Sqrt(Plus(c_DEFAULT,Times(d_DEFAULT,x_))))),CN1)),x_Symbol),
    Condition(Plus(Times(c,Power(Times(e,Plus(Times(b,c),Times(CN1,a,d))),CN1),Int(Times(u,Sqrt(Plus(a,Times(b,x))),Power(x,CN1)),x)),Times(CN1,a,Power(Times(f,Plus(Times(b,c),Times(CN1,a,d))),CN1),Int(Times(u,Sqrt(Plus(c,Times(d,x))),Power(x,CN1)),x))),And(And(FreeQ(List(a,b,c,d,e,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))),ZeroQ(Plus(Times(a,Sqr(e)),Times(CN1,c,Sqr(f))))))),
ISetDelayed(Int(Times(u_,Power(Plus(Times(e_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Times(f_DEFAULT,Sqrt(Plus(c_DEFAULT,Times(d_DEFAULT,x_))))),CN1)),x_Symbol),
    Condition(Plus(Times(CN1,d,Power(Times(e,Plus(Times(b,c),Times(CN1,a,d))),CN1),Int(Times(u,Sqrt(Plus(a,Times(b,x)))),x)),Times(b,Power(Times(f,Plus(Times(b,c),Times(CN1,a,d))),CN1),Int(Times(u,Sqrt(Plus(c,Times(d,x)))),x))),And(And(FreeQ(List(a,b,c,d,e,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))),ZeroQ(Plus(Times(b,Sqr(e)),Times(CN1,d,Sqr(f))))))),
ISetDelayed(Int(Times(u_,Power(Plus(Times(e_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Times(f_DEFAULT,Sqrt(Plus(c_DEFAULT,Times(d_DEFAULT,x_))))),CN1)),x_Symbol),
    Condition(Plus(Times(e,Int(Times(u,Sqrt(Plus(a,Times(b,x))),Power(Plus(Times(a,Sqr(e)),Times(CN1,c,Sqr(f)),Times(Plus(Times(b,Sqr(e)),Times(CN1,d,Sqr(f))),x)),CN1)),x)),Times(CN1,f,Int(Times(u,Sqrt(Plus(c,Times(d,x))),Power(Plus(Times(a,Sqr(e)),Times(CN1,c,Sqr(f)),Times(Plus(Times(b,Sqr(e)),Times(CN1,d,Sqr(f))),x)),CN1)),x))),And(And(FreeQ(List(a,b,c,d,e,f),x),NonzeroQ(Plus(Times(a,Sqr(e)),Times(CN1,c,Sqr(f))))),NonzeroQ(Plus(Times(b,Sqr(e)),Times(CN1,d,Sqr(f))))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Plus(Times(d_DEFAULT,Power(x_,n_DEFAULT)),Times(c_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,Power(x_,p_DEFAULT)))))),CN1)),x_Symbol),
    Condition(Plus(Times(CN1,b,Power(Times(a,d),CN1),Int(Times(u,Power(x,n)),x)),Times(Power(Times(a,c),CN1),Int(Times(u,Sqrt(Plus(a,Times(b,Power(x,Times(C2,n)))))),x))),And(And(FreeQ(List(a,b,c,d,n),x),ZeroQ(Plus(p,Times(CN1,C2,n)))),ZeroQ(Plus(Times(b,Sqr(c)),Times(CN1,Sqr(d))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(Times(d_DEFAULT,Power(x_,n_DEFAULT)),Times(c_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,Power(x_,p_DEFAULT)))))),CN1)),x_Symbol),
    Condition(Plus(Times(CN1,d,Int(Times(Power(x,Plus(m,n)),Power(Plus(Times(a,Sqr(c)),Times(Plus(Times(b,Sqr(c)),Times(CN1,Sqr(d))),Power(x,Times(C2,n)))),CN1)),x)),Times(c,Int(Times(Power(x,m),Sqrt(Plus(a,Times(b,Power(x,Times(C2,n))))),Power(Plus(Times(a,Sqr(c)),Times(Plus(Times(b,Sqr(c)),Times(CN1,Sqr(d))),Power(x,Times(C2,n)))),CN1)),x))),And(And(FreeQ(List(a,b,c,d,m,n),x),ZeroQ(Plus(p,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(b,Sqr(c)),Times(CN1,Sqr(d))))))),
ISetDelayed(Int(Times(Plus($p("A"),Times($p("B",true),Sqr(x_))),Power(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Sqrt(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))))),CN1)),x_Symbol),
    Condition(Times($s("A"),Subst(Int(Power(Plus(d,Times(CN1,Plus(Times(b,d),Times(CN1,C2,a,e)),Sqr(x))),CN1),x),x,Times(x,Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1D2)))),And(And(FreeQ(List(a,b,c,d,e,$s("A"),$s("B")),x),ZeroQ(Plus(Times($s("B"),d),Times($s("A"),e)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,a,Sqr(e))))))),
ISetDelayed(Int(Times(Plus($p("A"),Times($p("B",true),Sqr(x_))),Power(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Sqrt(Plus(a_,Times(c_DEFAULT,Power(x_,C4))))),CN1)),x_Symbol),
    Condition(Times($s("A"),Subst(Int(Power(Plus(d,Times(C2,a,e,Sqr(x))),CN1),x),x,Times(x,Power(Plus(a,Times(c,Power(x,C4))),CN1D2)))),And(And(FreeQ(List(a,c,d,e,$s("A"),$s("B")),x),ZeroQ(Plus(Times($s("B"),d),Times($s("A"),e)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,a,Sqr(e))))))),
ISetDelayed(Int(Times(Plus($p("A"),Times($p("B",true),Power(x_,C4))),Power(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_)),Times(f_DEFAULT,Power(x_,C4))),Sqrt(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))))),CN1)),x_Symbol),
    Condition(Times($s("A"),Subst(Int(Power(Plus(d,Times(CN1,Plus(Times(b,d),Times(CN1,a,e)),Sqr(x))),CN1),x),x,Times(x,Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1D2)))),And(And(FreeQ(List(a,b,c,d,e,f,$s("A"),$s("B")),x),ZeroQ(Plus(Times(c,d),Times(CN1,a,f)))),ZeroQ(Plus(Times(a,$s("B")),Times($s("A"),c)))))),
ISetDelayed(Int(Times(Plus($p("A"),Times($p("B",true),Power(x_,C4))),Power(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_)),Times(f_DEFAULT,Power(x_,C4))),Sqrt(Plus(a_,Times(c_DEFAULT,Power(x_,C4))))),CN1)),x_Symbol),
    Condition(Times($s("A"),Subst(Int(Power(Plus(d,Times(a,e,Sqr(x))),CN1),x),x,Times(x,Power(Plus(a,Times(c,Power(x,C4))),CN1D2)))),And(And(FreeQ(List(a,c,d,e,f,$s("A"),$s("B")),x),ZeroQ(Plus(Times(c,d),Times(CN1,a,f)))),ZeroQ(Plus(Times(a,$s("B")),Times($s("A"),c)))))),
ISetDelayed(Int(Times(Plus($p("A"),Times($p("B",true),Power(x_,C4))),Power(Times(Plus(d_,Times(f_DEFAULT,Power(x_,C4))),Sqrt(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))))),CN1)),x_Symbol),
    Condition(Times($s("A"),Subst(Int(Power(Plus(d,Times(CN1,b,d,Sqr(x))),CN1),x),x,Times(x,Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,C4))),CN1D2)))),And(And(FreeQ(List(a,b,c,d,f,$s("A"),$s("B")),x),ZeroQ(Plus(Times(c,d),Times(CN1,a,f)))),ZeroQ(Plus(Times(a,$s("B")),Times($s("A"),c)))))),
ISetDelayed(Int(Power(Plus(g_DEFAULT,Times(h_DEFAULT,Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))))),n_))),p_DEFAULT),x_Symbol),
    Condition(Times(C2,Subst(Int(Times(Power(Plus(g,Times(h,Power(x,n))),p),Plus(Times(Sqr(d),e),Times(CN1,Plus(Times(b,d),Times(CN1,a,e)),Sqr(f)),Times(CN1,Plus(Times(C2,d,e),Times(CN1,b,Sqr(f))),x),Times(e,Sqr(x))),Power(Plus(Times(CN2,d,e),Times(b,Sqr(f)),Times(C2,e,x)),CN2)),x),x,Plus(d,Times(e,x),Times(f,Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))))))),And(And(FreeQ(List(a,b,c,d,e,f,g,h,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),IntegerQ(p)))),
ISetDelayed(Int(Power(Plus(g_DEFAULT,Times(h_DEFAULT,Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_,Times(c_DEFAULT,Sqr(x_)))))),n_))),p_DEFAULT),x_Symbol),
    Condition(Times(Power(Times(C2,e),CN1),Subst(Int(Times(Power(Plus(g,Times(h,Power(x,n))),p),Plus(Sqr(d),Times(a,Sqr(f)),Times(CN1,C2,d,x),Sqr(x)),Power(Plus(d,Times(CN1,x)),CN2)),x),x,Plus(d,Times(e,x),Times(f,Sqrt(Plus(a,Times(c,Sqr(x)))))))),And(And(FreeQ(List(a,c,d,e,f,g,h,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),IntegerQ(p)))),
ISetDelayed(Int(Power(Plus(g_DEFAULT,Times(h_DEFAULT,Power(Plus(u_,$($p(f,$s("Sqrt"),true),v_)),n_))),p_DEFAULT),x_Symbol),
    Condition(Int(Power(Plus(g,Times(h,Power(Plus(ExpandToSum(u,x),Times(f,Sqrt(ExpandToSum(v,x)))),n))),p),x),And(And(And(And(And(FreeQ(List(f,g,h,n),x),LinearQ(u,x)),QuadraticQ(v,x)),Not(And(LinearMatchQ(u,x),QuadraticMatchQ(v,x)))),ZeroQ(Plus(Sqr(Coefficient(u,x,C1)),Times(CN1,Coefficient(v,x,C2),Sqr(f))))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(g_DEFAULT,Times(h_DEFAULT,x_)),m_DEFAULT),Power(Plus(Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(c_DEFAULT,Sqr(x_)))))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(Power(C2,Plus(m,C1)),Power(e,Plus(m,C1))),CN1),Subst(Int(Times(Power(x,Plus(n,Times(CN1,m),Times(CN1,C2))),Plus(Times(a,Sqr(f)),Sqr(x)),Power(Plus(Times(CN1,a,Sqr(f),h),Times(C2,e,g,x),Times(h,Sqr(x))),m)),x),x,Plus(Times(e,x),Times(f,Sqrt(Plus(a,Times(c,Sqr(x)))))))),And(And(FreeQ(List(a,c,e,f,g,h,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(x_,p_DEFAULT),Power(Plus(g_,Times(i_DEFAULT,Sqr(x_))),m_DEFAULT),Power(Plus(Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_,Times(c_DEFAULT,Sqr(x_)))))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(Power(C2,Plus(Times(C2,m),p,C1)),Power(e,Plus(p,C1)),Power(f,Times(C2,m))),CN1),Power(Times(i,Power(c,CN1)),m),Subst(Int(Times(Power(x,Plus(n,Times(CN1,C2,m),Times(CN1,p),Times(CN1,C2))),Power(Plus(Times(CN1,a,Sqr(f)),Sqr(x)),p),Power(Plus(Times(a,Sqr(f)),Sqr(x)),Plus(Times(C2,m),C1))),x),x,Plus(Times(e,x),Times(f,Sqrt(Plus(a,Times(c,Sqr(x)))))))),And(And(And(And(FreeQ(List(a,c,e,f,g,i,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),ZeroQ(Plus(Times(c,g),Times(CN1,a,i)))),IntegersQ(p,Times(C2,m))),Or(IntegerQ(m),PositiveQ(Times(i,Power(c,CN1))))))),
ISetDelayed(Int(Times(Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))))),n_DEFAULT),Power(Plus(g_DEFAULT,Times(h_DEFAULT,x_),Times(i_DEFAULT,Sqr(x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(C2,Power(Power(f,Times(C2,m)),CN1),Power(Times(i,Power(c,CN1)),m),Subst(Int(Times(Power(x,n),Power(Plus(Times(Sqr(d),e),Times(CN1,Plus(Times(b,d),Times(CN1,a,e)),Sqr(f)),Times(CN1,Plus(Times(C2,d,e),Times(CN1,b,Sqr(f))),x),Times(e,Sqr(x))),Plus(Times(C2,m),C1)),Power(Power(Plus(Times(CN2,d,e),Times(b,Sqr(f)),Times(C2,e,x)),Times(C2,Plus(m,C1))),CN1)),x),x,Plus(d,Times(e,x),Times(f,Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))))))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,g,h,i,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),ZeroQ(Plus(Times(c,g),Times(CN1,a,i)))),ZeroQ(Plus(Times(c,h),Times(CN1,b,i)))),IntegerQ(Times(C2,m))),Or(IntegerQ(m),PositiveQ(Times(i,Power(c,CN1))))))),
ISetDelayed(Int(Times(Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_,Times(c_DEFAULT,Sqr(x_)))))),n_DEFAULT),Power(Plus(g_,Times(i_DEFAULT,Sqr(x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(Power(C2,Plus(Times(C2,m),C1)),e,Power(f,Times(C2,m))),CN1),Power(Times(i,Power(c,CN1)),m),Subst(Int(Times(Power(x,n),Power(Plus(Sqr(d),Times(a,Sqr(f)),Times(CN1,C2,d,x),Sqr(x)),Plus(Times(C2,m),C1)),Power(Power(Plus(Times(CN1,d),x),Times(C2,Plus(m,C1))),CN1)),x),x,Plus(d,Times(e,x),Times(f,Sqrt(Plus(a,Times(c,Sqr(x)))))))),And(And(And(And(FreeQ(List(a,c,d,e,f,g,i,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),ZeroQ(Plus(Times(c,g),Times(CN1,a,i)))),IntegerQ(Times(C2,m))),Or(IntegerQ(m),PositiveQ(Times(i,Power(c,CN1))))))),
ISetDelayed(Int(Times(Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))))),n_DEFAULT),Power(Plus(g_DEFAULT,Times(h_DEFAULT,x_),Times(i_DEFAULT,Sqr(x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(i,Power(c,CN1)),Plus(m,Times(CN1,C1D2))),Sqrt(Plus(g,Times(h,x),Times(i,Sqr(x)))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),CN1D2),Int(Times(Power(Plus(a,Times(b,x),Times(c,Sqr(x))),m),Power(Plus(d,Times(e,x),Times(f,Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))))),n)),x)),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,g,h,i,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),ZeroQ(Plus(Times(c,g),Times(CN1,a,i)))),ZeroQ(Plus(Times(c,h),Times(CN1,b,i)))),PositiveIntegerQ(Plus(m,C1D2))),Not(PositiveQ(Times(i,Power(c,CN1))))))),
ISetDelayed(Int(Times(Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_,Times(c_DEFAULT,Sqr(x_)))))),n_DEFAULT),Power(Plus(g_,Times(i_DEFAULT,Sqr(x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(i,Power(c,CN1)),Plus(m,Times(CN1,C1D2))),Sqrt(Plus(g,Times(i,Sqr(x)))),Power(Plus(a,Times(c,Sqr(x))),CN1D2),Int(Times(Power(Plus(a,Times(c,Sqr(x))),m),Power(Plus(d,Times(e,x),Times(f,Sqrt(Plus(a,Times(c,Sqr(x)))))),n)),x)),And(And(And(And(FreeQ(List(a,c,d,e,f,g,i,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),ZeroQ(Plus(Times(c,g),Times(CN1,a,i)))),PositiveIntegerQ(Plus(m,C1D2))),Not(PositiveQ(Times(i,Power(c,CN1))))))),
ISetDelayed(Int(Times(Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))))),n_DEFAULT),Power(Plus(g_DEFAULT,Times(h_DEFAULT,x_),Times(i_DEFAULT,Sqr(x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(i,Power(c,CN1)),Plus(m,C1D2)),Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))),Power(Plus(g,Times(h,x),Times(i,Sqr(x))),CN1D2),Int(Times(Power(Plus(a,Times(b,x),Times(c,Sqr(x))),m),Power(Plus(d,Times(e,x),Times(f,Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))))),n)),x)),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,g,h,i,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),ZeroQ(Plus(Times(c,g),Times(CN1,a,i)))),ZeroQ(Plus(Times(c,h),Times(CN1,b,i)))),NegativeIntegerQ(Plus(m,Times(CN1,C1D2)))),Not(PositiveQ(Times(i,Power(c,CN1))))))),
ISetDelayed(Int(Times(Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_),Times(f_DEFAULT,Sqrt(Plus(a_,Times(c_DEFAULT,Sqr(x_)))))),n_DEFAULT),Power(Plus(g_,Times(i_DEFAULT,Sqr(x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(i,Power(c,CN1)),Plus(m,C1D2)),Sqrt(Plus(a,Times(c,Sqr(x)))),Power(Plus(g,Times(i,Sqr(x))),CN1D2),Int(Times(Power(Plus(a,Times(c,Sqr(x))),m),Power(Plus(d,Times(e,x),Times(f,Sqrt(Plus(a,Times(c,Sqr(x)))))),n)),x)),And(And(And(And(FreeQ(List(a,c,d,e,f,g,i,n),x),ZeroQ(Plus(Sqr(e),Times(CN1,c,Sqr(f))))),ZeroQ(Plus(Times(c,g),Times(CN1,a,i)))),NegativeIntegerQ(Plus(m,Times(CN1,C1D2)))),Not(PositiveQ(Times(i,Power(c,CN1))))))),
ISetDelayed(Int(Times(Power(w_,m_DEFAULT),Power(Plus(u_,$($p(f,$s("Sqrt"),true),v_)),n_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(ExpandToSum(w,x),m),Power(Plus(ExpandToSum(u,x),Times(f,Sqrt(ExpandToSum(v,x)))),n)),x),And(And(And(And(FreeQ(List(f,n),x),LinearQ(u,x)),QuadraticQ(List(v,w),x)),Not(And(LinearMatchQ(u,x),QuadraticMatchQ(List(v,w),x)))),ZeroQ(Plus(Sqr(Coefficient(u,x,C1)),Times(CN1,Coefficient(v,x,C2),Sqr(f))))))),
ISetDelayed(Int(Power(Times(Plus(a_,Times(b_DEFAULT,Power(x_,n_DEFAULT))),Sqrt(Plus(Times(c_DEFAULT,Sqr(x_)),Times(d_DEFAULT,Power(Plus(a_,Times(b_DEFAULT,Power(x_,n_DEFAULT))),p_DEFAULT))))),CN1),x_Symbol),
    Condition(Times(Power(a,CN1),Subst(Int(Power(Plus(C1,Times(CN1,c,Sqr(x))),CN1),x),x,Times(x,Power(Plus(Times(c,Sqr(x)),Times(d,Power(Plus(a,Times(b,Power(x,n))),Times(C2,Power(n,CN1))))),CN1D2)))),And(FreeQ(List(a,b,c,d,n),x),ZeroQ(Plus(p,Times(CN1,C2,Power(n,CN1))))))),
ISetDelayed(Int(Sqrt(Plus(a_,Times(b_DEFAULT,Sqrt(Plus(c_,Times(d_DEFAULT,Sqr(x_))))))),x_Symbol),
    Condition(Plus(Times(C2,Sqr(b),d,Power(x,C3),Power(Times(C3,Power(Plus(a,Times(b,Sqrt(Plus(c,Times(d,Sqr(x)))))),QQ(3L,2L))),CN1)),Times(C2,a,x,Power(Plus(a,Times(b,Sqrt(Plus(c,Times(d,Sqr(x)))))),CN1D2))),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Sqr(a),Times(CN1,Sqr(b),c)))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(a_DEFAULT,Sqr(x_)),Times(b_DEFAULT,x_,Sqrt(Plus(c_,Times(d_DEFAULT,Sqr(x_))))))),Power(Times(x_,Sqrt(Plus(c_,Times(d_DEFAULT,Sqr(x_))))),CN1)),x_Symbol),
    Condition(Times(CSqrt2,b,Power(a,CN1),Subst(Int(Power(Plus(C1,Times(Sqr(x),Power(a,CN1))),CN1D2),x),x,Plus(Times(a,x),Times(b,Sqrt(Plus(c,Times(d,Sqr(x)))))))),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Sqr(a),Times(CN1,Sqr(b),d)))),ZeroQ(Plus(Times(Sqr(b),c),a))))),
ISetDelayed(Int(Times(Sqrt(Times(e_DEFAULT,x_,Plus(Times(a_DEFAULT,x_),Times(b_DEFAULT,Sqrt(Plus(c_,Times(d_DEFAULT,Sqr(x_)))))))),Power(Times(x_,Sqrt(Plus(c_,Times(d_DEFAULT,Sqr(x_))))),CN1)),x_Symbol),
    Condition(Int(Times(Sqrt(Plus(Times(a,e,Sqr(x)),Times(b,e,x,Sqrt(Plus(c,Times(d,Sqr(x))))))),Power(Times(x,Sqrt(Plus(c,Times(d,Sqr(x))))),CN1)),x),And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Sqr(a),Times(CN1,Sqr(b),d)))),ZeroQ(Plus(Times(Sqr(b),c,e),a))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,Power(x_,C4))),CN1D2),Sqrt(Plus(Times(c_DEFAULT,Sqr(x_)),Times(d_DEFAULT,Sqrt(Plus(a_,Times(b_DEFAULT,Power(x_,C4)))))))),x_Symbol),
    Condition(Times(d,Subst(Int(Power(Plus(C1,Times(CN1,C2,c,Sqr(x))),CN1),x),x,Times(x,Power(Plus(Times(c,Sqr(x)),Times(d,Sqrt(Plus(a,Times(b,Power(x,C4)))))),CN1D2)))),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Sqr(c),Times(CN1,b,Sqr(d))))))),
ISetDelayed(Int(Times(Power(Plus(c_DEFAULT,Times(d_DEFAULT,x_)),m_DEFAULT),Power(Plus(a_,Times(e_DEFAULT,Power(x_,C4))),CN1D2),Sqrt(Plus(Times(b_DEFAULT,Sqr(x_)),Sqrt(Plus(a_,Times(e_DEFAULT,Power(x_,C4))))))),x_Symbol),
    Condition(Plus(Times(C1D2,Plus(C1,Times(CN1,CI)),Int(Times(Power(Plus(c,Times(d,x)),m),Power(Plus(Sqrt(a),Times(CN1,CI,b,Sqr(x))),CN1D2)),x)),Times(C1D2,Plus(C1,CI),Int(Times(Power(Plus(c,Times(d,x)),m),Power(Plus(Sqrt(a),Times(CI,b,Sqr(x))),CN1D2)),x))),And(And(FreeQ(List(a,b,c,d,m),x),ZeroQ(Plus(e,Times(CN1,Sqr(b))))),PositiveQ(a)))),
ISetDelayed(Int(Times(Plus($p("A"),Times($p("B",true),Power(x_,n_))),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(d_DEFAULT,Power(x_,j_)),Times(c_DEFAULT,Power(x_,n_))),CN1)),x_Symbol),
    Condition(Times(Sqr($s("A")),Plus(n,Times(CN1,C1)),Subst(Int(Power(Plus(a,Times(Sqr($s("A")),b,Sqr(Plus(n,Times(CN1,C1))),Sqr(x))),CN1),x),x,Times(x,Power(Plus(Times($s("A"),Plus(n,Times(CN1,C1))),Times(CN1,$s("B"),Power(x,n))),CN1)))),And(And(And(And(FreeQ(List(a,b,c,d,$s("A"),$s("B"),n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(n,Times(CN1,C2)))),ZeroQ(Plus(Times(a,Sqr($s("B"))),Times(CN1,Sqr($s("A")),d,Sqr(Plus(n,Times(CN1,C1))))))),ZeroQ(Plus(Times($s("B"),c),Times(C2,$s("A"),d,Plus(n,Times(CN1,C1)))))))),
ISetDelayed(Int(Times(Plus($p("A"),Times($p("B",true),Power(x_,n_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(d_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,k_DEFAULT)),Times(c_DEFAULT,Power(x_,n_DEFAULT))),CN1)),x_Symbol),
    Condition(Times(Sqr($s("A")),Plus(m,Times(CN1,n),C1),Power(Plus(m,C1),CN1),Subst(Int(Power(Plus(a,Times(Sqr($s("A")),b,Sqr(Plus(m,Times(CN1,n),C1)),Sqr(x))),CN1),x),x,Times(Power(x,Plus(m,C1)),Power(Plus(Times($s("A"),Plus(m,Times(CN1,n),C1)),Times($s("B"),Plus(m,C1),Power(x,n))),CN1)))),And(And(And(And(FreeQ(List(a,b,c,d,$s("A"),$s("B"),m,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),ZeroQ(Plus(k,Times(CN1,C2,Plus(m,C1))))),ZeroQ(Plus(Times(a,Sqr($s("B")),Sqr(Plus(m,C1))),Times(CN1,Sqr($s("A")),d,Sqr(Plus(m,Times(CN1,n),C1)))))),ZeroQ(Plus(Times($s("B"),c,Plus(m,C1)),Times(CN1,C2,$s("A"),d,Plus(m,Times(CN1,n),C1))))))),
ISetDelayed(Int(Times(u_,Power(Plus(a_DEFAULT,Times(b_DEFAULT,Power(x_,n_)),Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT)),x_Symbol),
    Condition(Int(Sum(Times(Power(x,i),Plus(Coefficient(u,x,i),Times(Coefficient(u,x,Plus(n,i)),Power(x,n))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p)),List(i,C0,Plus(n,Times(CN1,C1)))),x),And(And(And(And(And(And(And(FreeQ(List(a,b,c,p),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),PositiveIntegerQ(n)),PolynomialQ(u,x)),Less(Less(C1,Exponent(u,x)),Times(C2,n))),Not(BinomialQ(u,x))),Or(NonzeroQ(Plus(p,C1)),Not(NiceSqrtQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),Not(MatchQ(u,Condition(Power(x,m_),FreeQ(m,x))))))),
ISetDelayed(Int(Times(u_,Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,Power(x_,n_)),Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT)),x_Symbol),
    Condition(Int(Sum(Times(Power(x,Plus(m,i)),Plus(Coefficient(u,x,i),Times(Coefficient(u,x,Plus(n,i)),Power(x,n))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p)),List(i,C0,Plus(n,Times(CN1,C1)))),x),And(And(And(And(And(And(FreeQ(List(a,b,c,m,p),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),PositiveIntegerQ(n)),PolynomialQ(u,x)),Less(Less(C1,Exponent(u,x)),Times(C2,n))),Not(BinomialQ(u,x))),Or(NonzeroQ(Plus(p,C1)),Not(NiceSqrtQ(Plus(Sqr(b),Times(CN1,C4,a,c))))))))
  );
}
