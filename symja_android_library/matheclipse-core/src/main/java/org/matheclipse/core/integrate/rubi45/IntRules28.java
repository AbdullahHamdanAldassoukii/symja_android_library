package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules28 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,Plus(m,Times(p,q))),Plus(pa,Times(pb,Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(a,Times(b,Power(x,Plus(pn,Times(CN1,q)))),Times(c,Power(x,Times(C2,Plus(pn,Times(CN1,q)))))),p)),x),And(And(And(And(FreeQ(List(a,b,c,pa,pb,m,pn,q),x),ZeroQ(Plus(r,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),IntegerQ(p)),PosQ(Plus(pn,Times(CN1,q)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(pa,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),Times(pb,Plus(m,Times(p,q),C1),Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p),Power(Times(Plus(m,Times(p,q),C1),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1)),Times(Plus(pn,Times(CN1,q)),p,Power(Times(Plus(m,Times(p,q),C1),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,Plus(pn,m)),Simp(Plus(Times(C2,a,pb,Plus(m,Times(p,q),C1)),Times(CN1,pa,b,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),Times(Plus(Times(b,pb,Plus(m,Times(p,q),C1)),Times(CN1,C2,pa,c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1))),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(r,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),Not(IntegerQ(p))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p,q)),Greater(p,C0)),LessEqual(Plus(m,Times(p,q)),Times(CN1,Plus(pn,Times(CN1,q))))),Unequal(Plus(m,Times(p,q),C1),C0)),Unequal(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),C0)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(pn,Plus(q,r))),Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(pa,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),Times(pb,Plus(m,Times(p,q),C1),Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p),Power(Times(Plus(m,Times(p,q),C1),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1)),Times(C2,Plus(pn,Times(CN1,q)),p,Power(Times(Plus(m,Times(p,q),C1),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,Plus(pn,m)),Simp(Plus(Times(a,pb,Plus(m,Times(p,q),C1)),Times(CN1,pa,c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q))))),PositiveIntegerQ(pn)),LessEqual(Plus(m,Times(p,q)),Times(CN1,Plus(pn,Times(CN1,q))))),Unequal(Plus(m,Times(p,q),C1),C0)),Unequal(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),C0)))),And(And(And(FreeQ(List(a,c,pa,pb),x),Not(IntegerQ(p))),RationalQ(m,p,q)),Greater(p,C0)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Plus(Times(pa,b),Times(CN1,C2,a,pb),Times(CN1,Plus(Times(b,pb),Times(CN1,C2,pa,c)),Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1)),Power(Times(Plus(pn,Times(CN1,q)),Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1)),Times(Power(Times(Plus(pn,Times(CN1,q)),Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(Plus(m,Times(p,q),Times(CN1,pn),q,C1),Plus(Times(C2,a,pb),Times(CN1,pa,b))),Times(Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),Plus(p,C1)),C1),Plus(Times(b,pb),Times(CN1,C2,pa,c)),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(r,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),Not(IntegerQ(p))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p,q)),Less(p,CN1)),Greater(Plus(m,Times(p,q)),Plus(pn,Times(CN1,q),Times(CN1,C1)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(pn,Plus(q,r))),Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Plus(Times(a,pb),Times(CN1,pa,c,Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1)),Power(Times(C2,a,c,Plus(pn,Times(CN1,q)),Plus(p,C1)),CN1)),Times(CN1,Power(Times(C2,a,c,Plus(pn,Times(CN1,q)),Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(a,pb,Plus(m,Times(p,q),Times(CN1,pn),q,C1)),Times(CN1,pa,c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),C2,Plus(p,C1)),C1),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1))),x))),And(And(ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q))))),PositiveIntegerQ(pn)),Greater(Plus(m,Times(p,q)),Plus(pn,Times(CN1,q),Times(CN1,C1)))))),And(And(And(FreeQ(List(a,c,pa,pb),x),Not(IntegerQ(p))),RationalQ(m,p,q)),Less(p,CN1)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(b,pb,Plus(pn,Times(CN1,q)),p),Times(pa,c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),Times(pb,c,Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),p),C1),Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p),Power(Times(c,Plus(m,Times(p,Plus(Times(C2,pn),Times(CN1,q))),C1),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1)),Times(Plus(pn,Times(CN1,q)),p,Power(Times(c,Plus(m,Times(p,Plus(Times(C2,pn),Times(CN1,q))),C1),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,Plus(m,q)),Simp(Plus(Times(C2,a,pa,c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),Times(CN1,a,b,pb,Plus(m,Times(p,q),C1)),Times(Plus(Times(C2,a,pb,c,Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),p),C1)),Times(pa,b,c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),Times(CN1,Sqr(b),pb,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),p),C1))),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(r,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),Not(IntegerQ(p))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p,q)),Greater(p,C0)),Greater(Plus(m,Times(p,q)),Plus(Times(CN1,Plus(pn,Times(CN1,q))),Times(CN1,C1)))),Unequal(Plus(m,Times(p,Plus(Times(C2,pn),Times(CN1,q))),C1),C0)),Unequal(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),C0)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(pn,Plus(q,r))),Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(pa,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),Times(pb,Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),p),C1),Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p),Power(Times(Plus(m,Times(p,Plus(Times(C2,pn),Times(CN1,q))),C1),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1)),Times(Plus(pn,Times(CN1,q)),p,Power(Times(Plus(m,Times(p,Plus(Times(C2,pn),Times(CN1,q))),C1),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,Plus(m,q)),Simp(Plus(Times(C2,a,pa,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),Times(C2,a,pb,Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),p),C1),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q))))),PositiveIntegerQ(pn)),Greater(Plus(m,Times(p,q)),Times(CN1,Plus(pn,Times(CN1,q))))),Unequal(Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),p),C1),C0)),Unequal(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),C0)),Unequal(Plus(m,C1),pn)))),And(And(And(FreeQ(List(a,c,pa,pb),x),Not(IntegerQ(p))),RationalQ(m,p,q)),Greater(p,C0)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,q),C1)),Plus(Times(pa,Sqr(b)),Times(CN1,a,b,pb),Times(CN1,C2,a,pa,c),Times(Plus(Times(pa,b),Times(CN1,C2,a,pb)),c,Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1)),Power(Times(a,Plus(pn,Times(CN1,q)),Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1)),Times(Power(Times(a,Plus(pn,Times(CN1,q)),Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,q))),Simp(Plus(Times(pa,Sqr(b),Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(p,C1)),C1)),Times(CN1,a,b,pb,Plus(m,Times(p,q),C1)),Times(CN1,C2,a,pa,c,Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),Plus(p,C1)),C1)),Times(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C3)),C1),Plus(Times(pa,b),Times(CN1,C2,a,pb)),c,Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(r,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),Not(IntegerQ(p))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p,q)),Less(p,CN1)),Less(Plus(m,Times(p,q)),Plus(pn,Times(CN1,q),Times(CN1,C1)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(pn,Plus(q,r))),Condition(Plus(Times(CN1,Power(x,Plus(m,Times(CN1,q),C1)),Plus(Times(pa,c),Times(pb,c,Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1)),Power(Times(C2,a,c,Plus(pn,Times(CN1,q)),Plus(p,C1)),CN1)),Times(Power(Times(C2,a,c,Plus(pn,Times(CN1,q)),Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,q))),Simp(Plus(Times(pa,c,Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),Plus(p,C1)),C1)),Times(pb,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C3)),C1),c,Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1))),x))),And(And(ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q))))),PositiveIntegerQ(pn)),Less(Plus(m,Times(p,q)),Plus(pn,Times(CN1,q),Times(CN1,C1)))))),And(And(And(FreeQ(List(a,c,pa,pb),x),Not(IntegerQ(p))),RationalQ(m,p,q)),Less(p,CN1)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(pb,Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1)),Power(Times(c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1)),Times(CN1,Power(Times(c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn),q)),Simp(Plus(Times(a,pb,Plus(m,Times(p,q),Times(CN1,pn),q,C1)),Times(Plus(Times(b,pb,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),p),C1)),Times(CN1,pa,c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1))),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p)),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(r,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),Not(IntegerQ(p))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p,q)),And(LessEqual(CN1,p),Less(p,C0))),GreaterEqual(Plus(m,Times(p,q)),Plus(pn,Times(CN1,q),Times(CN1,C1)))),Unequal(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),C0)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(pn,Plus(q,r))),Condition(Plus(Times(pb,Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1)),Power(Times(c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1)),Times(CN1,Power(Times(c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn),q)),Simp(Plus(Times(a,pb,Plus(m,Times(p,q),Times(CN1,pn),q,C1)),Times(CN1,pa,c,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p)),x))),And(And(And(ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q))))),PositiveIntegerQ(pn)),GreaterEqual(Plus(m,Times(p,q)),Plus(pn,Times(CN1,q),Times(CN1,C1)))),Unequal(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),C0)))),And(And(And(FreeQ(List(a,c,pa,pb),x),Not(IntegerQ(p))),RationalQ(m,p,q)),And(LessEqual(CN1,p),Less(p,C0))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(pa,Power(x,Plus(m,Times(CN1,q),C1)),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1)),Power(Times(a,Plus(m,Times(p,q),C1)),CN1)),Times(Power(Times(a,Plus(m,Times(p,q),C1)),CN1),Int(Times(Power(x,Plus(m,pn,Times(CN1,q))),Simp(Plus(Times(a,pb,Plus(m,Times(p,q),C1)),Times(CN1,pa,b,Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(p,C1)),C1)),Times(CN1,pa,c,Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),Plus(p,C1)),C1),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p)),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(r,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),Not(IntegerQ(p))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p,q)),Or(And(LessEqual(CN1,p),Less(p,C0)),Equal(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),C0))),LessEqual(Plus(m,Times(p,q)),Times(CN1,Plus(pn,Times(CN1,q))))),Unequal(Plus(m,Times(p,q),C1),C0)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,r_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(a_DEFAULT,Power(x_,q_DEFAULT))),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(pn,Plus(q,r))),Condition(Plus(Times(pa,Power(x,Plus(m,Times(CN1,q),C1)),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),Plus(p,C1)),Power(Times(a,Plus(m,Times(p,q),C1)),CN1)),Times(Power(Times(a,Plus(m,Times(p,q),C1)),CN1),Int(Times(Power(x,Plus(m,pn,Times(CN1,q))),Simp(Plus(Times(a,pb,Plus(m,Times(p,q),C1)),Times(CN1,pa,c,Plus(m,Times(p,q),Times(C2,Plus(pn,Times(CN1,q)),Plus(p,C1)),C1),Power(x,Plus(pn,Times(CN1,q))))),x),Power(Plus(Times(a,Power(x,q)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p)),x))),And(And(And(And(ZeroQ(Plus(j,Times(CN1,Plus(Times(C2,pn),Times(CN1,q))))),PositiveIntegerQ(pn)),Or(And(LessEqual(CN1,p),Less(p,C0)),Equal(Plus(m,Times(p,q),Times(Plus(pn,Times(CN1,q)),Plus(Times(C2,p),C1)),C1),C0))),LessEqual(Plus(m,Times(p,q)),Times(CN1,Plus(pn,Times(CN1,q))))),Unequal(Plus(m,Times(p,q),C1),C0)))),And(And(FreeQ(List(a,c,pa,pb),x),Not(IntegerQ(p))),RationalQ(m,p,q)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,j_DEFAULT))),Power(x_,m_DEFAULT),Power(Plus(Times(a_DEFAULT,Power(x_,q_DEFAULT)),Times(c_DEFAULT,Power(x_,r_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_DEFAULT))),CN1D2)),x_Symbol),
    Condition(Times(Power(x,Times(C1D2,q)),Sqrt(Plus(a,Times(b,Power(x,Plus(pn,Times(CN1,q)))),Times(c,Power(x,Times(C2,Plus(pn,Times(CN1,q))))))),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),CN1D2),Int(Times(Power(x,Plus(m,Times(CN1,C1D2,q))),Plus(pa,Times(pb,Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(a,Times(b,Power(x,Plus(pn,Times(CN1,q)))),Times(c,Power(x,Times(C2,Plus(pn,Times(CN1,q)))))),CN1D2)),x)),And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb,m,pn,q),x),ZeroQ(Plus(j,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(r,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),PosQ(Plus(pn,Times(CN1,q)))),Or(ZeroQ(Plus(m,Times(CN1,C1D2))),ZeroQ(Plus(m,C1D2)))),ZeroQ(Plus(pn,Times(CN1,C3)))),ZeroQ(Plus(q,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,q_))),Power(x_,m_DEFAULT),Power(Plus(Times(a_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,k_DEFAULT)),Times(c_DEFAULT,Power(x_,pn_DEFAULT))),p_)),x_Symbol),
    Condition(Times(Power(Plus(Times(a,Power(x,j)),Times(b,Power(x,k)),Times(c,Power(x,pn))),p),Power(Times(Power(x,Times(j,p)),Power(Plus(a,Times(b,Power(x,Plus(k,Times(CN1,j)))),Times(c,Power(x,Times(C2,Plus(k,Times(CN1,j)))))),p)),CN1),Int(Times(Power(x,Plus(m,Times(j,p))),Plus(pa,Times(pb,Power(x,Plus(k,Times(CN1,j))))),Power(Plus(a,Times(b,Power(x,Plus(k,Times(CN1,j)))),Times(c,Power(x,Times(C2,Plus(k,Times(CN1,j)))))),p)),x)),And(And(And(And(FreeQ(List(a,b,c,pa,pb,j,k,m,p),x),ZeroQ(Plus(q,Times(CN1,Plus(k,Times(CN1,j)))))),ZeroQ(Plus(pn,Times(CN1,Plus(Times(C2,k),Times(CN1,j)))))),Not(IntegerQ(p))),PosQ(Plus(k,Times(CN1,j)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(u_,j_DEFAULT))),Power(y_,m_DEFAULT),Power(Plus(Times(a_DEFAULT,Power(v_,q_DEFAULT)),Times(b_DEFAULT,Power(w_,pn_DEFAULT)),Times(c_DEFAULT,Power(z_,r_DEFAULT))),p_)),x_Symbol),
    Condition(Times(Power(Coefficient(u,x,C1),CN1),Subst(Int(Times(Power(x,m),Plus(pa,Times(pb,Power(x,Plus(pn,Times(CN1,q))))),Power(Plus(Times(a,Power(x,q)),Times(b,Power(x,pn)),Times(c,Power(x,Plus(Times(C2,pn),Times(CN1,q))))),p)),x),x,u)),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb,m,pn,p,q),x),ZeroQ(Plus(j,Times(CN1,Plus(pn,Times(CN1,q)))))),ZeroQ(Plus(r,Times(CN1,Plus(Times(C2,pn),Times(CN1,q)))))),ZeroQ(Plus(u,Times(CN1,v)))),ZeroQ(Plus(u,Times(CN1,w)))),ZeroQ(Plus(u,Times(CN1,z)))),ZeroQ(Plus(u,Times(CN1,y)))),LinearQ(u,x)),NonzeroQ(Plus(u,Times(CN1,x)))))),
ISetDelayed(Int(Times(z_,Power(u_,p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),ExpandToSum(z,x),Power(ExpandToSum(u,x),p)),x),And(And(And(And(FreeQ(List(m,p),x),BinomialQ(z,x)),GeneralizedTrinomialQ(u,x)),ZeroQ(Plus(BinomialDegree(z,x),Times(CN1,GeneralizedTrinomialDegree(u,x))))),Not(And(BinomialMatchQ(z,x),GeneralizedTrinomialMatchQ(u,x))))))
  );
}
