package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules2 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_),m_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_),pn_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(Times(a,c),Times(b,pd,Sqr(x))),m),Power(Plus(pe,Times(f,x)),p)),x),And(And(And(FreeQ(List(a,b,c,pd,pe,f,m,pn,p),x),ZeroQ(Plus(m,Times(CN1,pn)))),ZeroQ(Plus(Times(b,c),Times(a,pd)))),IntegerQ(m)))),
ISetDelayed(Int(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Times(b,Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(pd,f,Plus(pn,p,C2)),CN1)),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),ZeroQ(Plus(Times(a,pd,f,Plus(pn,p,C2)),Times(CN1,b,Plus(Times(pd,pe,Plus(pn,C1)),Times(c,f,Plus(p,C1))))))),NonzeroQ(Plus(pn,p,C2))))),
ISetDelayed(Int(Times(Plus(Times(b_DEFAULT,x_),a_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Times(x_,pd_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Plus(a,Times(b,x)),Power(Times(pd,x),pn),Power(Plus(pe,Times(f,x)),p)),x),x),And(And(And(FreeQ(List(a,b,pd,pe,f,pn),x),PositiveIntegerQ(p)),NonzeroQ(Plus(pn,C1))),Or(Or(Or(Not(IntegerQ(pn)),Less(Plus(Times(C9,p),Times(C5,pn)),C0)),GreaterEqual(Plus(pn,p,C1),C0)),And(GreaterEqual(Plus(pn,p,C2),C0),RationalQ(a,b,pd,pe,f)))))),
ISetDelayed(Int(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_),pn_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Plus(a,Times(b,x)),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p)),x),x),And(And(FreeQ(List(a,b,c,pd,pe,f,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),Or(Or(NegativeIntegerQ(pn,p),Equal(p,C1)),And(PositiveIntegerQ(p),Or(Or(Or(Not(IntegerQ(pn)),LessEqual(Plus(Times(C9,p),Times(C5,Plus(pn,C2))),C0)),GreaterEqual(Plus(pn,p,C1),C0)),And(GreaterEqual(Plus(pn,p,C2),C0),RationalQ(a,b,c,pd,pe,f)))))))),
ISetDelayed(Int(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Plus(Times(a,f),Times(CN1,b,pe)),Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(f,Plus(p,C1),Plus(Times(c,f),Times(CN1,pd,pe))),CN1)),Times(CN1,Plus(Times(a,pd,f,Plus(pn,p,C2)),Times(CN1,b,Plus(Times(pd,pe,Plus(pn,C1)),Times(c,f,Plus(p,C1))))),Power(Times(f,Plus(p,C1),Plus(Times(c,f),Times(CN1,pd,pe))),CN1),Int(Times(Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,pn),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(p)),Less(p,CN1)),Or(Or(Not(And(RationalQ(pn),Less(pn,CN1))),IntegerQ(p)),Not(Or(IntegerQ(pn),Not(Or(ZeroQ(pe),Not(Or(ZeroQ(c),Less(p,pn))))))))))),
ISetDelayed(Int(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Plus(Times(a,f),Times(CN1,b,pe)),Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(f,Plus(p,C1),Plus(Times(c,f),Times(CN1,pd,pe))),CN1)),Times(CN1,Plus(Times(a,pd,f,Plus(pn,p,C2)),Times(CN1,b,Plus(Times(pd,pe,Plus(pn,C1)),Times(c,f,Plus(p,C1))))),Power(Times(f,Plus(p,C1),Plus(Times(c,f),Times(CN1,pd,pe))),CN1),Int(Times(Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),Simplify(Plus(p,C1)))),x))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),Not(RationalQ(p))),SumSimplerQ(p,C1)))),
ISetDelayed(Int(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(b,Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(pd,f,Plus(pn,p,C2)),CN1)),Times(Plus(Times(a,pd,f,Plus(pn,p,C2)),Times(CN1,b,Plus(Times(pd,pe,Plus(pn,C1)),Times(c,f,Plus(p,C1))))),Power(Times(pd,f,Plus(pn,p,C2)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),NonzeroQ(Plus(pn,p,C2))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),CN1),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Plus(pe,Times(f,x)),FractionalPart(p)),Times(Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),IntegerPart(p)),Power(Plus(a,Times(b,x)),CN1)),x),x),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveIntegerQ(pn)),FractionQ(p)),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),CN1)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pe,Times(f,x)),p),Power(Times(Plus(a,Times(b,x)),Plus(c,Times(pd,x))),CN1)),x),x),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),CN1)),x_Symbol),
    Condition(Plus(Times(Plus(Times(b,pe),Times(CN1,a,f)),Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1),Int(Times(Power(Plus(pe,Times(f,x)),Plus(p,Times(CN1,C1))),Power(Plus(a,Times(b,x)),CN1)),x)),Times(CN1,Plus(Times(pd,pe),Times(CN1,c,f)),Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1),Int(Times(Power(Plus(pe,Times(f,x)),Plus(p,Times(CN1,C1))),Power(Plus(c,Times(pd,x)),CN1)),x))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(p)),Less(Less(C0,p),C1)))),
ISetDelayed(Int(Times(Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_),Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),CN1)),x_Symbol),
    Condition(Plus(Times(f,Power(Plus(pe,Times(f,x)),Plus(p,Times(CN1,C1))),Power(Times(b,pd,Plus(p,Times(CN1,C1))),CN1)),Times(Power(Times(b,pd),CN1),Int(Times(Plus(Times(b,pd,Sqr(pe)),Times(CN1,a,c,Sqr(f)),Times(f,Plus(Times(C2,b,pd,pe),Times(CN1,b,c,f),Times(CN1,a,pd,f)),x)),Power(Plus(pe,Times(f,x)),Plus(p,Times(CN1,C2))),Power(Times(Plus(a,Times(b,x)),Plus(c,Times(pd,x))),CN1)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),Not(IntegerQ(p))),RationalQ(p)),Greater(p,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_),Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),CN1)),x_Symbol),
    Condition(Plus(Times(f,Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(Plus(p,C1),Plus(Times(b,pe),Times(CN1,a,f)),Plus(Times(pd,pe),Times(CN1,c,f))),CN1)),Times(Power(Times(Plus(Times(b,pe),Times(CN1,a,f)),Plus(Times(pd,pe),Times(CN1,c,f))),CN1),Int(Times(Plus(Times(b,pd,pe),Times(CN1,b,c,f),Times(CN1,a,pd,f),Times(CN1,b,pd,f,x)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(Plus(a,Times(b,x)),Plus(c,Times(pd,x))),CN1)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),Not(IntegerQ(p))),RationalQ(p)),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_),Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),CN1)),x_Symbol),
    Condition(Plus(Times(b,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1),Int(Times(Power(Plus(pe,Times(f,x)),p),Power(Plus(a,Times(b,x)),CN1)),x)),Times(CN1,pd,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1),Int(Times(Power(Plus(pe,Times(f,x)),p),Power(Plus(c,Times(pd,x)),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),Not(And(RationalQ(p),Or(Greater(p,C0),LessEqual(p,CN1))))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(f_DEFAULT,x_),pe_DEFAULT)),Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Sqrt(Plus(Times(x_,pd_DEFAULT),c_DEFAULT))),CN1)),x_Symbol),
    Condition(Plus(Times(f,Power(b,CN1),Int(Power(Times(Sqrt(Plus(c,Times(pd,x))),Sqrt(Plus(pe,Times(f,x)))),CN1),x)),Times(Plus(Times(b,pe),Times(CN1,a,f)),Power(b,CN1),Int(Power(Times(Plus(a,Times(b,x)),Sqrt(Plus(c,Times(pd,x))),Sqrt(Plus(pe,Times(f,x)))),CN1),x))),And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))))),
ISetDelayed(Int(Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Sqrt(Plus(Times(f_DEFAULT,x_),pe_DEFAULT)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_DEFAULT))),CN1),x_Symbol),
    Condition(Times(CN2,Subst(Int(Power(Plus(Times(b,c),Times(CN1,a,pd),Times(CN1,Plus(Times(b,pe),Times(CN1,a,f)),Sqr(x))),CN1),x),x,Times(Sqrt(Plus(c,Times(pd,x))),Power(Plus(pe,Times(f,x)),CN1D2)))),And(FreeQ(List(a,b,c,pd,pe,f),x),LessEqual(LeafCount(Simplify(Times(Plus(Times(b,pe),Times(CN1,a,f)),Power(Plus(Times(a,pd),Times(CN1,b,c)),CN1)))),LeafCount(Simplify(Times(Plus(Times(b,c),Times(CN1,a,pd)),Power(Plus(Times(a,f),Times(CN1,b,pe)),CN1)))))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(f_DEFAULT,x_),pe_)),Power(Times(Sqrt(Plus(Times(x_,pd_DEFAULT),c_)),Sqrt(Times(b_DEFAULT,x_))),CN1)),x_Symbol),
    Condition(Times(C2,Sqrt(pe),Power(b,CN1),Rt(Times(CN1,b,Power(pd,CN1)),C2),EllipticE(ArcSin(Times(Sqrt(Times(b,x)),Power(Times(Sqrt(c),Rt(Times(CN1,b,Power(pd,CN1)),C2)),CN1))),Times(c,f,Power(Times(pd,pe),CN1)))),And(And(And(And(FreeQ(List(b,c,pd,pe,f),x),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveQ(c)),PositiveQ(pe)),Not(NegativeQ(Times(CN1,b,Power(pd,CN1))))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(f_DEFAULT,x_),pe_)),Power(Times(Sqrt(Plus(Times(x_,pd_DEFAULT),c_)),Sqrt(Times(b_DEFAULT,x_))),CN1)),x_Symbol),
    Condition(Times(Sqrt(Times(CN1,b,x)),Power(Times(b,x),CN1D2),Int(Times(Sqrt(Plus(pe,Times(f,x))),Power(Times(Sqrt(Times(CN1,b,x)),Sqrt(Plus(c,Times(pd,x)))),CN1)),x)),And(And(And(And(FreeQ(List(b,c,pd,pe,f),x),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveQ(c)),PositiveQ(pe)),NegativeQ(Times(CN1,b,Power(pd,CN1)))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(f_DEFAULT,x_),pe_DEFAULT)),Power(Times(Sqrt(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_DEFAULT))),CN1)),x_Symbol),
    Condition(Times(C2,Power(b,CN1),Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1)),C2),Sqrt(Times(Plus(Times(b,pe),Times(CN1,a,f)),Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1))),EllipticE(ArcSin(Times(Sqrt(Plus(a,Times(b,x))),Power(Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1)),C2),CN1))),Times(f,Plus(Times(b,c),Times(CN1,a,pd)),Power(Times(pd,Plus(Times(b,pe),Times(CN1,a,f))),CN1)))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveQ(Times(b,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1)))),PositiveQ(Times(b,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)))),Not(NegativeQ(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))))),Not(NegativeQ(Times(f,Power(pd,CN1))))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(f_DEFAULT,x_),pe_DEFAULT)),Power(Times(Sqrt(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_DEFAULT))),CN1)),x_Symbol),
    Condition(Times(Sqrt(Plus(Times(CN1,a),Times(CN1,b,x))),Power(Plus(a,Times(b,x)),CN1D2),Int(Times(Sqrt(Plus(pe,Times(f,x))),Power(Times(Sqrt(Plus(Times(CN1,a),Times(CN1,b,x))),Sqrt(Plus(c,Times(pd,x)))),CN1)),x)),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveQ(Times(b,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1)))),PositiveQ(Times(b,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)))),NegativeQ(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1)))))),
ISetDelayed(Int(Times(Sqrt(Plus(Times(f_DEFAULT,x_),pe_DEFAULT)),Power(Times(Sqrt(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_DEFAULT))),CN1)),x_Symbol),
    Condition(Times(Sqrt(Plus(pe,Times(f,x))),Sqrt(Times(b,Plus(c,Times(pd,x)),Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1))),Power(Times(Sqrt(Plus(c,Times(pd,x))),Sqrt(Times(b,Plus(pe,Times(f,x)),Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)))),CN1),Int(Times(Sqrt(Simp(Plus(Times(b,pe,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)),Times(b,f,x,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1))),x)),Power(Times(Sqrt(Plus(a,Times(b,x))),Sqrt(Simp(Plus(Times(b,c,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1)),Times(b,pd,x,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1))),x))),CN1)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),Not(And(PositiveQ(Times(b,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1))),PositiveQ(Times(b,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)))))))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(Times(f_DEFAULT,x_),pe_)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_)),Sqrt(Times(b_DEFAULT,x_))),CN1),x_Symbol),
    Condition(Times(C2,Power(Times(b,Sqrt(pe)),CN1),Rt(Times(CN1,b,Power(pd,CN1)),C2),EllipticF(ArcSin(Times(Sqrt(Times(b,x)),Power(Times(Sqrt(c),Rt(Times(CN1,b,Power(pd,CN1)),C2)),CN1))),Times(c,f,Power(Times(pd,pe),CN1)))),And(And(And(And(FreeQ(List(b,c,pd,pe,f),x),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveQ(c)),PositiveQ(pe)),Not(NegativeQ(Times(CN1,b,Power(pd,CN1))))))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(Times(f_DEFAULT,x_),pe_)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_)),Sqrt(Times(b_DEFAULT,x_))),CN1),x_Symbol),
    Condition(Times(Sqrt(Times(CN1,b,x)),Power(Times(b,x),CN1D2),Int(Power(Times(Sqrt(Times(CN1,b,x)),Sqrt(Plus(c,Times(pd,x))),Sqrt(Plus(pe,Times(f,x)))),CN1),x)),And(And(And(And(FreeQ(List(b,c,pd,pe,f),x),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveQ(c)),PositiveQ(pe)),NegativeQ(Times(CN1,b,Power(pd,CN1)))))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Sqrt(Plus(Times(f_DEFAULT,x_),pe_DEFAULT)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_DEFAULT))),CN1),x_Symbol),
    Condition(Times(C2,Power(b,CN1),Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1)),C2),Sqrt(Times(Sqr(b),Power(Times(Plus(Times(b,c),Times(CN1,a,pd)),Plus(Times(b,pe),Times(CN1,a,f))),CN1))),EllipticF(ArcSin(Times(Sqrt(Plus(a,Times(b,x))),Power(Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1)),C2),CN1))),Times(f,Plus(Times(b,c),Times(CN1,a,pd)),Power(Times(pd,Plus(Times(b,pe),Times(CN1,a,f))),CN1)))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveQ(Times(b,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1)))),PositiveQ(Times(b,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)))),Not(NegativeQ(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1))))),Not(NegativeQ(Times(f,Power(pd,CN1))))))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Sqrt(Plus(Times(f_DEFAULT,x_),pe_DEFAULT)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_DEFAULT))),CN1),x_Symbol),
    Condition(Times(Sqrt(Plus(Times(CN1,a),Times(CN1,b,x))),Power(Plus(a,Times(b,x)),CN1D2),Int(Power(Times(Sqrt(Plus(Times(CN1,a),Times(CN1,b,x))),Sqrt(Plus(c,Times(pd,x))),Sqrt(Plus(pe,Times(f,x)))),CN1),x)),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PositiveQ(Times(b,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1)))),PositiveQ(Times(b,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)))),NegativeQ(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd)),Power(pd,CN1)))))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Sqrt(Plus(Times(f_DEFAULT,x_),pe_DEFAULT)),Sqrt(Plus(Times(x_,pd_DEFAULT),c_DEFAULT))),CN1),x_Symbol),
    Condition(Times(Sqrt(Times(b,Plus(c,Times(pd,x)),Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1))),Sqrt(Times(b,Plus(pe,Times(f,x)),Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1))),Power(Times(Sqrt(Plus(c,Times(pd,x))),Sqrt(Plus(pe,Times(f,x)))),CN1),Int(Power(Times(Sqrt(Plus(a,Times(b,x))),Sqrt(Simp(Plus(Times(b,c,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1)),Times(b,pd,x,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1))),x)),Sqrt(Simp(Plus(Times(b,pe,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)),Times(b,f,x,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1))),x))),CN1),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),Not(And(PositiveQ(Times(b,Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1))),PositiveQ(Times(b,Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)))))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p)),x),x),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,m),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),IntegersQ(m,pn)),Or(Or(IntegerQ(p),And(Greater(m,C0),GreaterEqual(pn,CN1))),And(And(Less(m,C0),Less(pn,C0)),Not(RationalQ(p))))))),
ISetDelayed(Int(Times(Sqr(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Sqr(Plus(Times(b,c),Times(CN1,a,pd))),Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(Sqr(pd),Plus(Times(pd,pe),Times(CN1,c,f)),Plus(pn,C1)),CN1)),Times(CN1,Power(Times(Sqr(pd),Plus(Times(pd,pe),Times(CN1,c,f)),Plus(pn,C1)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),p),Simp(Plus(Times(Sqr(a),Sqr(pd),f,Plus(pn,p,C2)),Times(Sqr(b),c,Plus(Times(pd,pe,Plus(pn,C1)),Times(c,f,Plus(p,C1)))),Times(CN1,C2,a,b,pd,Plus(Times(pd,pe,Plus(pn,C1)),Times(c,f,Plus(p,C1)))),Times(CN1,Sqr(b),pd,Plus(Times(pd,pe),Times(CN1,c,f)),Plus(pn,C1),x)),x)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),Or(And(RationalQ(pn),Less(pn,CN1)),And(And(ZeroQ(Plus(pn,p,C3)),NonzeroQ(Plus(pn,C1))),Or(SumSimplerQ(pn,C1),Not(SumSimplerQ(p,C1)))))))),
ISetDelayed(Int(Times(Sqr(Plus(Times(b_DEFAULT,x_),a_DEFAULT)),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(b,Plus(a,Times(b,x)),Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(pd,f,Plus(pn,p,C3)),CN1)),Times(Power(Times(pd,f,Plus(pn,p,C3)),CN1),Int(Times(Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p),Simp(Plus(Times(Sqr(a),pd,f,Plus(pn,p,C3)),Times(CN1,b,Plus(Times(b,c,pe),Times(a,Plus(Times(pd,pe,Plus(pn,C1)),Times(c,f,Plus(p,C1)))))),Times(b,Plus(Times(a,pd,f,Plus(pn,p,C4)),Times(CN1,b,Plus(Times(pd,pe,Plus(pn,C2)),Times(c,f,Plus(p,C2))))),x)),x)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),NonzeroQ(Plus(pn,p,C3))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(Plus(m,C1),Plus(Times(a,f),Times(CN1,b,pe))),CN1)),Times(pn,Plus(Times(pd,pe),Times(CN1,c,f)),Power(Times(Plus(m,C1),Plus(Times(a,f),Times(CN1,b,pe))),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),Plus(pn,Times(CN1,C1))),Power(Plus(pe,Times(f,x)),p)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(m,pn)),Less(m,CN1)),Greater(pn,C0)),ZeroQ(Plus(m,pn,p,C2))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p),Power(Times(b,Plus(m,C1)),CN1)),Times(CN1,Power(Times(b,Plus(m,C1)),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),Plus(pn,Times(CN1,C1))),Power(Plus(pe,Times(f,x)),Plus(p,Times(CN1,C1))),Simp(Plus(Times(pd,pe,pn),Times(c,f,p),Times(pd,f,Plus(pn,p),x)),x)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(m,pn,p)),Less(m,CN1)),Greater(pn,C0)),Greater(p,C0)),Or(Or(IntegersQ(Times(C2,m),Times(C2,pn),Times(C2,p)),IntegersQ(m,Plus(pn,p))),IntegersQ(p,Plus(m,pn)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(f,Plus(m,pn,p,C1)),CN1)),Times(Power(Times(f,Plus(m,pn,p,C1)),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,Times(CN1,C1))),Power(Plus(c,Times(pd,x)),Plus(pn,Times(CN1,C1))),Power(Plus(pe,Times(f,x)),p),Simp(Plus(Times(c,m,Plus(Times(a,f),Times(CN1,b,pe))),Times(a,pn,Plus(Times(c,f),Times(CN1,pd,pe))),Times(Plus(Times(pd,m,Plus(Times(a,f),Times(CN1,b,pe))),Times(b,pn,Plus(Times(c,f),Times(CN1,pd,pe)))),x)),x)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(m,pn,p)),Greater(m,C0)),Greater(pn,C0)),NonzeroQ(Plus(m,pn,p,C1))),Or(IntegersQ(Times(C2,m),Times(C2,pn),Times(C2,p)),IntegersQ(p,Plus(m,pn)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(Plus(m,C1),Plus(Times(a,f),Times(CN1,b,pe))),CN1)),Times(Power(Times(Plus(m,C1),Plus(Times(a,f),Times(CN1,b,pe))),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),Plus(pn,Times(CN1,C1))),Power(Plus(pe,Times(f,x)),p),Simp(Plus(Times(pd,pe,pn),Times(c,f,Plus(m,p,C2)),Times(pd,f,Plus(m,pn,p,C2),x)),x)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(m,pn,p)),Less(m,CN1)),Greater(pn,C0)),Not(And(And(IntegerQ(pn),Greater(pn,C1)),Greater(Plus(m,pn,p,C1),C0)))),Or(Or(IntegersQ(Times(C2,m),Times(C2,pn),Times(C2,p)),IntegersQ(p,Plus(m,pn))),IntegersQ(m,Plus(pn,p)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(b,Power(Plus(a,Times(b,x)),Plus(m,Times(CN1,C1))),Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(pd,f,Plus(m,pn,p,C1)),CN1)),Times(Power(Times(pd,f,Plus(m,pn,p,C1)),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,Times(CN1,C2))),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p),Simp(Plus(Times(Sqr(a),pd,f,Plus(m,pn,p,C1)),Times(CN1,b,Plus(Times(b,c,pe,Plus(m,Times(CN1,C1))),Times(a,Plus(Times(pd,pe,Plus(pn,C1)),Times(c,f,Plus(p,C1)))))),Times(b,Plus(Times(a,pd,f,Plus(Times(C2,m),pn,p)),Times(CN1,b,Plus(Times(pd,pe,Plus(m,pn)),Times(c,f,Plus(m,p))))),x)),x)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(m)),Greater(m,C1)),NonzeroQ(Plus(m,pn,p,C1))),Or(Or(IntegerQ(m),IntegersQ(Times(C2,m),Times(C2,pn),Times(C2,p))),NegativeIntegerQ(Plus(m,pn,p,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(b,Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(Plus(m,C1),Plus(Times(b,c),Times(CN1,a,pd)),Plus(Times(b,pe),Times(CN1,a,f))),CN1)),Times(Power(Times(Plus(m,C1),Plus(Times(b,c),Times(CN1,a,pd)),Plus(Times(b,pe),Times(CN1,a,f))),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p),Simp(Plus(Times(a,pd,f,Plus(m,C1)),Times(CN1,b,Plus(Times(pd,pe,Plus(m,pn,C2)),Times(c,f,Plus(m,p,C2)))),Times(CN1,b,pd,f,Plus(m,pn,p,C3),x)),x)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(m,pn,p)),Less(m,CN1)),Or(IntegersQ(Times(C2,m),Times(C2,pn),Times(C2,p)),IntegersQ(m,Plus(pn,p)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Denominator(m))),Times(q,Plus(Times(b,c),Times(CN1,a,pd)),Subst(Int(Times(Power(x,Plus(Times(q,Plus(m,C1)),Times(CN1,C1))),Power(Plus(Times(b,pe),Times(CN1,a,f),Times(CN1,Plus(Times(pd,pe),Times(CN1,c,f)),Power(x,q))),p),Power(Power(Plus(b,Times(CN1,pd,Power(x,q))),Plus(p,C2)),CN1)),x),x,Times(Power(Plus(a,Times(b,x)),Power(q,CN1)),Power(Power(Plus(c,Times(pd,x)),Power(q,CN1)),CN1))))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(m,pn)),Less(Less(C0,m),C1)),Equal(Plus(m,pn),C0)),IntegerQ(p)))),
ISetDelayed(Int(Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),QQ(2L,3L)),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),C1D3)),CN1),x_Symbol),
    Condition(Plus(Times(CN1,Log(Plus(a,Times(b,x))),Power(Times(C2,Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Sqr(Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3))),CN1)),Times(CSqrt3,Power(Times(Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Sqr(Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3))),CN1),ArcTan(Times(C1DSqrt3,Plus(C1,Times(C2,Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3),Power(Plus(c,Times(pd,x)),C1D3),Power(Times(Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Power(Plus(pe,Times(f,x)),C1D3)),CN1)))))),Times(C3,Power(Times(C2,Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Sqr(Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3))),CN1),Log(Plus(Times(Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3),Power(Plus(c,Times(pd,x)),C1D3)),Times(CN1,Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Power(Plus(pe,Times(f,x)),C1D3)))))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PosQ(Plus(Times(b,c),Times(CN1,a,pd)))),PosQ(Plus(Times(b,pe),Times(CN1,a,f)))))),
ISetDelayed(Int(Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),QQ(2L,3L)),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),C1D3)),CN1),x_Symbol),
    Condition(Plus(Times(CN1,Log(Plus(a,Times(b,x))),Power(Times(C2,Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Sqr(Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3))),CN1)),Times(CSqrt3,Power(Times(Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Sqr(Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3))),CN1),ArcTan(Times(C1DSqrt3,Plus(C1,Times(CN1,C2,Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3),Power(Plus(c,Times(pd,x)),C1D3),Power(Times(Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Power(Plus(pe,Times(f,x)),C1D3)),CN1)))))),Times(C3,Power(Times(C2,Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Sqr(Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3))),CN1),Log(Plus(Times(Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3),Power(Plus(c,Times(pd,x)),C1D3)),Times(Rt(Plus(Times(b,c),Times(CN1,a,pd)),C3),Power(Plus(pe,Times(f,x)),C1D3)))))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),PosQ(Plus(Times(b,c),Times(CN1,a,pd)))),NegQ(Plus(Times(b,pe),Times(CN1,a,f)))))),
ISetDelayed(Int(Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),QQ(2L,3L)),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),C1D3)),CN1),x_Symbol),
    Condition(Plus(Times(Log(Plus(a,Times(b,x))),Power(Times(C2,Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C3),Sqr(Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3))),CN1)),Times(CN1,CSqrt3,Power(Times(Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C3),Sqr(Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3))),CN1),ArcTan(Times(C1DSqrt3,Plus(C1,Times(CN1,C2,Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3),Power(Plus(c,Times(pd,x)),C1D3),Power(Times(Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C3),Power(Plus(pe,Times(f,x)),C1D3)),CN1)))))),Times(CN1,C3,Power(Times(C2,Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C3),Sqr(Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3))),CN1),Log(Plus(Times(Rt(Plus(Times(b,pe),Times(CN1,a,f)),C3),Power(Plus(c,Times(pd,x)),C1D3)),Times(Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C3),Power(Plus(pe,Times(f,x)),C1D3)))))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),NegQ(Plus(Times(b,c),Times(CN1,a,pd)))),PosQ(Plus(Times(b,pe),Times(CN1,a,f)))))),
ISetDelayed(Int(Power(Times(Plus(Times(b_DEFAULT,x_),a_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),QQ(2L,3L)),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),C1D3)),CN1),x_Symbol),
    Condition(Plus(Times(Log(Plus(a,Times(b,x))),Power(Times(C2,Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C3),Sqr(Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3))),CN1)),Times(CN1,CSqrt3,Power(Times(Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C3),Sqr(Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3))),CN1),ArcTan(Times(C1DSqrt3,Plus(C1,Times(C2,Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3),Power(Plus(c,Times(pd,x)),C1D3),Power(Times(Power(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C1D3),Power(Plus(pe,Times(f,x)),C1D3)),CN1)))))),Times(CN1,C3,Power(Times(C2,Rt(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C3),Sqr(Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3))),CN1),Log(Plus(Times(Rt(Times(CN1,Plus(Times(b,pe),Times(CN1,a,f))),C3),Power(Plus(c,Times(pd,x)),C1D3)),Times(CN1,Power(Times(CN1,Plus(Times(b,c),Times(CN1,a,pd))),C1D3),Power(Plus(pe,Times(f,x)),C1D3)))))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),NegQ(Plus(Times(b,c),Times(CN1,a,pd)))),NegQ(Plus(Times(b,pe),Times(CN1,a,f)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,Denominator(m))),Times(q,Subst(Int(Times(Power(x,Plus(Times(q,Plus(m,C1)),Times(CN1,C1))),Power(Plus(Times(b,pe),Times(CN1,a,f),Times(CN1,Plus(Times(pd,pe),Times(CN1,c,f)),Power(x,q))),p),Power(Power(Plus(b,Times(CN1,pd,Power(x,q))),Plus(p,C1)),CN1)),x),x,Times(Power(Plus(a,Times(b,x)),Power(q,CN1)),Power(Power(Plus(c,Times(pd,x)),Power(q,CN1)),CN1))))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),RationalQ(m,pn)),Less(Less(CN1,m),C0)),Equal(Plus(m,pn,C1),C0)),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT),Power(Times(f_DEFAULT,x_),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(Times(a,c),Times(b,pd,Sqr(x))),m),Power(Times(f,x),p)),x),And(And(And(And(FreeQ(List(a,b,c,pd,f,m,pn,p),x),ZeroQ(Plus(Times(b,c),Times(a,pd)))),ZeroQ(Plus(m,Times(CN1,pn)))),PositiveQ(a)),PositiveQ(c)))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT),Power(Times(f_DEFAULT,x_),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(pd,x)),m),Power(Power(Plus(Times(a,c),Times(b,pd,Sqr(x))),m),CN1),Int(Times(Power(Plus(Times(a,c),Times(b,pd,Sqr(x))),m),Power(Times(f,x),p)),x)),And(And(FreeQ(List(a,b,c,pd,f,m,pn,p),x),ZeroQ(Plus(Times(b,c),Times(a,pd)))),ZeroQ(Plus(m,Times(CN1,pn)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT),Power(Times(f_DEFAULT,x_),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(a,Times(b,x)),pn),Power(Plus(c,Times(pd,x)),pn),Power(Times(f,x),p)),Power(Plus(a,Times(b,x)),Plus(m,Times(CN1,pn))),x),x),And(And(FreeQ(List(a,b,c,pd,f,m,pn,p),x),ZeroQ(Plus(Times(b,c),Times(a,pd)))),PositiveIntegerQ(Plus(m,Times(CN1,pn)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(Times(b,c),Times(CN1,a,pd)),pn),Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Times(Plus(m,C1),Power(Plus(Times(b,pe),Times(CN1,a,f)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(m,C1))),CN1),Hypergeometric2F1(Plus(m,C1),Times(CN1,pn),Plus(m,C2),Times(CN1,Plus(Times(pd,pe),Times(CN1,c,f)),Plus(a,Times(b,x)),Power(Times(Plus(Times(b,c),Times(CN1,a,pd)),Plus(pe,Times(f,x))),CN1)))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,m,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),ZeroQ(Plus(m,pn,p,C2))),IntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(Plus(Times(b,pe),Times(CN1,a,f)),Plus(m,C1)),CN1),Power(Times(Plus(Times(b,pe),Times(CN1,a,f)),Plus(c,Times(pd,x)),Power(Times(Plus(Times(b,c),Times(CN1,a,pd)),Plus(pe,Times(f,x))),CN1)),Times(CN1,pn)),Hypergeometric2F1(Plus(m,C1),Times(CN1,pn),Plus(m,C2),Times(CN1,Plus(Times(pd,pe),Times(CN1,c,f)),Plus(a,Times(b,x)),Power(Times(Plus(Times(b,c),Times(CN1,a,pd)),Plus(pe,Times(f,x))),CN1)))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,m,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),ZeroQ(Plus(m,pn,p,C2))),Not(IntegerQ(pn))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Plus(Times(b,Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),Plus(pn,C1)),Power(Plus(pe,Times(f,x)),Plus(p,C1)),Power(Times(Plus(m,C1),Plus(Times(b,c),Times(CN1,a,pd)),Plus(Times(b,pe),Times(CN1,a,f))),CN1)),Times(Power(Times(Plus(m,C1),Plus(Times(b,c),Times(CN1,a,pd)),Plus(Times(b,pe),Times(CN1,a,f))),CN1),Int(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p),Simp(Plus(Times(a,pd,f,Plus(m,C1)),Times(CN1,b,Plus(Times(pd,pe,Plus(m,pn,C2)),Times(c,f,Plus(m,p,C2)))),Times(CN1,b,pd,f,Plus(m,pn,p,C3),x)),x)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,m,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),NegativeIntegerQ(Plus(m,pn,p,C2))),NonzeroQ(Plus(m,C1))),Or(SumSimplerQ(m,C1),And(Not(And(NonzeroQ(Plus(pn,C1)),SumSimplerQ(pn,C1))),Not(And(NonzeroQ(Plus(p,C1)),SumSimplerQ(p,C1)))))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),a_DEFAULT),m_DEFAULT),Power(Plus(Times(f_DEFAULT,x_),pe_DEFAULT),p_DEFAULT),Power(Plus(Times(x_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,x)),Plus(m,C1)),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p),Power(Times(b,Plus(m,C1),Power(Times(b,Plus(c,Times(pd,x)),Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1)),pn),Power(Times(b,Plus(pe,Times(f,x)),Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)),p)),CN1),AppellF1(Plus(m,C1),Times(CN1,pn),Times(CN1,p),Plus(m,C2),Times(CN1,pd,Plus(a,Times(b,x)),Power(Plus(Times(b,c),Times(CN1,a,pd)),CN1)),Times(CN1,f,Plus(a,Times(b,x)),Power(Plus(Times(b,pe),Times(CN1,a,f)),CN1)))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,m,pn,p),x),NonzeroQ(Plus(Times(b,c),Times(CN1,a,pd)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,a,f)))),NonzeroQ(Plus(Times(pd,pe),Times(CN1,c,f)))),Not(NegativeIntegerQ(m))),Not(PositiveIntegerQ(Plus(p,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,u_),a_DEFAULT),m_DEFAULT),Power(Plus(Times(f_DEFAULT,w_),pe_),p_DEFAULT),Power(Plus(Times(v_,pd_DEFAULT),c_DEFAULT),pn_DEFAULT)),x_Symbol),
    Condition(Times(Power(Coefficient(u,x,C1),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),m),Power(Plus(c,Times(pd,x)),pn),Power(Plus(pe,Times(f,x)),p)),x),x,u)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f,m,pn,p),x),ZeroQ(Plus(u,Times(CN1,v)))),ZeroQ(Plus(u,Times(CN1,w)))),LinearQ(u,x)),NonzeroQ(Plus(u,Times(CN1,x)))))),
ISetDelayed(Int(Times(Power(u_,m_DEFAULT),Power(v_,pn_DEFAULT),Power(w_,p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(ExpandToSum(u,x),m),Power(ExpandToSum(v,x),pn),Power(ExpandToSum(w,x),p)),x),And(And(FreeQ(List(m,pn,p),x),LinearQ(List(u,v,w),x)),Not(LinearMatchQ(List(u,v,w),x)))))
  );
}
