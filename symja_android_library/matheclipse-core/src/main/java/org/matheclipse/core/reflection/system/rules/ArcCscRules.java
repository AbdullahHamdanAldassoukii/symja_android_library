package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.IAST;

/**
 * Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.<br />
 * See GIT repository at: <a href="https://bitbucket.org/axelclk/symjaunittests">https://bitbucket.org/axelclk/symjaunittests</a>.
 */
public interface ArcCscRules {
  final public static IAST RULES = List(
    ISet(ArcCsc(C0),
      CComplexInfinity),
    ISet(ArcCsc(C1),
      Times(C1D2,Pi)),
    ISet(ArcCsc(Times(C2,C1DSqrt3)),
      Times(C1D3,Pi)),
    ISet(ArcCsc(CSqrt2),
      Times(C1D4,Pi)),
    ISet(ArcCsc(C2),
      Times(QQ(1L,6L),Pi)),
    ISet(ArcCsc(Plus(C1,CSqrt5)),
      Times(QQ(1L,10L),Pi)),
    ISet(ArcCsc(Plus(CSqrt2,CSqrt6)),
      Times(QQ(1L,12L),Pi)),
    ISet(ArcCsc(CI),
      Times(CNI,Log(Plus(C1,CSqrt2)))),
    ISet(ArcCsc(CInfinity),
      C0),
    ISet(ArcCsc(CNInfinity),
      C0),
    ISet(ArcCsc(DirectedInfinity(CI)),
      C0),
    ISet(ArcCsc(DirectedInfinity(CNI)),
      C0),
    ISet(ArcCsc(CComplexInfinity),
      C0)
  );
}
