package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules105 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),Times(CN1,b,c,pn,Int(Times(x,Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Greater(pn,C0)))),
ISetDelayed(Int(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),Times(b,c,pn,Int(Times(x,Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Greater(pn,C0)))),
ISetDelayed(Int(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),x_Symbol),
    Condition(Plus(Times(Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(c,Power(Times(b,Plus(pn,C1)),CN1),Int(Times(x,Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,C1)),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Less(pn,CN1)))),
ISetDelayed(Int(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),x_Symbol),
    Condition(Plus(Times(CN1,Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(CN1,c,Power(Times(b,Plus(pn,C1)),CN1),Int(Times(x,Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,C1)),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Less(pn,CN1)))),
ISetDelayed(Int(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),x_Symbol),
    Condition(Times(Power(Times(b,c),CN1),Subst(Int(Times(Power(x,pn),Cos(Plus(Times(a,Power(b,CN1)),Times(CN1,x,Power(b,CN1))))),x),x,Plus(a,Times(b,ArcSin(Times(c,x)))))),FreeQ(List(a,b,c,pn),x))),
ISetDelayed(Int(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),x_Symbol),
    Condition(Times(Power(Times(b,c),CN1),Subst(Int(Times(Power(x,pn),Sin(Plus(Times(a,Power(b,CN1)),Times(CN1,x,Power(b,CN1))))),x),x,Plus(a,Times(b,ArcCos(Times(c,x)))))),FreeQ(List(a,b,c,pn),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(pd,Times(pe,x)),Plus(m,C1)),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn),Power(Times(pe,Plus(m,C1)),CN1)),Times(CN1,b,c,pn,Power(Times(pe,Plus(m,C1)),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),Plus(m,C1)),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),RationalQ(pn)),Greater(pn,C0)),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(pd,Times(pe,x)),Plus(m,C1)),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn),Power(Times(pe,Plus(m,C1)),CN1)),Times(b,c,pn,Power(Times(pe,Plus(m,C1)),CN1),Int(Times(Power(Plus(pd,Times(pe,x)),Plus(m,C1)),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),RationalQ(pn)),Greater(pn,C0)),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(CN1,Power(Times(b,Power(c,Plus(m,C1)),Plus(pn,C1)),CN1),Subst(Int(ExpandTrigReduce(Power(Plus(a,Times(b,x)),Plus(pn,C1)),Times(Power(Sin(x),Plus(m,Times(CN1,C1))),Plus(m,Times(CN1,Plus(m,C1),Sqr(Sin(x))))),x),x),x,ArcSin(Times(c,x))))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),And(LessEqual(CN2,pn),Less(pn,CN1))),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,m),Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(CN1,Power(Times(b,Power(c,Plus(m,C1)),Plus(pn,C1)),CN1),Subst(Int(ExpandTrigReduce(Power(Plus(a,Times(b,x)),Plus(pn,C1)),Times(Power(Cos(x),Plus(m,Times(CN1,C1))),Plus(m,Times(CN1,Plus(m,C1),Sqr(Cos(x))))),x),x),x,ArcCos(Times(c,x))))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),And(LessEqual(CN2,pn),Less(pn,CN1))),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(CN1,m,Power(Times(b,c,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,C1)),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x)),Times(c,Plus(m,C1),Power(Times(b,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,C1)),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Less(pn,CN2)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,m),Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Plus(pn,C1)),CN1)),Times(m,Power(Times(b,c,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,C1)),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x)),Times(CN1,c,Plus(m,C1),Power(Times(b,Plus(pn,C1)),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,C1)),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(pn)),Less(pn,CN2)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Plus(Times(x_,pe_DEFAULT),pd_),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,x)),m),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x),x),And(And(And(FreeQ(List(a,b,c,pd,pe),x),RationalQ(pn)),Less(pn,CN1)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Plus(Times(x_,pe_DEFAULT),pd_),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,x)),m),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x),x),And(And(And(FreeQ(List(a,b,c,pd,pe),x),RationalQ(pn)),Less(pn,CN1)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Power(c,Plus(m,C1)),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Cos(x),Power(Plus(Times(c,pd),Times(pe,Sin(x))),m)),x),x,ArcSin(Times(c,x)))),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),IntegerQ(m)),Or(Greater(m,C0),PositiveIntegerQ(pn))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(Power(c,Plus(m,C1)),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Sin(x),Power(Plus(Times(c,pd),Times(pe,Cos(x))),m)),x),x,ArcCos(Times(c,x)))),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),IntegerQ(m)),Or(Greater(m,C0),PositiveIntegerQ(pn))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(Plus(pd,Times(pe,x)),m),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,m,pn),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),m_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(Plus(pd,Times(pe,x)),m),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,m,pn),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,x)),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x),x),And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),IntegerQ(p)),PositiveIntegerQ(pn)),Or(PositiveIntegerQ(p),NonzeroQ(a))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,x)),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x),x),And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),IntegerQ(p)),PositiveIntegerQ(pn)),Or(PositiveIntegerQ(p),NonzeroQ(a))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(x,m),Power(Plus(pd,Times(pe,x)),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,m,pn,p),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_DEFAULT),p_DEFAULT),Power(x_,m_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(x,m),Power(Plus(pd,Times(pe,x)),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,m,pn,p),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(Times(pd,f),Times(pe,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x),And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(Times(pe,f),Times(pd,g)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(Times(pd,f),Times(pe,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x),And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(Times(pe,f),Times(pd,g)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x))),Power(Plus(Times(pd,f),Times(pe,g,Sqr(x))),CN1D2),Int(Times(Power(Plus(Times(pd,f),Times(pe,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x)),And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(Times(pe,f),Times(pd,g)))),PositiveIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x))),Power(Plus(Times(pd,f),Times(pe,g,Sqr(x))),CN1D2),Int(Times(Power(Plus(Times(pd,f),Times(pe,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x)),And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(Times(pe,f),Times(pd,g)))),PositiveIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(Times(pd,f),Times(pe,g,Sqr(x)))),Power(Times(Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1),Int(Times(Power(Plus(Times(pd,f),Times(pe,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x)),And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(Times(pe,f),Times(pd,g)))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(Times(pd,f),Times(pe,g,Sqr(x)))),Power(Times(Sqrt(Plus(pd,Times(pe,x))),Sqrt(Plus(f,Times(g,x)))),CN1),Int(Times(Power(Plus(Times(pd,f),Times(pe,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x)),And(And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),ZeroQ(Plus(Times(pe,f),Times(pd,g)))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))))),
ISetDelayed(Int(Times(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcSin(Times(c,x)))),u,x),Times(CN1,b,c,Int(SimplifyIntegrand(Times(u,Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x),x)))),And(FreeQ(List(a,b,c,pd,pe,f,g),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcCos(Times(c,x)))),u,x),Times(b,c,Int(SimplifyIntegrand(Times(u,Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x),x)))),And(FreeQ(List(a,b,c,pd,pe,f,g),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcSin(Times(c,x)))),u,x),Times(CN1,b,c,Int(Dist(Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2),u,x),x)))),And(FreeQ(List(a,b,c,pd,pe,f,g),x),NegativeIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcCos(Times(c,x)))),u,x),Times(b,c,Int(Dist(Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2),u,x),x)))),And(FreeQ(List(a,b,c,pd,pe,f,g),x),NegativeIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x),x),And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x),x),And(FreeQ(List(a,b,c,pd,pe,f,g,pn),x),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,f,g,pn,p),x))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(g_DEFAULT,x_),f_),p_DEFAULT),Power(Plus(Times(x_,pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition($(Defer($s("Int")),Times(Power(Plus(pd,Times(pe,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x),FreeQ(List(a,b,c,pd,pe,f,g,pn,p),x))),
ISetDelayed(Int(Times(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Power(Plus(pd,Times(pe,Sqr(x))),p),x)))),Plus(Dist(Plus(a,Times(b,ArcSin(Times(c,x)))),u,x),Times(CN1,b,c,Int(SimplifyIntegrand(Times(u,Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x),x)))),And(FreeQ(List(a,b,c,pd,pe),x),Or(PositiveIntegerQ(p),NegativeIntegerQ(Plus(p,C1D2)))))),
ISetDelayed(Int(Times(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Power(Plus(pd,Times(pe,Sqr(x))),p),x)))),Plus(Dist(Plus(a,Times(b,ArcCos(Times(c,x)))),u,x),Times(b,c,Int(SimplifyIntegrand(Times(u,Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2)),x),x)))),And(FreeQ(List(a,b,c,pd,pe),x),Or(PositiveIntegerQ(p),NegativeIntegerQ(Plus(p,C1D2)))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),CN1D2)),x_Symbol),
    Condition(Times(Power(Times(b,c,Sqrt(pd)),CN1),Subst(Int(Power(x,pn),x),x,Plus(a,Times(b,ArcSin(Times(c,x)))))),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveQ(pd)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),CN1D2)),x_Symbol),
    Condition(Times(CN1,Power(Times(b,c,Sqrt(pd)),CN1),Subst(Int(Power(x,pn),x),x,Plus(a,Times(b,ArcCos(Times(c,x)))))),And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveQ(pd)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(pd,Times(pe,Sqr(x))),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn),Power(Plus(Times(C2,p),C1),CN1)),Times(CN1,b,c,pn,Sqrt(pd),Power(Plus(Times(C2,p),C1),CN1),Int(Times(x,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(C2,pd,p,Power(Plus(Times(C2,p),C1),CN1),Int(Times(Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,Times(CN1,C1))),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(Times(C2,p))),PositiveQ(pd)),RationalQ(pn)),Greater(pn,C0)),Greater(p,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(pd,Times(pe,Sqr(x))),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn),Power(Plus(Times(C2,p),C1),CN1)),Times(b,c,pn,Sqrt(pd),Power(Plus(Times(C2,p),C1),CN1),Int(Times(x,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(C2,pd,p,Power(Plus(Times(C2,p),C1),CN1),Int(Times(Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,Times(CN1,C1))),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(Times(C2,p))),PositiveQ(pd)),RationalQ(pn)),Greater(pn,C0)),Greater(p,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),CN1)),x_Symbol),
    Condition(Times(Power(Times(c,pd),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Sec(x)),x),x,ArcSin(Times(c,x)))),And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveQ(pd)),PositiveIntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),CN1)),x_Symbol),
    Condition(Times(CN1,Power(Times(c,pd),CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Csc(x)),x),x,ArcCos(Times(c,x)))),And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveQ(pd)),PositiveIntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),QQ(-3L,2L))),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn),Power(Times(pd,Sqrt(Plus(pd,Times(pe,Sqr(x))))),CN1)),Times(CN1,b,c,pn,Power(pd,CN1D2),Int(Times(x,Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Plus(pd,Times(pe,Sqr(x))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveQ(pd)),RationalQ(pn)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),QQ(-3L,2L))),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn),Power(Times(pd,Sqrt(Plus(pd,Times(pe,Sqr(x))))),CN1)),Times(b,c,pn,Power(pd,CN1D2),Int(Times(x,Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,Times(CN1,C1))),Power(Plus(pd,Times(pe,Sqr(x))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveQ(pd)),RationalQ(pn)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,x,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn),Power(Times(C2,pd,Plus(p,C1)),CN1)),Times(b,c,pn,Power(Times(C2,Sqrt(pd),Plus(p,C1)),CN1),Int(Times(x,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(Plus(Times(C2,p),C3),Power(Times(C2,pd,Plus(p,C1)),CN1),Int(Times(Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(Times(C2,p))),PositiveQ(pd)),RationalQ(pn)),Greater(pn,C0)),Less(p,CN1)),Unequal(p,QQ(-2L,3L))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,x,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn),Power(Times(C2,pd,Plus(p,C1)),CN1)),Times(CN1,b,c,pn,Power(Times(C2,Sqrt(pd),Plus(p,C1)),CN1),Int(Times(x,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,Times(CN1,C1)))),x)),Times(Plus(Times(C2,p),C3),Power(Times(C2,pd,Plus(p,C1)),CN1),Int(Times(Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(Times(C2,p))),PositiveQ(pd)),RationalQ(pn)),Greater(pn,C0)),Less(p,CN1)),Unequal(p,QQ(-2L,3L))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Sqrt(pd),Plus(pn,C1)),CN1)),Times(CN1,pe,Plus(Times(C2,p),C1),Power(Times(b,c,Sqrt(pd),Plus(pn,C1)),CN1),Int(Times(x,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),Plus(pn,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(Times(C2,p))),PositiveQ(pd)),RationalQ(pn)),Less(pn,CN1)),Unequal(p,CN1D2)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,C1)),Power(Times(b,c,Sqrt(pd),Plus(pn,C1)),CN1)),Times(pe,Plus(Times(C2,p),C1),Power(Times(b,c,Sqrt(pd),Plus(pn,C1)),CN1),Int(Times(x,Power(Plus(pd,Times(pe,Sqr(x))),Plus(p,Times(CN1,C1D2))),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),Plus(pn,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(Times(C2,p))),PositiveQ(pd)),RationalQ(pn)),Less(pn,CN1)),Unequal(p,CN1D2)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Power(c,CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Power(Cos(x),Plus(Times(C2,p),C1))),x),x,ArcSin(Times(c,x)))),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveIntegerQ(Times(C2,p))),PositiveQ(pd)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(pd,p),Power(c,CN1),Subst(Int(Times(Power(Plus(a,Times(b,x)),pn),Power(Sin(x),Plus(Times(C2,p),C1))),x),x,ArcCos(Times(c,x)))),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveIntegerQ(Times(C2,p))),PositiveQ(pd)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Int(Times(Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(p)),Not(PositiveQ(pd))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,p),Int(Times(Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),IntegerQ(p)),Not(PositiveQ(pd))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Power(pd,Plus(p,Times(CN1,C1D2))),Sqrt(Plus(pd,Times(pe,Sqr(x)))),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2),Int(Times(Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveIntegerQ(Plus(p,C1D2))),Not(PositiveQ(pd))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Power(pd,Plus(p,Times(CN1,C1D2))),Sqrt(Plus(pd,Times(pe,Sqr(x)))),Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),CN1D2),Int(Times(Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),PositiveIntegerQ(Plus(p,C1D2))),Not(PositiveQ(pd))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Power(pd,Plus(p,C1D2)),Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Plus(pd,Times(pe,Sqr(x))),CN1D2),Int(Times(Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))),Not(PositiveQ(pd))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_),p_)),x_Symbol),
    Condition(Times(Power(pd,Plus(p,C1D2)),Sqrt(Plus(C1,Times(CN1,Sqr(c),Sqr(x)))),Power(Plus(pd,Times(pe,Sqr(x))),CN1D2),Int(Times(Power(Plus(C1,Times(CN1,Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(Times(Sqr(c),pd),pe))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))),Not(PositiveQ(pd))))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcSin(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,Sqr(x))),p),Power(Plus(a,Times(b,ArcSin(Times(c,x)))),pn)),x),x),And(FreeQ(List(a,b,c,pd,pe,pn),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(Times(ArcCos(Times(c_DEFAULT,x_)),b_DEFAULT),a_DEFAULT),pn_DEFAULT),Power(Plus(Times(Sqr(x_),pe_DEFAULT),pd_DEFAULT),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(pd,Times(pe,Sqr(x))),p),Power(Plus(a,Times(b,ArcCos(Times(c,x)))),pn)),x),x),And(FreeQ(List(a,b,c,pd,pe,pn),x),PositiveIntegerQ(p))))
  );
}
