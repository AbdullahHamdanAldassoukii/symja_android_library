package org.matheclipse.core.integrate.rubi;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IndefiniteIntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IndefiniteIntegrationRules2 { 
  public static IAST RULES = List( 
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),CN1D2),$p(x,SymbolHead)),
    Condition(Times(ArcTanh(Times(Sqrt(Plus(a,Times(b,Power(x,C2)))),Power(Times(Rt(b,C2),x),CN1))),Power(Rt(b,C2),CN1)),And(And(FreeQ(List(a,b),x),Not(PositiveQ(a))),PosQ(b)))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),CN1D2),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,ArcTan(Times(Sqrt(Plus(a,Times(b,Power(x,C2)))),Power(Times(Rt(Times(CN1,b),C2),x),CN1)))),Power(Rt(Times(CN1,b),C2),CN1)),And(And(FreeQ(List(a,b),x),Not(PositiveQ(a))),NegQ(b)))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C4),$p(b,true)),$p(a)),CN1D2),$p(x,SymbolHead)),
    Condition(Times(EllipticF(ArcSin(Times(Rt(Times(Times(CN1,b),Power(a,CN1)),C4),x)),CN1),Power(Times(Rt(Times(Times(CN1,b),Power(a,CN1)),C4),Sqrt(a)),CN1)),And(FreeQ(List(a,b),x),PositiveQ(a)))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C4),$p(b,true)),$p(a)),CN1D2),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Times(Plus(a,Times(b,Power(x,C4))),Power(a,CN1))),Times(EllipticF(ArcSin(Times(Rt(Times(Times(CN1,b),Power(a,CN1)),C4),x)),CN1),Power(Times(Rt(Times(Times(CN1,b),Power(a,CN1)),C4),Sqrt(Plus(a,Times(b,Power(x,C4))))),CN1))),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),integer(-2L)),$p(b,true)),$p(a,true)),C1D2),$p(x,SymbolHead)),
    Condition(Times(CN1,Subst(Int(Times(Sqrt(Plus(a,Times(b,Power(x,C2)))),Power(Power(x,C2),CN1)),x),x,Power(x,CN1))),FreeQ(List(a,b),x))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),$p(x,SymbolHead)),
    Condition(Times(x,Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(a,CN1))),And(FreeQ(List(a,b,n,p),x),ZeroQ(Plus(Times(n,Plus(p,C1)),C1))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),$p(x,SymbolHead)),
    Condition(Plus(Times(x,Times(Power(Plus(a,Times(b,Power(x,n))),p),Power(Plus(Times(n,p),C1),CN1))),Dist(Times(Times(n,p),Times(a,Power(Plus(Times(n,p),C1),CN1))),Int(Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1))),x))),And(And(And(FreeQ(List(a,b,n),x),FractionQ(p)),Greater(p,C0)),NonzeroQ(Plus(Times(n,p),C1))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(CN1,x),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(Times(n,Plus(p,C1)),a),CN1))),Dist(Times(Plus(Times(n,Plus(p,C1)),C1),Power(Times(Times(n,Plus(p,C1)),a),CN1)),Int(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),x))),And(And(FreeQ(List(a,b,n),x),FractionQ(p)),Less(p,CN1)))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),CN1),$p(b,true)),$p(a)),$p(p)),$p(x,SymbolHead)),
    Condition(Plus(Times(x,Times(Power(Plus(a,Times(b,Power(x,CN1))),Plus(p,C1)),Power(a,CN1))),Dist(Times(b,Times(p,Power(a,CN1))),Int(Times(Power(Plus(a,Times(b,Power(x,CN1))),p),Power(x,CN1)),x))),And(FreeQ(List(a,b,p),x),Not(IntIntegerQ(p))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Denominator(p))),Dist(Times(q,Times(Power(a,Plus(p,Power(n,CN1))),Power(n,CN1))),Subst(Int(Times(Power(x,Plus(Times(q,Power(n,CN1)),Times(CN1,C1))),Power(Power(Plus(C1,Times(CN1,Times(b,Power(x,q)))),Plus(Plus(p,Power(n,CN1)),C1)),CN1)),x),x,Times(Power(x,Times(n,Power(q,CN1))),Power(Power(Plus(a,Times(b,Power(x,n))),Power(q,CN1)),CN1))))),And(And(And(FreeQ(List(a,b),x),RationalQ(List(p,n))),Less(Less(CN1,p),C0)),IntIntegerQ(Plus(p,Power(n,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Dist(Power(Plus(m,C1),CN1),Subst(Int(Power(Plus(a,Times(b,Power(x,Times(n,Power(Plus(m,C1),CN1))))),p),x),x,Power(x,Plus(m,C1)))),And(And(And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(m,C1))),IntIntegerQ(Times(n,Power(Plus(m,C1),CN1)))),Greater(Times(n,Power(Plus(m,C1),CN1)),C1)),Not(IntIntegerQ(List(m,n,p)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Times(Power(x,Plus(m,Times(n,p))),Power(Plus(b,Times(a,Power(Power(x,n),CN1))),p)),x),And(And(And(And(FreeQ(List(a,b,m),x),FractionQ(n)),Less(n,C0)),IntIntegerQ(p)),Less(p,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(a,Times(b,Power(x,n))),p),Power(Plus(m,C1),CN1))),Times(CN1,Dist(Times(Times(b,n),Times(p,Power(Plus(m,C1),CN1))),Int(Times(Power(x,Plus(m,n)),Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1)))),x)))),And(And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),FractionQ(p)),Greater(p,C0)),Or(And(Greater(n,C0),Less(m,CN1)),And(Less(C0,Times(CN1,n)),LessEqual(Times(CN1,n),Plus(m,C1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(Plus(m,Times(CN1,n)),C1)),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(Times(b,n),Plus(p,C1)),CN1))),Times(CN1,Dist(Times(Plus(Plus(m,Times(CN1,n)),C1),Power(Times(Times(b,n),Plus(p,C1)),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1))),x)))),And(And(And(And(And(FreeQ(List(a,b),x),IntIntegerQ(List(m,n))),FractionQ(p)),Or(And(Less(C0,n),LessEqual(n,m)),And(LessEqual(m,n),Less(n,C0)))),Less(p,CN1)),NonzeroQ(Plus(Plus(m,Times(CN1,n)),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(a,Times(b,Power(x,n))),p),Power(Plus(Plus(m,Times(n,p)),C1),CN1))),Dist(Times(Times(n,p),Times(a,Power(Plus(Plus(m,Times(n,p)),C1),CN1))),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(Plus(m,Times(n,p)),C1))),FractionQ(p)),Greater(p,C0)),Not(And(IntIntegerQ(Times(Plus(m,C1),Power(n,CN1))),Greater(Times(Plus(m,C1),Power(n,CN1)),C0)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(CN1,Power(x,Plus(m,C1))),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(Times(a,n),Plus(p,C1)),CN1))),Dist(Times(Plus(Plus(m,Times(n,Plus(p,C1))),C1),Power(Times(Times(a,n),Plus(p,C1)),CN1)),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1))),x))),And(And(And(And(FreeQ(List(a,b,m,n),x),FractionQ(p)),Less(p,CN1)),NonzeroQ(Plus(Plus(m,Times(n,Plus(p,C1))),C1))),NonzeroQ(Plus(Plus(m,Times(CN1,n)),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(Plus(m,Times(CN1,n)),C1)),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(b,Plus(Plus(m,Times(n,p)),C1)),CN1))),Times(CN1,Dist(Times(a,Times(Plus(Plus(m,Times(CN1,n)),C1),Power(Times(b,Plus(Plus(m,Times(n,p)),C1)),CN1))),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(x,n))),p)),x)))),And(And(And(And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(Plus(m,Times(n,p)),C1))),NonzeroQ(Plus(Plus(m,Times(CN1,n)),C1))),NonzeroQ(Plus(m,C1))),Not(IntIntegerQ(List(m,n,p)))),Or(Or(Or(Or(And(And(IntIntegerQ(List(m,n)),Or(And(Less(C0,n),LessEqual(n,m)),And(LessEqual(m,n),Less(n,C0)))),Or(Not(RationalQ(p)),Less(Less(CN1,p),C0))),And(And(IntIntegerQ(Times(Plus(m,C1),Power(n,CN1))),Less(C0,Times(Plus(m,C1),Power(n,CN1)))),Not(FractionQ(n)))),And(Not(RationalQ(m)),RationalQ(Plus(m,Times(CN1,n))))),And(RationalQ(n),MatchQ(m,Condition(Plus($p(u),$p(q)),And(RationalQ(q),Or(And(Less(C0,n),LessEqual(n,q)),And(Less(n,C0),Less(q,C0)))))))),MatchQ(m,Condition(Plus($p(u),Times($p(q,true),n)),And(RationalQ(q),GreaterEqual(q,C1)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1))),Times(CN1,Dist(Times(b,Times(Plus(Plus(m,Times(n,Plus(p,C1))),C1),Power(Times(a,Plus(m,C1)),CN1))),Int(Times(Power(x,Plus(m,n)),Power(Plus(a,Times(b,Power(x,n))),p)),x)))),And(And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(m,C1))),Not(IntIntegerQ(List(m,n,p)))),Or(Or(Or(And(IntIntegerQ(List(m,n)),Or(And(Greater(n,C0),Less(m,CN1)),And(Less(C0,Times(CN1,n)),LessEqual(Times(CN1,n),Plus(m,C1))))),And(Not(RationalQ(m)),RationalQ(Plus(m,n)))),And(RationalQ(n),MatchQ(m,Condition(Plus($p(u),$p(q)),And(RationalQ(q),Or(And(Greater(n,C0),Less(q,C0)),And(Less(C0,Times(CN1,n)),LessEqual(Times(CN1,n),q)))))))),MatchQ(m,Condition(Plus($p(u),Times($p(q),n)),And(RationalQ(q),Less(q,C0)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Denominator(p))),Times(Times(q,Times(Power(a,Plus(p,Times(Plus(m,C1),Power(n,CN1)))),Power(n,CN1))),Subst(Int(Times(Power(x,Plus(Times(q,Times(Plus(m,C1),Power(n,CN1))),Times(CN1,C1))),Power(Power(Plus(C1,Times(CN1,Times(b,Power(x,q)))),Plus(Plus(p,Times(Plus(m,C1),Power(n,CN1))),C1)),CN1)),x),x,Times(Power(x,Times(n,Power(q,CN1))),Power(Power(Plus(a,Times(b,Power(x,n))),Power(q,CN1)),CN1))))),And(And(And(And(FreeQ(List(a,b),x),RationalQ(List(m,n,p))),Less(Less(CN1,p),C0)),IntIntegerQ(Plus(p,Times(Plus(m,C1),Power(n,CN1))))),Equal(GCD(Plus(m,C1),n),C1)))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(n,true)),$p(v,true)),$p(w)),Power($p(x),$p(m,true)),$p(u,true)),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Times(u,v),Power(x,Plus(m,n))),x),Int(Times(Times(u,w),Power(x,m)),x)),And(FreeQ(List(m,n),x),Not(IntPolynomialQ(w,x))))),
SetDelayed(Int(Power(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true)),Power($p(x),$p(m,true))),CN1D2),$p(x,SymbolHead)),
    Condition(Times(C2,Times(ArcTanh(Times(x,Times(Rt(b,C2),Power(Sqrt(Times(Power(x,m),Plus(a,Times(b,Power(x,n))))),CN1)))),Power(Times(n,Rt(b,C2)),CN1))),And(And(FreeQ(List(a,b,n,m),x),ZeroQ(Plus(Plus(m,n),Times(CN1,C2)))),PosQ(b)))),
SetDelayed(Int(Power(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true)),Power($p(x),$p(m))),CN1D2),$p(x,SymbolHead)),
    Condition(Times(C2,Times(ArcTan(Times(x,Times(Rt(Times(CN1,b),C2),Power(Sqrt(Times(Power(x,m),Plus(a,Times(b,Power(x,n))))),CN1)))),Power(Times(n,Rt(Times(CN1,b),C2)),CN1))),And(And(FreeQ(List(a,b,n,m),x),ZeroQ(Plus(Plus(m,n),Times(CN1,C2)))),NegQ(b)))),
SetDelayed(Int(Power(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a)),Power($p(x),$p(m,true))),$p(p)),$p(x,SymbolHead)),
    Condition(Times(Power(Times(Power(x,m),Plus(a,Times(b,Power(x,n)))),Plus(p,C1)),Power(Times(Times(Times(b,n),Plus(p,C1)),Power(x,Times(m,Plus(p,C1)))),CN1)),And(And(FreeQ(List(a,b,m,n,p),x),ZeroQ(Plus(Plus(Times(m,p),Times(CN1,n)),C1))),NonzeroQ(Plus(p,C1))))),
SetDelayed(Int(Times(Power(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a)),Power($p(x),$p(m,true))),$p(p)),Power($p(x),$p(q,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Times(Power(x,m),Plus(a,Times(b,Power(x,n)))),Plus(p,C1)),Power(Times(Times(Times(b,n),Plus(p,C1)),Power(x,Times(m,Plus(p,C1)))),CN1)),And(And(FreeQ(List(a,b,m,n,p),x),ZeroQ(Plus(Plus(Plus(q,Times(m,p)),Times(CN1,n)),C1))),NonzeroQ(Plus(p,C1))))),
SetDelayed(Int(Power(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a)),Power($p(x),$p(m,true))),$p(p,true)),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,Power(Times(Power(x,m),Plus(a,Times(b,Power(x,n)))),Plus(p,C1))),Power(Times(Times(Times(a,n),Plus(p,C1)),Power(x,Plus(m,Times(CN1,C1)))),CN1)),And(And(FreeQ(List(a,b,m,n,p),x),ZeroQ(Plus(Plus(Times(m,p),Times(n,Plus(p,C1))),C1))),NonzeroQ(Plus(p,C1))))),
SetDelayed(Int(Times(Power(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a)),Power($p(x),$p(m,true))),$p(p,true)),Power($p(x),$p(q,true))),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,Power(Times(Power(x,m),Plus(a,Times(b,Power(x,n)))),Plus(p,C1))),Power(Times(Times(Times(a,n),Plus(p,C1)),Power(x,Plus(Plus(m,Times(CN1,C1)),Times(CN1,q)))),CN1)),And(And(FreeQ(List(a,b,m,n,p,q),x),ZeroQ(Plus(Plus(Plus(C1,q),Times(m,p)),Times(n,Plus(p,C1))))),NonzeroQ(Plus(p,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a,true)),CN1),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(x,Power(Sqrt(Plus(c,Times(d,Power(x,C2)))),CN1)),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Times(a,d),Times(CN1,Times(b,c))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),CN1),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(ArcTanh(Times(x,Times(Rt(Times(Plus(Times(a,d),Times(CN1,Times(b,c))),Power(a,CN1)),C2),Power(Sqrt(Plus(c,Times(d,Power(x,C2)))),CN1)))),Power(Times(a,Rt(Times(Plus(Times(a,d),Times(CN1,Times(b,c))),Power(a,CN1)),C2)),CN1)),And(FreeQ(List(a,b,c,d),x),PosQ(Times(Plus(Times(a,d),Times(CN1,Times(b,c))),Power(a,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),CN1),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(ArcTan(Times(x,Times(Rt(Times(Plus(Times(b,c),Times(CN1,Times(a,d))),Power(a,CN1)),C2),Power(Sqrt(Plus(c,Times(d,Power(x,C2)))),CN1)))),Power(Times(a,Rt(Times(Plus(Times(b,c),Times(CN1,Times(a,d))),Power(a,CN1)),C2)),CN1)),And(FreeQ(List(a,b,c,d),x),NegQ(Times(Plus(Times(a,d),Times(CN1,Times(b,c))),Power(a,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),CN1D2),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(EllipticF(ArcSin(Times(Rt(Times(Times(CN1,d),Power(c,CN1)),C2),x)),Times(b,Times(c,Power(Times(a,d),CN1)))),Power(Times(Rt(Times(Times(CN1,d),Power(c,CN1)),C2),Sqrt(Times(a,c))),CN1)),And(And(And(FreeQ(List(a,b,c,d),x),PositiveQ(a)),PositiveQ(c)),Or(And(PositiveQ(Times(Times(CN1,d),Power(c,CN1))),NonzeroQ(Plus(a,b))),Not(And(PositiveQ(Times(Times(CN1,b),Power(a,CN1))),NonzeroQ(Plus(c,d)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),CN1D2),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(Times(Sqrt(Times(Plus(a,Times(b,Power(x,C2))),Power(a,CN1))),Sqrt(Times(Plus(c,Times(d,Power(x,C2))),Power(c,CN1)))),Times(EllipticF(ArcSin(Times(Rt(Times(Times(CN1,d),Power(c,CN1)),C2),x)),Times(b,Times(c,Power(Times(a,d),CN1)))),Power(Times(Times(Rt(Times(Times(CN1,d),Power(c,CN1)),C2),Sqrt(Plus(a,Times(b,Power(x,C2))))),Sqrt(Plus(c,Times(d,Power(x,C2))))),CN1))),And(FreeQ(List(a,b,c,d),x),Or(And(PositiveQ(Times(Times(CN1,d),Power(c,CN1))),NonzeroQ(Plus(a,b))),Not(And(PositiveQ(Times(Times(CN1,b),Power(a,CN1))),NonzeroQ(Plus(c,d)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),C1D2),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Times(a,Power(c,CN1))),Times(EllipticE(ArcSin(Times(Rt(Times(Times(CN1,d),Power(c,CN1)),C2),x)),Times(b,Times(c,Power(Times(a,d),CN1)))),Power(Rt(Times(Times(CN1,d),Power(c,CN1)),C2),CN1))),And(And(FreeQ(List(a,b,c,d),x),PositiveQ(a)),PositiveQ(c)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),C1D2),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(Times(Sqrt(Plus(a,Times(b,Power(x,C2)))),Sqrt(Times(Plus(c,Times(d,Power(x,C2))),Power(c,CN1)))),Times(EllipticE(ArcSin(Times(Rt(Times(Times(CN1,d),Power(c,CN1)),C2),x)),Times(b,Times(c,Power(Times(a,d),CN1)))),Power(Times(Times(Rt(Times(Times(CN1,d),Power(c,CN1)),C2),Sqrt(Times(Plus(a,Times(b,Power(x,C2))),Power(a,CN1)))),Sqrt(Plus(c,Times(d,Power(x,C2))))),CN1))),FreeQ(List(a,b,c,d),x))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)),$p(p)),Power(Plus(Times(Power($p(x),$p(n)),$p(d,true)),$p(c,true)),$p(q,true))),$p(x,SymbolHead)),
    Condition(Dist(Times(b,Power(d,CN1)),Int(Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1))),Power(Plus(c,Times(d,Power(x,n))),Plus(q,C1))),x)),And(And(And(And(FreeQ(List(a,b,c,d,n),x),RationalQ(List(p,q))),Greater(p,C0)),LessEqual(q,CN1)),ZeroQ(Plus(Times(a,d),Times(CN1,Times(b,c))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)),$p(p)),Power(Plus(Times(Power($p(x),$p(n)),$p(d,true)),$p(c,true)),$p(q,true))),$p(x,SymbolHead)),
    Condition(Plus(Dist(Times(Plus(Times(a,d),Times(CN1,Times(b,c))),Power(d,CN1)),Int(Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1))),Power(Plus(c,Times(d,Power(x,n))),q)),x)),Dist(Times(b,Power(d,CN1)),Int(Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1))),Power(Plus(c,Times(d,Power(x,n))),Plus(q,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,n),x),RationalQ(List(p,q))),Greater(p,C0)),LessEqual(q,CN1)),NonzeroQ(Plus(Times(a,d),Times(CN1,Times(b,c))))),IntIntegerQ(n)),Greater(n,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)),$p(p,true)),Power(Plus(Times(Power($p(x),$p(n)),$p(d,true)),$p(c,true)),$p(q,true))),$p(x,SymbolHead)),
    Condition(Plus(Dist(Times(b,Power(Plus(Times(b,c),Times(CN1,Times(a,d))),CN1)),Int(Times(Power(Plus(a,Times(b,Power(x,n))),p),Power(Plus(c,Times(d,Power(x,n))),Plus(q,C1))),x)),Times(CN1,Dist(Times(d,Power(Plus(Times(b,c),Times(CN1,Times(a,d))),CN1)),Int(Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Plus(c,Times(d,Power(x,n))),q)),x)))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,n),x),RationalQ(List(p,q))),Less(p,CN1)),LessEqual(q,CN1)),NonzeroQ(Plus(Times(b,c),Times(CN1,Times(a,d))))),IntIntegerQ(n)),Greater(n,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),CN1D2),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2),Power($p(x),C2)),$p(x,SymbolHead)),
    Condition(Plus(Dist(Power(b,CN1),Int(Times(Sqrt(Plus(a,Times(b,Power(x,C2)))),Power(Sqrt(Plus(c,Times(d,Power(x,C2)))),CN1)),x)),Times(CN1,Dist(Times(a,Power(b,CN1)),Int(Power(Times(Sqrt(Plus(a,Times(b,Power(x,C2)))),Sqrt(Plus(c,Times(d,Power(x,C2))))),CN1),x)))),FreeQ(List(a,b,c,d),x))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(a)),C1D2),Power(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c)),CN1D2),Power($p(x),C2)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(x,Sqrt(Plus(a,Times(b,Power(x,C2))))),Times(Sqrt(Plus(c,Times(d,Power(x,C2)))),Power(Times(C3,d),CN1))),Times(CN1,Dist(Power(Times(C3,d),CN1),Int(Times(Plus(Times(a,c),Times(Plus(Times(Times(C2,b),c),Times(CN1,Times(a,d))),Power(x,C2))),Power(Times(Sqrt(Plus(a,Times(b,Power(x,C2)))),Sqrt(Plus(c,Times(d,Power(x,C2))))),CN1)),x)))),FreeQ(List(a,b,c,d),x))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true)),Power(Plus(Times(Power($p(x),$p(p,true)),$p(d,true)),$p(c)),CN1),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(a,Times(Log(x),Power(c,CN1))),Dist(Power(c,CN1),Int(Times(Power(x,Plus(n,Times(CN1,C1))),Times(Plus(Times(b,c),Times(CN1,Times(Times(a,d),Power(x,Plus(p,Times(CN1,n)))))),Power(Plus(c,Times(d,Power(x,p))),CN1))),x))),And(And(FreeQ(List(a,b,c,d),x),FractionQ(List(n,p))),And(Less(C0,n),LessEqual(n,p))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true)),Power(Plus(Times(Power($p(x),$p(p,true)),$p(d,true)),$p(c)),CN1),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(a,Times(Log(x),Power(c,CN1))),Dist(Power(c,CN1),Int(Times(Power(x,Plus(p,Times(CN1,C1))),Times(Plus(Times(Times(CN1,a),d),Times(Times(b,c),Power(x,Plus(n,Times(CN1,p))))),Power(Plus(c,Times(d,Power(x,p))),CN1))),x))),And(And(FreeQ(List(a,b,c,d),x),FractionQ(List(n,p))),Less(Less(C0,p),n)))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true)),Power(Plus(Times(Power($p(x),$p(p,true)),$p(d,true)),$p(c)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(a,Times(Power(x,Plus(m,C1)),Power(Times(c,Plus(m,C1)),CN1))),Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,n)),Times(Plus(Times(b,c),Times(CN1,Times(Times(a,d),Power(x,Plus(p,Times(CN1,n)))))),Power(Plus(c,Times(d,Power(x,p))),CN1))),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(List(m,n,p))),Less(m,CN1)),And(Less(C0,n),LessEqual(n,p))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true)),Power(Plus(Times(Power($p(x),$p(p,true)),$p(d,true)),$p(c)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(a,Times(Power(x,Plus(m,C1)),Power(Times(c,Plus(m,C1)),CN1))),Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,p)),Times(Plus(Times(Times(CN1,a),d),Times(Times(b,c),Power(x,Plus(n,Times(CN1,p))))),Power(Plus(c,Times(d,Power(x,p))),CN1))),x))),And(And(And(FreeQ(List(a,b,c,d),x),FractionQ(List(m,n,p))),Less(m,CN1)),And(Less(C0,p),LessEqual(p,n))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a)),$p(n)),$p(x,SymbolHead)),
    Condition(Int(Regularize(Power(Times(Power(Plus(Times(C1D2,b),Times(c,x)),C2),Power(c,CN1)),n),x),x),And(And(FreeQ(List(a,b,c,n),x),Not(IntIntegerQ(n))),ZeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a)),$p(n)),$p(u)),$p(x,SymbolHead)),
    Condition(Int(Regularize(Times(u,Power(Times(Power(Plus(Times(C1D2,b),Times(c,x)),C2),Power(c,CN1)),n)),x),x),And(And(And(FreeQ(List(a,b,c,n),x),Not(IntIntegerQ(n))),ZeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))),Or(MonomialQ(u,x),LinearQ(u,x))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),CN1D2),$p(x,SymbolHead)),
    Condition(Times(ArcSinh(Times(Plus(b,Times(Times(C2,c),x)),Power(Times(Sqrt(Plus(Times(C4,a),Times(CN1,Times(Power(b,C2),Power(c,CN1))))),Rt(c,C2)),CN1))),Power(Rt(c,C2),CN1)),And(And(FreeQ(List(a,b,c),x),PositiveQ(Plus(Times(C4,a),Times(CN1,Times(Power(b,C2),Power(c,CN1)))))),PosQ(c)))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),CN1D2),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,ArcSin(Times(Plus(b,Times(Times(C2,c),x)),Power(Times(Sqrt(Plus(Times(C4,a),Times(CN1,Times(Power(b,C2),Power(c,CN1))))),Rt(Times(CN1,c),C2)),CN1)))),Power(Rt(Times(CN1,c),C2),CN1)),And(And(FreeQ(List(a,b,c),x),PositiveQ(Plus(Times(C4,a),Times(CN1,Times(Power(b,C2),Power(c,CN1)))))),NegQ(c)))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),CN1D2),$p(x,SymbolHead)),
    Condition(Times(ArcTanh(Times(Times(Times(C2,Rt(c,C2)),Sqrt(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))))),Power(Plus(b,Times(Times(C2,c),x)),CN1))),Power(Rt(c,C2),CN1)),And(And(FreeQ(List(a,b,c),x),PosQ(c)),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),CN1D2),$p(x,SymbolHead)),
    Condition(Times(ArcTan(Times(Times(Times(C2,Rt(Times(CN1,c),C2)),Sqrt(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))))),Power(Plus(b,Times(Times(C2,c),x)),CN1))),Power(Rt(Times(CN1,c),C2),CN1)),And(And(FreeQ(List(a,b,c),x),NegQ(c)),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),$p(a,true)),CN1D2),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2))))),Condition(Times(Times(CN1,ArcTanh(Times(Times(Rt(q,C2),Sqrt(Plus(a,Times(c,Power(x,C2))))),Power(Plus(Times(a,e),Times(CN1,Times(Times(c,d),x))),CN1)))),Power(Rt(q,C2),CN1)),PosQ(q))),FreeQ(List(a,c,d,e),x))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),$p(a,true)),CN1D2),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Plus(Times(c,Power(d,C2)),Times(a,Power(e,C2))))),Condition(Times(Times(CN1,ArcTan(Times(Times(Rt(Times(CN1,q),C2),Sqrt(Plus(a,Times(c,Power(x,C2))))),Power(Plus(Times(a,e),Times(CN1,Times(Times(c,d),x))),CN1)))),Power(Rt(Times(CN1,q),C2),CN1)),NegQ(q))),FreeQ(List(a,c,d,e),x))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),CN1D2),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Times(Times(integer(-2L),e),Times(Sqrt(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2)))),Power(Times(Plus(Times(b,e),Times(CN1,Times(Times(C2,c),d))),Plus(d,Times(e,x))),CN1))),And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),CN1D2),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))))),Condition(Times(Times(CN1,ArcTanh(Times(Times(Times(C2,Rt(q,C2)),Sqrt(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))))),Power(Plus(Plus(Times(Times(C2,a),e),Times(CN1,Times(b,d))),Times(Plus(Times(b,e),Times(CN1,Times(Times(C2,c),d))),x)),CN1)))),Power(Rt(q,C2),CN1)),PosQ(q))),FreeQ(List(a,b,c,d,e),x))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),CN1D2),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))))),Condition(Times(Times(CN1,ArcTan(Times(Times(Times(C2,Rt(Times(CN1,q),C2)),Sqrt(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))))),Power(Plus(Plus(Times(Times(C2,a),e),Times(CN1,Times(b,d))),Times(Plus(Times(b,e),Times(CN1,Times(Times(C2,c),d))),x)),CN1)))),Power(Rt(Times(CN1,q),C2),CN1)),NegQ(q))),FreeQ(List(a,b,c,d,e),x))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),$p(n)),$p(x,SymbolHead)),
    Condition(Plus(Times(Plus(b,Times(Times(C2,c),x)),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n),Power(Times(Times(C2,c),Plus(Times(C2,n),C1)),CN1))),Times(CN1,Dist(Times(n,Times(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),Power(Times(Times(C2,c),Plus(Times(C2,n),C1)),CN1))),Int(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,Times(CN1,C1))),x)))),And(And(FreeQ(List(a,b,c),x),FractionQ(n)),Greater(n,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Times(c,Plus(m,Times(CN1,C1))),CN1)),Times(CN1,Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Times(Plus(a,Times(b,x)),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),CN1))),x)))),And(And(FreeQ(List(a,b,c),x),FractionQ(m)),Greater(m,C1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x))),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,m),Power(Times(b,m),CN1)),Times(CN1,Dist(Times(c,Power(b,CN1)),Int(Times(Power(x,Plus(m,C1)),Power(Plus(Times(b,x),Times(c,Power(x,C2))),CN1)),x)))),And(And(FreeQ(List(b,c),x),FractionQ(m)),Less(m,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Dist(Power(a,CN1),Int(Times(Power(x,Plus(m,C1)),Times(Plus(b,Times(c,x)),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),CN1))),x)))),And(And(FreeQ(List(a,b,c),x),FractionQ(m)),Less(m,CN1)))),
SetDelayed(Int(Times(Plus(Times($p(e,true),$p(x)),$p(d)),Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(e,Times(Power(x,m),Power(Times(c,m),CN1))),Times(CN1,Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Times(Plus(Times(a,e),Times(Plus(Times(b,e),Times(CN1,Times(c,d))),x)),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),CN1))),x)))),And(And(FreeQ(List(a,b,c,d,e),x),FractionQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(Plus(Times($p(e,true),$p(x)),$p(d)),Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(d,Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1))),Times(CN1,Dist(Power(a,CN1),Int(Times(Power(x,Plus(m,C1)),Times(Plus(Plus(Times(b,d),Times(CN1,Times(a,e))),Times(Times(c,d),x)),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),CN1))),x)))),And(And(FreeQ(List(a,b,c,d,e),x),FractionQ(m)),Less(m,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),$p(n)),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n),Power(Times(Times(C2,e),n),CN1)),Dist(Times(Plus(Times(b,e),Times(CN1,Times(Times(C2,c),d))),Power(Times(C2,Power(e,C2)),CN1)),Int(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,Times(CN1,C1))),x))),And(And(And(FreeQ(List(a,b,c,d,e),x),FractionQ(n)),Greater(n,C0)),ZeroQ(Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),$p(n)),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n),Power(Times(Times(C2,e),n),CN1)),Dist(Times(Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))),Power(Power(e,C2),CN1)),Int(Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,Times(CN1,C1))),Power(Plus(d,Times(e,x)),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d,e),x),FractionQ(n)),Greater(n,C0)),ZeroQ(Plus(Times(b,e),Times(CN1,Times(Times(C2,c),d))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),$p(n)),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n),Power(Times(Times(C2,e),n),CN1)),Dist(Times(Plus(Times(b,e),Times(CN1,Times(Times(C2,c),d))),Power(Times(C2,Power(e,C2)),CN1)),Int(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,Times(CN1,C1))),x))),Dist(Times(Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))),Power(Power(e,C2),CN1)),Int(Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,Times(CN1,C1))),Power(Plus(d,Times(e,x)),CN1)),x))),And(And(FreeQ(List(a,b,c,d,e),x),FractionQ(n)),Greater(n,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),$p(n)),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(Times(CN1,e),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Times(C2,Plus(n,C1)),Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2)))),CN1))),Dist(Times(Power(e,C2),Power(Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))),CN1)),Int(Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Plus(d,Times(e,x)),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,d,e),x),FractionQ(n)),Less(n,CN1)),NonzeroQ(Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))))),ZeroQ(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),$p(n)),Power(Plus(Times($p(e,true),$p(x)),$p(d,true)),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Times(CN1,e),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(Times(C2,Plus(n,C1)),Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2)))),CN1))),Dist(Times(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))),Power(Times(C2,Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2)))),CN1)),Int(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n),x))),Dist(Times(Power(e,C2),Power(Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))),CN1)),Int(Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Plus(d,Times(e,x)),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d,e),x),FractionQ(n)),Less(n,CN1)),NonzeroQ(Plus(Plus(Times(c,Power(d,C2)),Times(CN1,Times(Times(b,d),e))),Times(a,Power(e,C2))))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),C2),$p(b,true)),Times(Power($p(x),C4),$p(c,true)),$p(a)),CN1D2),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2))),Times(Times(Sqrt(Plus(C1,Times(Times(C2,c),Times(Power(x,C2),Power(Plus(b,Times(CN1,q)),CN1))))),Times(Sqrt(Plus(C1,Times(Times(C2,c),Times(Power(x,C2),Power(Plus(b,q),CN1))))),Power(Sqrt(Plus(Plus(a,Times(b,Power(x,C2))),Times(c,Power(x,C4)))),CN1))),Int(Power(Times(Sqrt(Plus(C1,Times(Times(C2,c),Times(Power(x,C2),Power(Plus(b,Times(CN1,q)),CN1))))),Sqrt(Plus(C1,Times(Times(C2,c),Times(Power(x,C2),Power(Plus(b,q),CN1)))))),CN1),x))),And(FreeQ(List(a,b,c),x),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(b,true)),Times(Power($p(x),C4),$p(c,true)),$p(a)),CN1D2),Power($p(x),C2)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2))),Times(Times(Sqrt(Plus(C1,Times(Times(C2,c),Times(Power(x,C2),Power(Plus(b,Times(CN1,q)),CN1))))),Times(Sqrt(Plus(C1,Times(Times(C2,c),Times(Power(x,C2),Power(Plus(b,q),CN1))))),Power(Sqrt(Plus(Plus(a,Times(b,Power(x,C2))),Times(c,Power(x,C4)))),CN1))),Int(Times(Power(x,C2),Power(Times(Sqrt(Plus(C1,Times(Times(C2,c),Times(Power(x,C2),Power(Plus(b,Times(CN1,q)),CN1))))),Sqrt(Plus(C1,Times(Times(C2,c),Times(Power(x,C2),Power(Plus(b,q),CN1)))))),CN1)),x))),And(FreeQ(List(a,b,c),x),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(k)),$p(b,true)),$p(a)),Power(Plus(Times(Power($p(x),C2),$p(d,true)),Times(Power($p(x),$p(k)),$p(e,true)),Times(Power($p(x),$p(j)),$p(f,true)),$p(c)),CN1)),$p(x,SymbolHead)),
    Condition(Times(Times(a,Power(Rt(Times(c,d),C2),CN1)),ArcTan(Times(Times(Times(Plus(k,Times(CN1,C1)),a),Rt(Times(c,d),C2)),Times(x,Power(Times(c,Plus(Times(Plus(k,Times(CN1,C1)),a),Times(CN1,Times(b,Power(x,k))))),CN1))))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),ZeroQ(Plus(Times(Times(Power(Plus(k,Times(CN1,C1)),C2),Power(a,C2)),f),Times(CN1,Times(Power(b,C2),c))))),ZeroQ(Plus(Times(b,e),Times(Times(Times(C2,Plus(k,Times(CN1,C1))),a),f)))),PosQ(Times(c,d))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(k)),$p(b,true)),$p(a)),Power(Plus(Times(Power($p(x),C2),$p(d,true)),Times(Power($p(x),$p(k)),$p(e,true)),Times(Power($p(x),$p(j)),$p(f,true)),$p(c)),CN1)),$p(x,SymbolHead)),
    Condition(Times(Times(a,Power(Rt(Times(Times(CN1,c),d),C2),CN1)),ArcTanh(Times(Times(Times(Plus(k,Times(CN1,C1)),a),Rt(Times(Times(CN1,c),d),C2)),Times(x,Power(Times(c,Plus(Times(Plus(k,Times(CN1,C1)),a),Times(CN1,Times(b,Power(x,k))))),CN1))))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),ZeroQ(Plus(Times(Times(Power(Plus(k,Times(CN1,C1)),C2),Power(a,C2)),f),Times(CN1,Times(Power(b,C2),c))))),ZeroQ(Plus(Times(b,e),Times(Times(Times(C2,Plus(k,Times(CN1,C1))),a),f)))),NegQ(Times(c,d))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a)),Power(Plus(Times(Power($p(x),$p(k,true)),$p(d,true)),Times(Power($p(x),$p(n,true)),$p(e,true)),Times(Power($p(x),$p(j)),$p(f,true)),$p(c)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(a,Times(ArcTan(Times(Times(Times(Plus(Plus(m,Times(CN1,n)),C1),a),Rt(Times(c,d),C2)),Times(Power(x,Plus(m,C1)),Power(Times(c,Plus(Times(Plus(Plus(m,Times(CN1,n)),C1),a),Times(Times(Plus(m,C1),b),Power(x,n)))),CN1)))),Power(Times(Plus(m,C1),Rt(Times(c,d),C2)),CN1))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,j,k,m,n),x),ZeroQ(Plus(k,Times(CN1,Times(C2,Plus(m,C1)))))),ZeroQ(Plus(j,Times(CN1,Times(C2,n))))),ZeroQ(Plus(Times(Times(Power(Plus(Plus(m,Times(CN1,n)),C1),C2),Power(a,C2)),f),Times(CN1,Times(Times(Power(Plus(m,C1),C2),Power(b,C2)),c))))),ZeroQ(Plus(Times(Times(Plus(m,C1),b),e),Times(CN1,Times(Times(Times(C2,Plus(Plus(m,Times(CN1,n)),C1)),a),f))))),PosQ(Times(c,d))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a)),Power(Plus(Times(Power($p(x),$p(k,true)),$p(d,true)),Times(Power($p(x),$p(n,true)),$p(e,true)),Times(Power($p(x),$p(j)),$p(f,true)),$p(c)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(a,Times(ArcTanh(Times(Times(Times(Plus(Plus(m,Times(CN1,n)),C1),a),Rt(Times(Times(CN1,c),d),C2)),Times(Power(x,Plus(m,C1)),Power(Times(c,Plus(Times(Plus(Plus(m,Times(CN1,n)),C1),a),Times(Times(Plus(m,C1),b),Power(x,n)))),CN1)))),Power(Times(Plus(m,C1),Rt(Times(Times(CN1,c),d),C2)),CN1))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,f,j,k,m,n),x),ZeroQ(Plus(k,Times(CN1,Times(C2,Plus(m,C1)))))),ZeroQ(Plus(j,Times(CN1,Times(C2,n))))),ZeroQ(Plus(Times(Times(Power(Plus(Plus(m,Times(CN1,n)),C1),C2),Power(a,C2)),f),Times(CN1,Times(Times(Power(Plus(m,C1),C2),Power(b,C2)),c))))),ZeroQ(Plus(Times(Times(Plus(m,C1),b),e),Times(CN1,Times(Times(Times(C2,Plus(Plus(m,Times(CN1,n)),C1)),a),f))))),NegQ(Times(c,d))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2))),Plus(Dist(Times(C2,Times(c,Power(q,CN1))),Int(Power(Plus(Plus(b,Times(CN1,q)),Times(Times(C2,c),Power(x,k))),CN1),x)),Times(CN1,Dist(Times(C2,Times(c,Power(q,CN1))),Int(Power(Plus(Plus(b,q),Times(Times(C2,c),Power(x,k))),CN1),x))))),And(And(And(And(FreeQ(List(a,b,c,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))),Not(NegativeQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j)),$p(c,true)),$p(a)),CN1),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Plus(Times(C2,Rt(Times(a,Power(c,CN1)),C2)),Times(CN1,Times(b,Power(c,CN1)))))),Condition(Plus(Dist(Power(Times(Times(Times(C2,c),Rt(Times(a,Power(c,CN1)),C2)),Rt(q,C2)),CN1),Int(Times(Plus(Rt(q,C2),Power(x,Times(C1D2,k))),Power(Plus(Plus(Rt(Times(a,Power(c,CN1)),C2),Times(Rt(q,C2),Power(x,Times(C1D2,k)))),Power(x,k)),CN1)),x)),Dist(Power(Times(Times(Times(C2,c),Rt(Times(a,Power(c,CN1)),C2)),Rt(q,C2)),CN1),Int(Times(Plus(Rt(q,C2),Times(CN1,Power(x,Times(C1D2,k)))),Power(Plus(Plus(Rt(Times(a,Power(c,CN1)),C2),Times(CN1,Times(Rt(q,C2),Power(x,Times(C1D2,k))))),Power(x,k)),CN1)),x))),PosQ(q))),And(And(And(And(And(FreeQ(List(a,b,c),x),EvenQ(k)),Greater(k,C0)),SameQ(j,Times(C2,k))),PosQ(Times(a,Power(c,CN1)))),NegativeQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Times(Times(CN1,x),Plus(Plus(Power(b,C2),Times(CN1,Times(Times(C2,a),c))),Times(Times(b,c),Power(x,k)))),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(Times(Times(k,a),Plus(n,C1)),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),CN1))),Dist(Times(Plus(Plus(Times(Times(k,Plus(n,C1)),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),Power(b,C2)),Times(CN1,Times(Times(C2,a),c))),Power(Times(Times(Times(k,a),Plus(n,C1)),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),CN1)),Int(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),x))),Dist(Times(Times(Plus(Times(k,Plus(Times(C2,n),C3)),C1),b),Times(c,Power(Times(Times(Times(k,a),Plus(n,C1)),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),CN1))),Int(Times(Power(x,k),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1))),x))),And(And(And(And(And(FreeQ(List(a,b,c,j,k),x),RationalQ(n)),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),Less(n,CN1)),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true))),CN1D2),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Times(integer(-2L),Times(Sqrt(Plus(Times(b,Power(x,k)),Times(c,Power(x,j)))),Power(Times(Times(b,k),Power(x,k)),CN1))),And(FreeQ(List(b,c,j,k),x),SameQ(j,Times(C2,k))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1D2),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Times(Times(CN1,ArcTanh(Times(Plus(Times(C2,a),Times(b,Power(x,k))),Power(Times(Times(C2,Rt(a,C2)),Sqrt(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))))),CN1)))),Power(Times(k,Rt(a,C2)),CN1)),And(And(FreeQ(List(a,b,c,j,k),x),SameQ(j,Times(C2,k))),PosQ(a)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1D2),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Times(ArcTan(Times(Plus(Times(C2,a),Times(b,Power(x,k))),Power(Times(Times(C2,Rt(Times(CN1,a),C2)),Sqrt(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))))),CN1))),Power(Times(k,Rt(Times(CN1,a),C2)),CN1)),And(And(FreeQ(List(a,b,c,j,k),x),SameQ(j,Times(C2,k))),NegQ(a)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(Log(x),Power(a,CN1)),Times(CN1,Dist(Power(Times(a,k),CN1),Subst(Int(Times(Plus(b,Times(c,x)),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),CN1)),x),x,Power(x,k))))),And(And(FreeQ(List(a,b,c,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1),Power($p(x),$p(k))),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2))),Plus(Dist(Plus(C1,Times(CN1,Times(b,Power(q,CN1)))),Int(Power(Plus(Plus(b,Times(CN1,q)),Times(Times(C2,c),Power(x,k))),CN1),x)),Dist(Plus(C1,Times(b,Power(q,CN1))),Int(Power(Plus(Plus(b,q),Times(Times(C2,c),Power(x,k))),CN1),x)))),And(And(And(And(FreeQ(List(a,b,c,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))),Not(NegativeQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j)),$p(c,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(Plus(m,Times(CN1,j)),C1)),Power(Times(c,Plus(Plus(m,Times(CN1,j)),C1)),CN1)),Times(CN1,Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,j))),Times(Plus(a,Times(b,Power(x,k))),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),CN1))),x)))),And(And(And(And(FreeQ(List(a,b,c,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),RationalQ(List(m,k))),Less(Less(C0,j),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j)),$p(c,true)),$p(a)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Dist(Power(a,CN1),Int(Times(Power(x,Plus(m,k)),Times(Plus(b,Times(c,Power(x,k))),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),CN1))),x)))),And(And(And(And(And(FreeQ(List(a,b,c,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),RationalQ(List(m,k))),Less(m,CN1)),Greater(k,C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C2),$p(c,true)),Times($p(b,true),$p(x)),$p(a,true)),$p(n)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Times(CN1,Power(x,Plus(m,Times(CN1,C1)))),Times(Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1)),Power(Times(c,Plus(m,Times(CN1,C1))),CN1))),Times(CN1,Dist(Times(b,Power(Times(C2,c),CN1)),Int(Times(Power(x,Plus(m,Times(CN1,C1))),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),n)),x)))),Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2))),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),Plus(n,C1))),x))),And(And(And(And(FreeQ(List(a,b,c),x),RationalQ(List(m,n))),Less(n,CN1)),ZeroQ(Plus(Plus(m,Times(C2,n)),C1))),Not(IntIntegerQ(List(m,n)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n),Power(Plus(Plus(m,Times(j,n)),C1),CN1))),Dist(Times(Times(a,j),Times(n,Power(Plus(Plus(m,Times(j,n)),C1),CN1))),Int(Times(Power(x,m),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x))),Dist(Times(Times(b,k),Times(n,Power(Plus(Plus(m,Times(j,n)),C1),CN1))),Int(Times(Power(x,Plus(m,k)),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c),x),RationalQ(List(j,k,m,n))),Equal(j,Times(C2,k))),Greater(j,C0)),Less(m,CN1)),Greater(n,C1)),NonzeroQ(Plus(Plus(m,Times(j,n)),C1))),Not(IntIntegerQ(List(j,k,m,n)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(Plus(m,Times(CN1,j)),C1)),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(Times(c,k),Plus(n,C1)),CN1))),Dist(Times(a,Power(c,CN1)),Int(Times(Power(x,Plus(m,Times(CN1,j))),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,n),x),FractionQ(List(j,k,m))),SameQ(j,Times(C2,k))),And(Less(C0,j),LessEqual(j,m))),NonzeroQ(Plus(n,C1))),ZeroQ(Plus(Plus(m,Times(k,Plus(n,Times(CN1,C1)))),C1))),Not(And(IntIntegerQ(n),GreaterEqual(n,CN1)))),Not(IntIntegerQ(List(j,k,m,n)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Power(x,Plus(Plus(m,Times(CN1,j)),C1)),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(c,Plus(Plus(m,Times(j,n)),C1)),CN1))),Times(CN1,Dist(Times(b,Times(Plus(Plus(m,Times(k,Plus(n,Times(CN1,C1)))),C1),Power(Times(c,Plus(Plus(m,Times(j,n)),C1)),CN1))),Int(Times(Power(x,Plus(m,Times(CN1,k))),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n)),x)))),Times(CN1,Dist(Times(a,Times(Plus(Plus(m,Times(CN1,j)),C1),Power(Times(c,Plus(Plus(m,Times(j,n)),C1)),CN1))),Int(Times(Power(x,Plus(m,Times(CN1,j))),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n)),x)))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,n),x),RationalQ(List(j,k,m))),Equal(j,Times(C2,k))),And(Less(C0,j),LessEqual(j,m))),NonzeroQ(Plus(Plus(m,Times(j,n)),C1))),NonzeroQ(Plus(Plus(m,Times(k,Plus(n,Times(CN1,C1)))),C1))),Not(And(IntIntegerQ(n),GreaterEqual(n,CN1)))),Not(IntIntegerQ(List(j,k,m,n)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(a,Plus(m,C1)),CN1))),Dist(Times(c,Power(a,CN1)),Int(Times(Power(x,Plus(m,j)),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,n),x),RationalQ(List(j,k,m))),Equal(j,Times(C2,k))),Greater(j,C0)),Less(m,CN1)),ZeroQ(Plus(Plus(m,C1),Times(k,Plus(n,C1))))),Not(IntIntegerQ(List(j,k,m,n)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(a,Plus(m,C1)),CN1))),Times(CN1,Dist(Times(b,Power(Times(C2,a),CN1)),Int(Times(Power(x,Plus(m,k)),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n)),x)))),And(And(And(And(And(And(FreeQ(List(a,b,c,n),x),RationalQ(List(j,k,m))),Equal(j,Times(C2,k))),Greater(j,C0)),Less(m,CN1)),ZeroQ(Plus(Plus(m,C1),Times(j,Plus(n,C1))))),Not(IntIntegerQ(List(j,k,m,n)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n),Power(Plus(m,C1),CN1))),Times(CN1,Dist(Times(Times(b,k),Times(n,Power(Plus(m,C1),CN1))),Int(Times(Power(x,Plus(m,k)),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x)))),Times(CN1,Dist(Times(Times(c,j),Times(n,Power(Plus(m,C1),CN1))),Int(Times(Power(x,Plus(m,j)),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x)))),And(And(And(And(And(And(FreeQ(List(a,b,c),x),RationalQ(List(j,k,m,n))),Equal(j,Times(C2,k))),Greater(j,C0)),Less(m,CN1)),Greater(n,C1)),Not(IntIntegerQ(List(j,k,m,n)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Power(x,Plus(m,C1)),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(a,Plus(m,C1)),CN1))),Times(CN1,Dist(Times(b,Times(Plus(Plus(m,C1),Times(k,Plus(n,C1))),Power(Times(a,Plus(m,C1)),CN1))),Int(Times(Power(x,Plus(m,k)),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n)),x)))),Times(CN1,Dist(Times(c,Times(Plus(Plus(m,C1),Times(j,Plus(n,C1))),Power(Times(a,Plus(m,C1)),CN1))),Int(Times(Power(x,Plus(m,j)),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n)),x)))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,n),x),RationalQ(List(j,k,m))),Equal(j,Times(C2,k))),Greater(j,C0)),Less(m,CN1)),NonzeroQ(Plus(Plus(m,C1),Times(k,Plus(n,C1))))),NonzeroQ(Plus(Plus(m,C1),Times(j,Plus(n,C1))))),Not(And(RationalQ(n),Greater(n,C1)))),Not(IntIntegerQ(List(j,k,m,n)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(k,true))),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Times(x,Plus(b,Times(Times(C2,c),Power(x,k)))),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n),Power(Times(Times(C2,c),Plus(Times(k,Plus(Times(C2,n),C1)),C1)),CN1))),Times(CN1,Dist(Times(b,Power(Times(Times(C2,c),Plus(Times(k,Plus(Times(C2,n),C1)),C1)),CN1)),Int(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),n),x)))),Times(CN1,Dist(Times(Times(k,n),Times(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),Power(Times(Times(C2,c),Plus(Times(k,Plus(Times(C2,n),C1)),C1)),CN1))),Int(Times(Power(x,k),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,Times(CN1,C1)))),x)))),And(And(And(And(And(And(FreeQ(List(a,b,c,j,k),x),RationalQ(n)),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),Greater(n,C0)),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))),NonzeroQ(Plus(Times(k,Plus(Times(C2,n),C1)),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(k,true)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),$p(n)),Power($p(x),$p(k,true))),$p(x,SymbolHead)),
    Condition(Plus(Plus(Times(Times(x,Plus(b,Times(Times(C2,c),Power(x,k)))),Times(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),Power(Times(Times(k,Plus(n,C1)),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),CN1))),Times(CN1,Dist(Times(b,Power(Times(Times(k,Plus(n,C1)),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),CN1)),Int(Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1)),x)))),Times(CN1,Dist(Times(Times(C2,c),Times(Plus(Times(k,Plus(Times(C2,n),C3)),C1),Power(Times(Times(k,Plus(n,C1)),Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))),CN1))),Int(Times(Power(x,k),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),Plus(n,C1))),x)))),And(And(And(And(And(FreeQ(List(a,b,c,j,k),x),RationalQ(n)),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),Less(n,CN1)),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(k)),$p(e,true)),$p(d)),Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1)),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Rt(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))),C2))),Plus(Dist(Plus(e,Times(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))),Power(q,CN1))),Int(Power(Plus(Plus(b,Times(CN1,q)),Times(Times(C2,c),Power(x,k))),CN1),x)),Dist(Plus(e,Times(CN1,Times(Plus(Times(Times(C2,c),d),Times(CN1,Times(b,e))),Power(q,CN1)))),Int(Power(Plus(Plus(b,q),Times(Times(C2,c),Power(x,k))),CN1),x)))),And(And(And(And(FreeQ(List(a,b,c,d,e,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),NonzeroQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c))))),Not(NegativeQ(Plus(Power(b,C2),Times(CN1,Times(Times(C4,a),c)))))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(k)),$p(e,true)),$p(d,true)),Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(d,Times(Log(x),Power(a,CN1))),Times(CN1,Times(Power(Times(a,k),CN1),Subst(Int(Times(Plus(Plus(Times(b,d),Times(CN1,Times(a,e))),Times(Times(c,d),x)),Power(Plus(Plus(a,Times(b,x)),Times(c,Power(x,C2))),CN1)),x),x,Power(x,k))))),And(And(FreeQ(List(a,b,c,d,e,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(k)),$p(e,true)),$p(d,true)),Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(e,Times(Power(x,Plus(Plus(m,Times(CN1,k)),C1)),Power(Times(c,Plus(Plus(m,Times(CN1,k)),C1)),CN1))),Times(CN1,Dist(Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,k))),Times(Plus(Times(a,e),Times(Plus(Times(b,e),Times(CN1,Times(c,d))),Power(x,k))),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),CN1))),x)))),And(And(And(And(FreeQ(List(a,b,c,d,e,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),RationalQ(List(m,k))),Less(Less(C0,k),Plus(m,C1))))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(k)),$p(e,true)),$p(d,true)),Power(Plus(Times(Power($p(x),$p(k)),$p(b,true)),Times(Power($p(x),$p(j,true)),$p(c,true)),$p(a)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(d,Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1))),Times(CN1,Dist(Power(a,CN1),Int(Times(Power(x,Plus(m,k)),Times(Plus(Plus(Times(b,d),Times(CN1,Times(a,e))),Times(Times(c,d),Power(x,k))),Power(Plus(Plus(a,Times(b,Power(x,k))),Times(c,Power(x,j))),CN1))),x)))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,j,k),x),Not(IntIntegerQ(k))),SameQ(j,Times(C2,k))),RationalQ(List(m,k))),Less(m,CN1)),Greater(k,C0)))),
SetDelayed(Int(Power(Plus(Power(Plus(Times(Power($p(x),C2),$p(c,true)),$p(b)),C1D2),Times($p(a,true),$p(x))),C1D2),$p(x,SymbolHead)),
    Condition(Times(Times(C2,Plus(Times(Times(C2,a),x),Times(CN1,Sqrt(Plus(b,Times(c,Power(x,C2))))))),Times(Sqrt(Plus(Times(a,x),Sqrt(Plus(b,Times(c,Power(x,C2)))))),Power(Times(C3,a),CN1))),And(FreeQ(List(a,b,c),x),SameQ(c,Power(a,C2))))),
SetDelayed(Int(Power(Plus(Times(CN1,Power(Plus(Times(Power($p(x),C2),$p(c,true)),$p(b)),C1D2)),Times($p(a,true),$p(x))),C1D2),$p(x,SymbolHead)),
    Condition(Times(Times(C2,Plus(Times(Times(C2,a),x),Sqrt(Plus(b,Times(c,Power(x,C2)))))),Times(Sqrt(Plus(Times(a,x),Times(CN1,Sqrt(Plus(b,Times(c,Power(x,C2))))))),Power(Times(C3,a),CN1))),And(FreeQ(List(a,b,c),x),SameQ(c,Power(a,C2))))),
SetDelayed(Int(Power(Plus(Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(c)),C1D2),$p(a)),C1D2),$p(x,SymbolHead)),
    Condition(Times(Times(C2,Sqrt(Plus(a,Sqrt(Plus(Power(a,C2),Times(b,Power(x,C2))))))),Times(Plus(Plus(Times(CN1,Power(a,C2)),Times(b,Power(x,C2))),Times(a,Sqrt(Plus(Power(a,C2),Times(b,Power(x,C2)))))),Power(Times(Times(C3,b),x),CN1))),And(FreeQ(List(a,b,c),x),SameQ(c,Power(a,C2))))),
SetDelayed(Int(Power(Plus(Times(CN1,Power(Plus(Times(Power($p(x),C2),$p(b,true)),$p(c)),C1D2)),$p(a)),C1D2),$p(x,SymbolHead)),
    Condition(Times(Times(C2,Sqrt(Plus(a,Times(CN1,Sqrt(Plus(Power(a,C2),Times(b,Power(x,C2)))))))),Times(Plus(Plus(Times(CN1,Power(a,C2)),Times(b,Power(x,C2))),Times(CN1,Times(a,Sqrt(Plus(Power(a,C2),Times(b,Power(x,C2))))))),Power(Times(Times(C3,b),x),CN1))),And(FreeQ(List(a,b,c),x),SameQ(c,Power(a,C2))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(m,true)),$p(a,true)),Times(Power(Times(Power($p(x),$p(n)),$p(c,true)),C1D2),$p(b,true))),CN1),$p(u,true)),$p(x,SymbolHead)),
    Condition(Int(Times(u,Times(Plus(Times(a,Power(x,m)),Times(CN1,Times(b,Sqrt(Times(c,Power(x,n)))))),Power(Plus(Times(Power(a,C2),Power(x,Times(C2,m))),Times(CN1,Times(Times(Power(b,C2),c),Power(x,n)))),CN1))),x),FreeQ(List(a,b,c,m,n),x))),
SetDelayed(Int(Times(Power(Plus(Times(Power(Plus(Times(Power($p(x),$p(n,true)),$p(b,true)),$p(a,true)),C1D2),$p(e,true)),Times(Power(Plus(Times(Power($p(x),$p(n,true)),$p(d,true)),$p(c,true)),C1D2),$p(f,true))),$p(m)),$p(u,true)),$p(x,SymbolHead)),
    Condition(Dist(Power(Plus(Times(a,Power(e,C2)),Times(CN1,Times(c,Power(f,C2)))),m),Int(Times(u,Power(Plus(Times(e,Sqrt(Plus(a,Times(b,Power(x,n))))),Times(CN1,Times(f,Sqrt(Plus(c,Times(d,Power(x,n))))))),Times(CN1,m))),x)),And(And(And(FreeQ(List(a,b,c,d,e,f,n),x),IntIntegerQ(m)),Less(m,C0)),ZeroQ(Plus(Times(b,Power(e,C2)),Times(CN1,Times(d,Power(f,C2))))))))
  );
}
