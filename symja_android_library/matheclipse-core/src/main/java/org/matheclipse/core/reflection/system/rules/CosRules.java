package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.IAST;

/**
 * Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.<br />
 * See GIT repository at: <a href="https://bitbucket.org/axelclk/symjaunittests">https://bitbucket.org/axelclk/symjaunittests</a>.
 */
public interface CosRules {
  final public static IAST RULES = List(
    ISet(Cos(C0),
      C1),
    ISet(Cos(Times(QQ(1L,12L),Pi)),
      Times(C1D2,Plus(C1,CSqrt3),C1DSqrt2)),
    ISet(Cos(Times(QQ(1L,10L),Pi)),
      Times(C1D2,Sqrt(C1D2),Sqrt(Plus(C5,CSqrt5)))),
    ISet(Cos(Times(QQ(1L,8L),Pi)),
      Times(C1D2,Sqrt(Plus(C2,CSqrt2)))),
    ISet(Cos(Times(QQ(1L,6L),Pi)),
      Times(C1D2,CSqrt3)),
    ISet(Cos(Times(QQ(1L,5L),Pi)),
      Times(C1D4,Plus(C1,CSqrt5))),
    ISet(Cos(Times(C1D4,Pi)),
      C1DSqrt2),
    ISet(Cos(Times(QQ(3L,10L),Pi)),
      Times(C1D2,Sqrt(C1D2),Sqrt(Plus(C5,Negate(CSqrt5))))),
    ISet(Cos(Times(C1D3,Pi)),
      C1D2),
    ISet(Cos(Times(QQ(3L,8L),Pi)),
      Times(C1D2,Sqrt(Plus(C2,Negate(CSqrt2))))),
    ISet(Cos(Times(QQ(2L,5L),Pi)),
      Times(C1D4,Plus(CN1,CSqrt5))),
    ISet(Cos(Times(QQ(5L,12L),Pi)),
      Times(C1D2,Plus(CN1,CSqrt3),C1DSqrt2)),
    ISet(Cos(Times(C1D2,Pi)),
      C0),
    ISet(Cos(Times(QQ(7L,12L),Pi)),
      Times(CN1D2,Plus(CN1,CSqrt3),C1DSqrt2)),
    ISet(Cos(Times(QQ(3L,5L),Pi)),
      Times(CN1D4,Plus(CN1,CSqrt5))),
    ISet(Cos(Times(QQ(5L,8L),Pi)),
      Times(CN1D2,Sqrt(Plus(C2,Negate(CSqrt2))))),
    ISet(Cos(Times(QQ(2L,3L),Pi)),
      CN1D2),
    ISet(Cos(Times(QQ(7L,10L),Pi)),
      Times(CN1D2,Sqrt(C1D2),Sqrt(Plus(C5,Negate(CSqrt5))))),
    ISet(Cos(Times(QQ(3L,4L),Pi)),
      Negate(C1DSqrt2)),
    ISet(Cos(Times(QQ(4L,5L),Pi)),
      Times(CN1D4,Plus(C1,CSqrt5))),
    ISet(Cos(Times(QQ(5L,6L),Pi)),
      Times(CN1D2,CSqrt3)),
    ISet(Cos(Times(QQ(7L,8L),Pi)),
      Times(CN1D2,Sqrt(Plus(C2,CSqrt2)))),
    ISet(Cos(Times(QQ(9L,10L),Pi)),
      Times(CN1D2,Sqrt(C1D2),Sqrt(Plus(C5,CSqrt5)))),
    ISet(Cos(Times(QQ(11L,12L),Pi)),
      Times(CN1D2,Plus(C1,CSqrt3),C1DSqrt2)),
    ISet(Cos(Pi),
      CN1),
    ISet(Cos(Times(QQ(13L,12L),Pi)),
      Times(CN1D2,Plus(C1,CSqrt3),C1DSqrt2)),
    ISet(Cos(Times(QQ(11L,10L),Pi)),
      Times(CN1D2,Sqrt(C1D2),Sqrt(Plus(C5,CSqrt5)))),
    ISet(Cos(Times(QQ(9L,8L),Pi)),
      Times(CN1D2,Sqrt(Plus(C2,CSqrt2)))),
    ISet(Cos(Times(QQ(7L,6L),Pi)),
      Times(CN1D2,CSqrt3)),
    ISet(Cos(Times(QQ(6L,5L),Pi)),
      Times(CN1D4,Plus(C1,CSqrt5))),
    ISet(Cos(Times(QQ(5L,4L),Pi)),
      Negate(C1DSqrt2)),
    ISet(Cos(Times(QQ(13L,10L),Pi)),
      Times(CN1D2,Sqrt(C1D2),Sqrt(Plus(C5,Negate(CSqrt5))))),
    ISet(Cos(Times(QQ(4L,3L),Pi)),
      CN1D2),
    ISet(Cos(Times(QQ(11L,8L),Pi)),
      Times(CN1D2,Sqrt(Plus(C2,Negate(CSqrt2))))),
    ISet(Cos(Times(QQ(7L,5L),Pi)),
      Times(CN1D4,Plus(CN1,CSqrt5))),
    ISet(Cos(Times(QQ(17L,12L),Pi)),
      Times(CN1D2,Plus(CN1,CSqrt3),C1DSqrt2)),
    ISet(Cos(Times(QQ(3L,2L),Pi)),
      C0),
    ISet(Cos(Times(QQ(19L,12L),Pi)),
      Times(C1D2,Plus(CN1,CSqrt3),C1DSqrt2)),
    ISet(Cos(Times(QQ(8L,5L),Pi)),
      Times(C1D4,Plus(CN1,CSqrt5))),
    ISet(Cos(Times(QQ(13L,8L),Pi)),
      Times(C1D2,Sqrt(Plus(C2,Negate(CSqrt2))))),
    ISet(Cos(Times(QQ(5L,3L),Pi)),
      C1D2),
    ISet(Cos(Times(QQ(17L,10L),Pi)),
      Times(C1D2,Sqrt(C1D2),Sqrt(Plus(C5,Negate(CSqrt5))))),
    ISet(Cos(Times(QQ(7L,4L),Pi)),
      C1DSqrt2),
    ISet(Cos(Times(QQ(9L,5L),Pi)),
      Times(C1D4,Plus(C1,CSqrt5))),
    ISet(Cos(Times(QQ(11L,6L),Pi)),
      Times(C1D2,CSqrt3)),
    ISet(Cos(Times(QQ(15L,8L),Pi)),
      Times(C1D2,Sqrt(Plus(C2,CSqrt2)))),
    ISet(Cos(Times(QQ(19L,10L),Pi)),
      Times(C1D2,Sqrt(C1D2),Sqrt(Plus(C5,CSqrt5)))),
    ISet(Cos(Times(QQ(23L,12L),Pi)),
      Times(C1D2,Plus(C1,CSqrt3),C1DSqrt2)),
    ISet(Cos(Times(C2,Pi)),
      C1),
    ISet(Cos(CI),
      Cosh(C1)),
    ISetDelayed(Cos(ArcTan(x_)),
      Power(Plus(C1,Sqr(x)),CN1D2)),
    ISetDelayed(Cos(Times(Pi,$p(x,NumberQ))),
      Condition(If(Less(x,C1),Negate(Cos(Times(Plus(C1,Negate(x)),Pi))),If(Less(x,C2),Cos(Times(Plus(C2,Negate(x)),Pi)),Cos(Times(Plus(x,Times(CN1,C2,Quotient(IntegerPart(x),C2))),Pi)))),GreaterEqual(x,C1D2))),
    ISetDelayed(Cos(ArcCos(x_)),
      x),
    ISetDelayed(Cos(ArcSin(x_)),
      Sqrt(Plus(C1,Negate(Sqr(x))))),
    ISet(Cos(DirectedInfinity(CI)),
      CInfinity),
    ISet(Cos(DirectedInfinity(CNI)),
      CInfinity),
    ISet(Cos(CComplexInfinity),
      Indeterminate)
  );
}
