package org.matheclipse.core.integrate.rubi42;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi42.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi42.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntegrationRulesForExpressionsInvolvingTrigFunctionsOfTheFollowingForms36 { 
  public static IAST RULES = List( 
SetDelayed(Int(Power(Sin(Times(Power(Plus(Times($p(d,true),$p(x)),$p(c,true)),CN1),$p(a,true))),$p(n,true)),$p(x,SymbolHead)),
    Condition(Times(CN1,Power(d,CN1),Subst(Int(Times(Power(Sin(Times(a,x)),n),Power(Power(x,C2),CN1)),x),x,Power(Plus(c,Times(d,x)),CN1))),And(FreeQ(List(a,c,d),x),PositiveIntegerQ(n)))),
SetDelayed(Int(Power(Cos(Times(Power(Plus(Times($p(d,true),$p(x)),$p(c,true)),CN1),$p(a,true))),$p(n,true)),$p(x,SymbolHead)),
    Condition(Times(CN1,Power(d,CN1),Subst(Int(Times(Power(Cos(Times(a,x)),n),Power(Power(x,C2),CN1)),x),x,Power(Plus(c,Times(d,x)),CN1))),And(FreeQ(List(a,c,d),x),PositiveIntegerQ(n)))),
SetDelayed(Int(Power(Sin(Times(Plus(Times($p(b,true),$p(x)),$p(a,true)),Power(Plus(Times($p(d,true),$p(x)),$p(c,true)),CN1),$p(e,true))),$p(n,true)),$p(x,SymbolHead)),
    Condition(Times(CN1,Power(d,CN1),Subst(Int(Times(Power(Sin(Plus(Times(b,e,Power(d,CN1)),Times(CN1,e,Plus(Times(b,c),Times(CN1,a,d)),x,Power(d,CN1)))),n),Power(Power(x,C2),CN1)),x),x,Power(Plus(c,Times(d,x)),CN1))),And(And(FreeQ(List(a,b,c,d),x),PositiveIntegerQ(n)),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))))),
SetDelayed(Int(Power(Cos(Times(Plus(Times($p(b,true),$p(x)),$p(a,true)),Power(Plus(Times($p(d,true),$p(x)),$p(c,true)),CN1),$p(e,true))),$p(n,true)),$p(x,SymbolHead)),
    Condition(Times(CN1,Power(d,CN1),Subst(Int(Times(Power(Cos(Plus(Times(b,e,Power(d,CN1)),Times(CN1,e,Plus(Times(b,c),Times(CN1,a,d)),x,Power(d,CN1)))),n),Power(Power(x,C2),CN1)),x),x,Power(Plus(c,Times(d,x)),CN1))),And(And(FreeQ(List(a,b,c,d),x),PositiveIntegerQ(n)),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))))),
SetDelayed(Int(Power(Sin($p(u)),$p(n,true)),$p(x,SymbolHead)),
    Condition(Module(List(Set($s("lst"),QuotientOfLinearsParts(u,x))),Int(Power(Sin(Times(Plus(Part($s("lst"),C1),Times(Part($s("lst"),C2),x)),Power(Plus(Part($s("lst"),C3),Times(Part($s("lst"),C4),x)),CN1))),n),x)),And(PositiveIntegerQ(n),QuotientOfLinearsQ(u,x)))),
SetDelayed(Int(Power(Cos($p(u)),$p(n,true)),$p(x,SymbolHead)),
    Condition(Module(List(Set($s("lst"),QuotientOfLinearsParts(u,x))),Int(Power(Cos(Times(Plus(Part($s("lst"),C1),Times(Part($s("lst"),C2),x)),Power(Plus(Part($s("lst"),C3),Times(Part($s("lst"),C4),x)),CN1))),n),x)),And(PositiveIntegerQ(n),QuotientOfLinearsQ(u,x)))),
SetDelayed(Int(Times(Power(Sin($p(v)),$p(p,true)),Power(Sin($p(w)),$p(q,true)),$p(u,true)),$p(x,SymbolHead)),
    Condition(Int(Times(u,Power(Sin(v),Plus(p,q))),x),ZeroQ(Plus(v,Times(CN1,w))))),
SetDelayed(Int(Times(Power(Cos($p(v)),$p(p,true)),Power(Cos($p(w)),$p(q,true)),$p(u,true)),$p(x,SymbolHead)),
    Condition(Int(Times(u,Power(Cos(v),Plus(p,q))),x),ZeroQ(Plus(v,Times(CN1,w))))),
SetDelayed(Int(Times(Power(Sin($p(v)),$p(p,true)),Power(Sin($p(w)),$p(q,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Times(Power(Sin(v),p),Power(Sin(w),q)),x),x),And(Or(And(PolynomialQ(v,x),PolynomialQ(w,x)),And(BinomialQ(List(v,w),x),IndependentQ(Cancel(Times(v,Power(w,CN1))),x))),PositiveIntegerQ(p,q)))),
SetDelayed(Int(Times(Power(Cos($p(v)),$p(p,true)),Power(Cos($p(w)),$p(q,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Times(Power(Cos(v),p),Power(Cos(w),q)),x),x),And(Or(And(PolynomialQ(v,x),PolynomialQ(w,x)),And(BinomialQ(List(v,w),x),IndependentQ(Cancel(Times(v,Power(w,CN1))),x))),PositiveIntegerQ(p,q)))),
SetDelayed(Int(Times(Power(Sin($p(v)),$p(p,true)),Power(Sin($p(w)),$p(q,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Power(x,m),Times(Power(Sin(v),p),Power(Sin(w),q)),x),x),And(PositiveIntegerQ(m,p,q),Or(And(PolynomialQ(v,x),PolynomialQ(w,x)),And(BinomialQ(List(v,w),x),IndependentQ(Cancel(Times(v,Power(w,CN1))),x)))))),
SetDelayed(Int(Times(Power(Cos($p(v)),$p(p,true)),Power(Cos($p(w)),$p(q,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Power(x,m),Times(Power(Cos(v),p),Power(Cos(w),q)),x),x),And(PositiveIntegerQ(m,p,q),Or(And(PolynomialQ(v,x),PolynomialQ(w,x)),And(BinomialQ(List(v,w),x),IndependentQ(Cancel(Times(v,Power(w,CN1))),x)))))),
SetDelayed(Int(Times(Power(Cos($p(w)),$p(p,true)),Power(Sin($p(v)),$p(p,true)),$p(u,true)),$p(x,SymbolHead)),
    Condition(Times(Power(Power(C2,p),CN1),Int(Times(u,Power(Sin(Times(C2,v)),p)),x)),And(ZeroQ(Plus(v,Times(CN1,w))),IntegerQ(p)))),
SetDelayed(Int(Times(Power(Cos($p(w)),$p(q,true)),Power(Sin($p(v)),$p(p,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Times(Power(Sin(v),p),Power(Cos(w),q)),x),x),And(PositiveIntegerQ(p,q),Or(And(PolynomialQ(v,x),PolynomialQ(w,x)),And(BinomialQ(List(v,w),x),IndependentQ(Cancel(Times(v,Power(w,CN1))),x)))))),
SetDelayed(Int(Times(Power(Cos($p(w)),$p(q,true)),Power(Sin($p(v)),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(Power(x,m),Times(Power(Sin(v),p),Power(Cos(w),q)),x),x),And(PositiveIntegerQ(m,p,q),Or(And(PolynomialQ(v,x),PolynomialQ(w,x)),And(BinomialQ(List(v,w),x),IndependentQ(Cancel(Times(v,Power(w,CN1))),x)))))),
SetDelayed(Int(Times(Power(Tan($p(w)),$p(n,true)),Sin($p(v))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Int(Times(Cos(v),Power(Tan(w),Plus(n,Times(CN1,C1)))),x)),Times(Cos(Plus(v,Times(CN1,w))),Int(Times(Sec(w),Power(Tan(w),Plus(n,Times(CN1,C1)))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Cos($p(v)),Power(Cot($p(w)),$p(n,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Int(Times(Sin(v),Power(Cot(w),Plus(n,Times(CN1,C1)))),x)),Times(Cos(Plus(v,Times(CN1,w))),Int(Times(Csc(w),Power(Cot(w),Plus(n,Times(CN1,C1)))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Power(Cot($p(w)),$p(n,true)),Sin($p(v))),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Cos(v),Power(Cot(w),Plus(n,Times(CN1,C1)))),x),Times(Sin(Plus(v,Times(CN1,w))),Int(Times(Csc(w),Power(Cot(w),Plus(n,Times(CN1,C1)))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Cos($p(v)),Power(Tan($p(w)),$p(n,true))),$p(x,SymbolHead)),
    Condition(Plus(Int(Times(Sin(v),Power(Tan(w),Plus(n,Times(CN1,C1)))),x),Times(CN1,Sin(Plus(v,Times(CN1,w))),Int(Times(Sec(w),Power(Tan(w),Plus(n,Times(CN1,C1)))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Power(Sec($p(w)),$p(n,true)),Sin($p(v))),$p(x,SymbolHead)),
    Condition(Plus(Times(Cos(Plus(v,Times(CN1,w))),Int(Times(Tan(w),Power(Sec(w),Plus(n,Times(CN1,C1)))),x)),Times(Sin(Plus(v,Times(CN1,w))),Int(Power(Sec(w),Plus(n,Times(CN1,C1))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Cos($p(v)),Power(Csc($p(w)),$p(n,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Cos(Plus(v,Times(CN1,w))),Int(Times(Cot(w),Power(Csc(w),Plus(n,Times(CN1,C1)))),x)),Times(CN1,Sin(Plus(v,Times(CN1,w))),Int(Power(Csc(w),Plus(n,Times(CN1,C1))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Power(Csc($p(w)),$p(n,true)),Sin($p(v))),$p(x,SymbolHead)),
    Condition(Plus(Times(Sin(Plus(v,Times(CN1,w))),Int(Times(Cot(w),Power(Csc(w),Plus(n,Times(CN1,C1)))),x)),Times(Cos(Plus(v,Times(CN1,w))),Int(Power(Csc(w),Plus(n,Times(CN1,C1))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Cos($p(v)),Power(Sec($p(w)),$p(n,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Sin(Plus(v,Times(CN1,w))),Int(Times(Tan(w),Power(Sec(w),Plus(n,Times(CN1,C1)))),x)),Times(Cos(Plus(v,Times(CN1,w))),Int(Power(Sec(w),Plus(n,Times(CN1,C1))),x))),And(And(And(RationalQ(n),Greater(n,C0)),FreeQ(Plus(v,Times(CN1,w)),x)),NonzeroQ(Plus(v,Times(CN1,w)))))),
SetDelayed(Int(Times(Power(Sin(Plus(Times(Power(Plus(Times($p(d,true),$p(x)),$p(c)),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(d,CN1),Subst(Int(Times(Power(Plus(Times(CN1,c,Power(d,CN1)),Times(x,Power(d,CN1))),m),Power(Sin(Plus(a,Times(b,Power(x,n)))),p)),x),x,Plus(c,Times(d,x)))),And(And(FreeQ(List(a,b,c,d,n),x),PositiveIntegerQ(m)),RationalQ(p)))),
SetDelayed(Int(Times(Power(Cos(Plus(Times(Power(Plus(Times($p(d,true),$p(x)),$p(c)),$p(n)),$p(b,true)),$p(a,true))),$p(p,true)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(d,CN1),Subst(Int(Times(Power(Plus(Times(CN1,c,Power(d,CN1)),Times(x,Power(d,CN1))),m),Power(Cos(Plus(a,Times(b,Power(x,n)))),p)),x),x,Plus(c,Times(d,x)))),And(And(FreeQ(List(a,b,c,d,n),x),PositiveIntegerQ(m)),RationalQ(p)))),
SetDelayed(Int(Times(Power(Plus(Times(Power(Cos(Plus(Times($p(e,true),$p(x)),$p(d,true))),C2),$p(b,true)),Times(Power(Sin(Plus(Times($p(e,true),$p(x)),$p(d,true))),C2),$p(c,true)),$p(a,true)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(C2,Int(Times(Power(x,m),Power(Plus(Times(C2,a),b,c,Times(Plus(b,Times(CN1,c)),Cos(Plus(Times(C2,d),Times(C2,e,x))))),CN1)),x)),And(And(And(FreeQ(List(a,b,c,d,e),x),PositiveIntegerQ(m)),NonzeroQ(Plus(a,b))),NonzeroQ(Plus(a,c))))),
SetDelayed(Int(Times(Cos(Plus(Times($p(d,true),$p(x)),$p(c,true))),Power(Plus(Times(Sin(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,CI,Power(x,Plus(m,C1)),Power(Times(b,Plus(m,C1)),CN1)),Int(Times(Power(x,m),Power(E,Times(CI,Plus(c,Times(d,x)))),Power(Plus(a,Times(CN1,Sqrt(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),Times(CN1,CI,b,Power(E,Times(CI,Plus(c,Times(d,x)))))),CN1)),x),Int(Times(Power(x,m),Power(E,Times(CI,Plus(c,Times(d,x)))),Power(Plus(a,Sqrt(Plus(Power(a,C2),Times(CN1,Power(b,C2)))),Times(CN1,CI,b,Power(E,Times(CI,Plus(c,Times(d,x)))))),CN1)),x)),And(FreeQ(List(a,b,c,d),x),PositiveIntegerQ(m)))),
SetDelayed(Int(Times(Power(Plus(Times(Cos(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true)),Sin(Plus(Times($p(d,true),$p(x)),$p(c,true)))),$p(x,SymbolHead)),
    Condition(Plus(Times(CI,Power(x,Plus(m,C1)),Power(Times(b,Plus(m,C1)),CN1)),Times(CN1,CI,Int(Times(Power(x,m),Power(E,Times(CI,Plus(c,Times(d,x)))),Power(Plus(a,Times(CN1,Sqrt(Plus(Power(a,C2),Times(CN1,Power(b,C2))))),Times(b,Power(E,Times(CI,Plus(c,Times(d,x)))))),CN1)),x)),Times(CN1,CI,Int(Times(Power(x,m),Power(E,Times(CI,Plus(c,Times(d,x)))),Power(Plus(a,Sqrt(Plus(Power(a,C2),Times(CN1,Power(b,C2)))),Times(b,Power(E,Times(CI,Plus(c,Times(d,x)))))),CN1)),x))),And(FreeQ(List(a,b,c,d),x),PositiveIntegerQ(m)))),
SetDelayed(Int(Times(Power(Cos(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(n)),Power(Plus(Times(Sin(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(a,Power(Power(b,C2),CN1),Int(Times(Power(x,m),Power(Cos(Plus(c,Times(d,x))),Plus(n,Times(CN1,C2)))),x)),Times(CN1,Power(b,CN1),Int(Times(Power(x,m),Power(Cos(Plus(c,Times(d,x))),Plus(n,Times(CN1,C2))),Sin(Plus(c,Times(d,x)))),x)),Times(CN1,Plus(Power(a,C2),Times(CN1,Power(b,C2))),Power(Power(b,C2),CN1),Int(Times(Power(x,m),Power(Cos(Plus(c,Times(d,x))),Plus(n,Times(CN1,C2))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),PositiveIntegerQ(m)),IntegerQ(n)),Greater(n,C1)))),
SetDelayed(Int(Times(Power(Plus(Times(Cos(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(b,true)),$p(a)),CN1),Power(Sin(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(n)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(a,Power(Power(b,C2),CN1),Int(Times(Power(x,m),Power(Sin(Plus(c,Times(d,x))),Plus(n,Times(CN1,C2)))),x)),Times(CN1,Power(b,CN1),Int(Times(Power(x,m),Power(Sin(Plus(c,Times(d,x))),Plus(n,Times(CN1,C2))),Cos(Plus(c,Times(d,x)))),x)),Times(CN1,Plus(Power(a,C2),Times(CN1,Power(b,C2))),Power(Power(b,C2),CN1),Int(Times(Power(x,m),Power(Sin(Plus(c,Times(d,x))),Plus(n,Times(CN1,C2))),Power(Plus(a,Times(b,Cos(Plus(c,Times(d,x))))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),PositiveIntegerQ(m)),IntegerQ(n)),Greater(n,C1)))),
SetDelayed(Int(Times(Plus(Times(Sin(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p("B",true)),$p("A")),Power(Plus(Times(Sin(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(b,true)),$p(a)),CN2),$p(x)),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,$s("B"),x,Cos(Plus(c,Times(d,x))),Power(Times(a,d,Plus(a,Times(b,Sin(Plus(c,Times(d,x)))))),CN1)),Times($s("B"),Power(Times(a,d),CN1),Int(Times(Cos(Plus(c,Times(d,x))),Power(Plus(a,Times(b,Sin(Plus(c,Times(d,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d,$s("A"),$s("B")),x),ZeroQ(Plus(Times(a,$s("A")),Times(CN1,b,$s("B"))))))),
SetDelayed(Int(Times(Plus(Times(Cos(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p("B",true)),$p("A")),Power(Plus(Times(Cos(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(b,true)),$p(a)),CN2),$p(x)),$p(x,SymbolHead)),
    Condition(Plus(Times($s("B"),x,Sin(Plus(c,Times(d,x))),Power(Times(a,d,Plus(a,Times(b,Cos(Plus(c,Times(d,x)))))),CN1)),Times(CN1,$s("B"),Power(Times(a,d),CN1),Int(Times(Sin(Plus(c,Times(d,x))),Power(Plus(a,Times(b,Cos(Plus(c,Times(d,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d,$s("A"),$s("B")),x),ZeroQ(Plus(Times(a,$s("A")),Times(CN1,b,$s("B"))))))),
SetDelayed(Int(Times(Power(Plus(Times(Tan($p(v)),$p(b,true)),$p(a)),$p(n,true)),Power(Sec($p(v)),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Power(Plus(Times(a,Cos(v)),Times(b,Sin(v))),n),x),And(And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),Equal(Plus(m,n),C0)),OddQ(m)))),
SetDelayed(Int(Times(Power(Csc($p(v)),$p(m,true)),Power(Plus(Times(Cot($p(v)),$p(b,true)),$p(a)),$p(n,true))),$p(x,SymbolHead)),
    Condition(Int(Power(Plus(Times(b,Cos(v)),Times(a,Sin(v))),n),x),And(And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),Equal(Plus(m,n),C0)),OddQ(m)))),
SetDelayed(Int(Times(Power(Sin(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(m,true)),Power(Sin(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(n,true)),$p(u,true)),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(u,Times(Power(Sin(Plus(a,Times(b,x))),m),Power(Sin(Plus(c,Times(d,x))),n)),x),x),And(FreeQ(List(a,b,c,d),x),PositiveIntegerQ(m,n)))),
SetDelayed(Int(Times(Power(Cos(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(m,true)),Power(Cos(Plus(Times($p(d,true),$p(x)),$p(c,true))),$p(n,true)),$p(u,true)),$p(x,SymbolHead)),
    Condition(Int(ExpandTrigReduce(u,Times(Power(Cos(Plus(a,Times(b,x))),m),Power(Cos(Plus(c,Times(d,x))),n)),x),x),And(FreeQ(List(a,b,c,d),x),PositiveIntegerQ(m,n)))),
SetDelayed(Int(Times(Sec(Plus(Times($p(b,true),$p(x)),$p(a,true))),Sec(Plus(Times($p(d,true),$p(x)),$p(c)))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,Csc(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(d,CN1))),Int(Tan(Plus(a,Times(b,x))),x)),Times(Csc(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(b,CN1))),Int(Tan(Plus(c,Times(d,x))),x))),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(b,C2),Times(CN1,Power(d,C2))))),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))))),
SetDelayed(Int(Times(Csc(Plus(Times($p(b,true),$p(x)),$p(a,true))),Csc(Plus(Times($p(d,true),$p(x)),$p(c)))),$p(x,SymbolHead)),
    Condition(Plus(Times(Csc(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(b,CN1))),Int(Cot(Plus(a,Times(b,x))),x)),Times(CN1,Csc(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(d,CN1))),Int(Cot(Plus(c,Times(d,x))),x))),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(b,C2),Times(CN1,Power(d,C2))))),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))))),
SetDelayed(Int(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),Tan(Plus(Times($p(d,true),$p(x)),$p(c)))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,b,x,Power(d,CN1)),Times(b,Power(d,CN1),Cos(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(d,CN1))),Int(Times(Sec(Plus(a,Times(b,x))),Sec(Plus(c,Times(d,x)))),x))),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(b,C2),Times(CN1,Power(d,C2))))),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))))),
SetDelayed(Int(Times(Cot(Plus(Times($p(b,true),$p(x)),$p(a,true))),Cot(Plus(Times($p(d,true),$p(x)),$p(c)))),$p(x,SymbolHead)),
    Condition(Plus(Times(CN1,b,x,Power(d,CN1)),Times(Cos(Times(Plus(Times(b,c),Times(CN1,a,d)),Power(d,CN1))),Int(Times(Csc(Plus(a,Times(b,x))),Csc(Plus(c,Times(d,x)))),x))),And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(b,C2),Times(CN1,Power(d,C2))))),NonzeroQ(Plus(Times(b,c),Times(CN1,a,d)))))),
SetDelayed(Int(ArcTan(Plus(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(x,ArcTan(Plus(c,Times(d,Tan(Plus(a,Times(b,x))))))),Times(CN1,CI,b,Int(Times(x,Power(Plus(c,Times(CI,d),Times(c,Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(Plus(c,Times(CI,d)),C2),C1))))),
SetDelayed(Int(ArcCot(Plus(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(x,ArcCot(Plus(c,Times(d,Tan(Plus(a,Times(b,x))))))),Times(CI,b,Int(Times(x,Power(Plus(c,Times(CI,d),Times(c,Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(Plus(c,Times(CI,d)),C2),C1))))),
SetDelayed(Int(ArcTan(Plus(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(x,ArcTan(Plus(c,Times(d,Tan(Plus(a,Times(b,x))))))),Times(CN1,b,Plus(CI,c,Times(CI,d)),Int(Times(x,Power(Plus(CI,c,Times(CI,d),Times(Plus(CI,c,Times(CN1,CI,d)),Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x)),Times(b,Plus(Times(CN1,CI),c,Times(CI,d)),Int(Times(x,Power(Plus(Times(CN1,CI),c,Times(CI,d),Times(Plus(Times(CN1,CI),c,Times(CN1,CI,d)),Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(Plus(c,Times(CI,d)),C2),C1))))),
SetDelayed(Int(ArcCot(Plus(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(x,ArcCot(Plus(c,Times(d,Tan(Plus(a,Times(b,x))))))),Times(b,Plus(CI,c,Times(CI,d)),Int(Times(x,Power(Plus(CI,c,Times(CI,d),Times(Plus(CI,c,Times(CN1,CI,d)),Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x)),Times(CN1,b,Plus(Times(CN1,CI),c,Times(CI,d)),Int(Times(x,Power(Plus(Times(CN1,CI),c,Times(CI,d),Times(Plus(Times(CN1,CI),c,Times(CN1,CI,d)),Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(Plus(c,Times(CI,d)),C2),C1))))),
SetDelayed(Int(Times(ArcTan(Plus(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),ArcTan(Plus(c,Times(d,Tan(Plus(a,Times(b,x)))))),Power(Plus(m,C1),CN1)),Times(CN1,CI,b,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(c,Times(CI,d),Times(c,Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(Plus(c,Times(CI,d)),C2),C1))),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(ArcCot(Plus(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),ArcCot(Plus(c,Times(d,Tan(Plus(a,Times(b,x)))))),Power(Plus(m,C1),CN1)),Times(CI,b,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(c,Times(CI,d),Times(c,Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(Plus(c,Times(CI,d)),C2),C1))),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(ArcTan(Plus(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),ArcTan(Plus(c,Times(d,Tan(Plus(a,Times(b,x)))))),Power(Plus(m,C1),CN1)),Times(CN1,b,Plus(CI,c,Times(CI,d)),Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(CI,c,Times(CI,d),Times(Plus(CI,c,Times(CN1,CI,d)),Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x)),Times(b,Plus(Times(CN1,CI),c,Times(CI,d)),Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(Times(CN1,CI),c,Times(CI,d),Times(Plus(Times(CN1,CI),c,Times(CN1,CI,d)),Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(Plus(c,Times(CI,d)),C2),C1))),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(Times(ArcCot(Plus(Times(Tan(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),ArcCot(Plus(c,Times(d,Tan(Plus(a,Times(b,x)))))),Power(Plus(m,C1),CN1)),Times(b,Plus(CI,c,Times(CI,d)),Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(CI,c,Times(CI,d),Times(Plus(CI,c,Times(CN1,CI,d)),Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x)),Times(CN1,b,Plus(Times(CN1,CI),c,Times(CI,d)),Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(Times(CN1,CI),c,Times(CI,d),Times(Plus(Times(CN1,CI),c,Times(CN1,CI,d)),Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,d),x),NonzeroQ(Plus(Power(Plus(c,Times(CI,d)),C2),C1))),RationalQ(m)),Greater(m,C0)))),
SetDelayed(Int(ArcTan(Plus(Times(Cot(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(x,ArcTan(Plus(c,Times(d,Cot(Plus(a,Times(b,x))))))),Times(CN1,CI,b,Int(Times(x,Power(Plus(c,Times(CN1,CI,d),Times(CN1,c,Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(Plus(c,Times(CN1,CI,d)),C2),C1))))),
SetDelayed(Int(ArcCot(Plus(Times(Cot(Plus(Times($p(b,true),$p(x)),$p(a,true))),$p(d,true)),$p(c,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(x,ArcCot(Plus(c,Times(d,Cot(Plus(a,Times(b,x))))))),Times(CI,b,Int(Times(x,Power(Plus(c,Times(CN1,CI,d),Times(CN1,c,Power(E,Plus(Times(C2,CI,a),Times(C2,CI,b,x))))),CN1)),x))),And(FreeQ(List(a,b,c,d),x),ZeroQ(Plus(Power(Plus(c,Times(CN1,CI,d)),C2),C1)))))
  );
}
