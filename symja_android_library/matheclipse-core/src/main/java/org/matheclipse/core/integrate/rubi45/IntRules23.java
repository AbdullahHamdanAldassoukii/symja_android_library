package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules23 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Times(pd,Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(b,Plus(m,Times(pn,p),C1)),CN1)),And(And(And(FreeQ(List(b,c,pd,pe,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Times(b,pe,Plus(m,Times(pn,p),C1)),Times(CN1,c,pd,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))))),NonzeroQ(Plus(m,Times(pn,p),C1))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Plus(Times(pd,Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(b,Plus(m,Times(pn,p),C1)),CN1)),Times(Plus(Times(b,pe,Plus(m,Times(pn,p),C1)),Times(CN1,c,pd,Plus(m,pn,Times(C2,pn,p),C1))),Power(Times(b,Plus(m,Times(pn,p),C1)),CN1),Int(Times(Power(x,Plus(m,pn)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x))),And(And(And(And(And(And(FreeQ(List(b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,c,pd)))),NonzeroQ(Plus(Times(b,pe,Plus(m,Times(pn,p),C1)),Times(CN1,c,pd,Plus(m,pn,Times(C2,pn,p),C1))))),RationalQ(m,pn,p)),Less(Plus(m,Times(pn,p)),CN1)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Plus(Times(Plus(Times(b,pe),Times(CN1,c,pd)),Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(b,c,pn,Plus(p,C1)),CN1)),Times(CN1,Plus(Times(b,pe,Plus(m,Times(pn,p),C1)),Times(CN1,c,pd,Plus(m,Times(pn,p),Times(pn,Plus(p,C1)),C1))),Power(Times(b,c,pn,Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(b,pe),Times(CN1,c,pd)))),NonzeroQ(Plus(Times(b,pe,Plus(m,C1)),Times(CN1,c,pd,Plus(m,Times(pn,Plus(p,C1)),C1))))),RationalQ(m,pn,p)),And(Less(C0,pn),LessEqual(pn,m))),Less(p,CN1)))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Plus(Times(pe,Power(x,Plus(m,Times(CN1,pn),C1)),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(c,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1)),Times(CN1,Plus(Times(b,pe,Plus(m,Times(pn,p),C1)),Times(CN1,c,pd,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))),Power(Times(c,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,m),Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x))),And(And(And(FreeQ(List(b,c,pd,pe,m,pn,p),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(b,pe,Plus(m,Times(pn,p),C1)),Times(CN1,c,pd,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))))),NonzeroQ(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_)),x_Symbol),
    Condition(Times(Power(Plus(Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Power(x,Times(pn,p)),Power(Plus(b,Times(c,Power(x,pn))),p)),CN1),Int(Times(Power(x,Plus(m,Times(pn,p))),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(b,Times(c,Power(x,pn))),p)),x)),And(And(FreeQ(List(b,c,pd,pe,m,pn,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(pn,CN1))),Times(CN1,C1))),Power(Plus(pd,Times(pe,x)),q),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x),x,Power(x,pn))),And(And(FreeQ(List(a,b,c,pd,pe,m,pn,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),IntegerQ(Simplify(Times(Plus(m,C1),Power(pn,CN1))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_DEFAULT),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(pn,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(pn,CN1))),Times(CN1,C1))),Power(Plus(pd,Times(pe,x)),q),Power(Plus(a,Times(c,Sqr(x))),p)),x),x,Power(x,pn))),And(And(FreeQ(List(a,c,pd,pe,m,pn,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),IntegerQ(Simplify(Times(Plus(m,C1),Power(pn,CN1))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(Power(c,p),CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(Times(C1D2,b),Times(c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn))))),Power(Times(Power(Times(C4,c),Plus(p,Times(CN1,C1D2))),Plus(b,Times(C2,c,Power(x,pn)))),CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(b,Times(C2,c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Plus(b,Times(C2,c,Power(x,pn))),Power(Times(Power(Times(C4,c),Plus(p,C1D2)),Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))))),CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(b,Times(C2,c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Power(Plus(b,Times(C2,c,Power(x,pn))),Times(C2,p)),CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(b,Times(C2,c,Power(x,pn))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(Times(C2,p)))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,p)),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(pe,CN1),Power(x,pn))),p)),x),And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,p)),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(pe,CN1),Power(x,pn))),p)),x),And(And(And(FreeQ(List(a,c,pd,pe,q,m,pn,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Power(Plus(pd,Times(pe,Power(x,pn))),p),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(x,pn),Power(pe,CN1))),p)),CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,p)),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(pe,CN1),Power(x,pn))),p)),x)),And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Power(Plus(pd,Times(pe,Power(x,pn))),p),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(x,pn),Power(pe,CN1))),p)),CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,p)),Power(Plus(Times(a,Power(pd,CN1)),Times(c,Power(pe,CN1),Power(x,pn))),p)),x)),And(And(And(FreeQ(List(a,c,pd,pe,m,pn,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p)),x),x),And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_DEFAULT),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p)),x),x),And(And(FreeQ(List(a,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),pn))),Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(pd,Times(pe,Power(x,Times(pn,Power(g,CN1))))),q),Power(Plus(a,Times(b,Power(x,Times(pn,Power(g,CN1)))),Times(c,Power(x,Times(C2,pn,Power(g,CN1))))),p)),x),x,Power(x,g)))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),RationalQ(m,pn,p)),Not(PositiveIntegerQ(p))),Unequal(Plus(m,C1),C0)),Or(Not(PositiveIntegerQ(pn)),And(And(Less(Less(C0,Plus(m,C1)),Times(C2,pn)),And(LessEqual(CN1,p),Less(p,C0))),Not(And(IntegerQ(m),CoprimeQ(Plus(m,C1),pn)))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),pn))),Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(pd,Times(pe,Power(x,Times(pn,Power(g,CN1))))),q),Power(Plus(a,Times(c,Power(x,Times(C2,pn,Power(g,CN1))))),p)),x),x,Power(x,g)))),And(And(And(And(And(FreeQ(List(a,c,pd,pe,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),RationalQ(m,pn,p)),Not(PositiveIntegerQ(p))),Unequal(Plus(m,C1),C0)),Or(Not(PositiveIntegerQ(pn)),And(And(Less(Less(C0,Plus(m,C1)),Times(C2,pn)),And(LessEqual(CN1,p),Less(p,C0))),Not(And(IntegerQ(m),CoprimeQ(Plus(m,C1),pn)))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),p_),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Simplify(Times(pn,Power(Plus(m,C1),CN1))))),Condition(Times(Power(Plus(m,C1),CN1),Subst(Int(Times(Power(Plus(pd,Times(pe,Power(x,g))),q),Power(Plus(a,Times(b,Power(x,g)),Times(c,Power(x,Times(C2,g)))),p)),x),x,Power(x,Plus(m,C1)))),And(IntegerQ(g),Or(Greater(g,C0),Not(PositiveIntegerQ(pn)))))),And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),RationalQ(p)),And(LessEqual(CN1,p),Less(p,C0))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Simplify(Times(pn,Power(Plus(m,C1),CN1))))),Condition(Times(Power(Plus(m,C1),CN1),Subst(Int(Times(Power(Plus(pd,Times(pe,Power(x,g))),q),Power(Plus(a,Times(c,Power(x,Times(C2,g)))),p)),x),x,Power(x,Plus(m,C1)))),And(IntegerQ(g),Or(Greater(g,C0),Not(PositiveIntegerQ(pn)))))),And(And(And(And(FreeQ(List(a,c,pd,pe,m,pn,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),RationalQ(p)),And(LessEqual(CN1,p),Less(p,C0))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(Times(x_,Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_)))),CN1)),x_Symbol),
    Condition(Plus(Times(pd,Log(x),Power(a,CN1)),Times(Power(a,CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Simp(Plus(Times(a,pe),Times(CN1,b,pd),Times(CN1,c,pd,Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(Times(x_,Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)))),CN1)),x_Symbol),
    Condition(Plus(Times(pd,Log(x),Power(a,CN1)),Times(Power(a,CN1),Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Plus(Times(a,pe),Times(CN1,c,pd,Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(FreeQ(List(a,c,pd,pe,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1)),x_Symbol),
    Condition(Plus(Times(pd,Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,Power(a,CN1),Int(Times(Power(x,Plus(m,pn)),Simp(Plus(Times(b,pd),Times(CN1,a,pe),Times(c,pd,Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),PositiveIntegerQ(pn)),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1)),x_Symbol),
    Condition(Plus(Times(pd,Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(Power(a,CN1),Int(Times(Power(x,Plus(m,pn)),Plus(Times(a,pe),Times(CN1,c,pd,Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),PositiveIntegerQ(pn)),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1)),x_Symbol),
    Condition(Plus(Times(pe,Power(x,Plus(m,Times(CN1,pn),C1)),Power(Times(c,Plus(m,Times(CN1,pn),C1)),CN1)),Times(CN1,Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(a,pe),Times(Plus(Times(b,pe),Times(CN1,c,pd)),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),PositiveIntegerQ(pn)),RationalQ(m)),Greater(Plus(m,Times(CN1,pn),C1),C0)))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1)),x_Symbol),
    Condition(Plus(Times(pe,Power(x,Plus(m,Times(CN1,pn),C1)),Power(Times(c,Plus(m,Times(CN1,pn),C1)),CN1)),Times(CN1,Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Plus(Times(a,pe),Times(CN1,c,pd,Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),PositiveIntegerQ(pn)),RationalQ(m)),Greater(Plus(m,Times(CN1,pn),C1),C0)))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Plus(Times(C2,c,q),Times(CN1,b,c)),C2))),Plus(Times(c,Power(Times(C2,q,r),CN1),Int(Times(Power(x,m),Simp(Plus(Times(pd,r),Times(CN1,Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),x),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)),Times(c,Power(Times(C2,q,r),CN1),Int(Times(Power(x,m),Simp(Plus(Times(pd,r),Times(Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),x),Power(Plus(q,Times(r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)))),Not(NegativeQ(Plus(Times(C2,c,q),Times(CN1,b,c)))))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegersQ(m,Times(C1D2,pn))),Less(Less(C0,m),pn)),CoprimeQ(Plus(m,C1),pn)),PosQ(Times(a,c))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Times(C2,c,q),C2))),Plus(Times(c,Power(Times(C2,q,r),CN1),Int(Times(Power(x,m),Simp(Plus(Times(pd,r),Times(CN1,Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),x),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)),Times(c,Power(Times(C2,q,r),CN1),Int(Times(Power(x,m),Simp(Plus(Times(pd,r),Times(Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),x),Power(Plus(q,Times(r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)))),Not(NegativeQ(Times(C2,c,q))))),And(And(And(And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),PositiveQ(Times(a,c))),IntegersQ(m,Times(C1D2,pn))),Less(Less(C0,m),pn)),CoprimeQ(Plus(m,C1),pn)))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Plus(Times(Plus(pe,Times(Plus(Times(C2,c,pd),Times(CN1,b,pe)),Power(q,CN1))),Int(Times(Power(x,m),Power(Plus(b,Times(CN1,q),Times(C2,c,Power(x,pn))),CN1)),x)),Times(Plus(pe,Times(CN1,Plus(Times(C2,c,pd),Times(CN1,b,pe)),Power(q,CN1))),Int(Times(Power(x,m),Power(Plus(b,q,Times(C2,c,Power(x,pn))),CN1)),x)))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegersQ(m,pn)),Less(Less(C0,m),pn)),CoprimeQ(Plus(m,C1),pn)),Not(And(And(IntegerQ(Times(C1D2,pn)),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PosQ(Times(a,c))))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Times(C2,Rt(Times(CN1,a,c),C2)))),Plus(Times(Plus(pe,Times(c,pd,Power(Times(C2,q),CN1))),Int(Times(Power(x,m),Power(Plus(Times(CN1,q),Times(c,Power(x,pn))),CN1)),x)),Times(Plus(pe,Times(CN1,c,pd,Power(Times(C2,q),CN1))),Int(Times(Power(x,m),Power(Plus(q,Times(c,Power(x,pn))),CN1)),x)))),And(And(And(And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),IntegersQ(m,pn)),Less(Less(C0,m),pn)),CoprimeQ(Plus(m,C1),pn)),Not(And(IntegerQ(Times(C1D2,pn)),PositiveQ(Times(a,c))))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(r,Rt(Times(c,Power(pe,CN1),Plus(Times(C2,c,pd),Times(CN1,b,pe))),C2))),Plus(Times(C1D2,pe,Int(Times(Power(x,m),Power(Plus(Times(c,pd,Power(pe,CN1)),Times(CN1,r,x),Times(c,Sqr(x))),CN1)),x)),Times(C1D2,pe,Int(Times(Power(x,m),Power(Plus(Times(c,pd,Power(pe,CN1)),Times(r,x),Times(c,Sqr(x))),CN1)),x)))),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),PositiveQ(Times(pd,Power(pe,CN1)))),PosQ(Times(c,Power(pe,CN1),Plus(Times(C2,c,pd),Times(CN1,b,pe))))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Sqr(x_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,C4))),CN1)),x_Symbol),
    Condition(Module(List(Set(r,Rt(Times(C2,Sqr(c),pd,Power(pe,CN1)),C2))),Plus(Times(C1D2,pe,Int(Times(Power(x,m),Power(Plus(Times(c,pd,Power(pe,CN1)),Times(CN1,r,x),Times(c,Sqr(x))),CN1)),x)),Times(C1D2,pe,Int(Times(Power(x,m),Power(Plus(Times(c,pd,Power(pe,CN1)),Times(r,x),Times(c,Sqr(x))),CN1)),x)))),And(And(FreeQ(List(a,c,pd,pe,m),x),ZeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,a,Sqr(pe))))),PositiveQ(Times(pd,Power(pe,CN1)))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Plus(Times(C2,c,q),Times(CN1,b,c)),C2))),Plus(Times(c,Power(Times(C2,q,r),CN1),Int(Times(Power(x,m),Plus(Times(pd,r),Times(CN1,Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)),Times(c,Power(Times(C2,q,r),CN1),Int(Times(Power(x,m),Plus(Times(pd,r),Times(Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),Power(Plus(q,Times(r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)))),Not(NegativeQ(Plus(Times(C2,c,q),Times(CN1,b,c)))))),And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,m),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),EvenQ(pn)),Greater(pn,C2)),PosQ(Times(a,c))))),
ISetDelayed(Int(Times(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Times(C2,c,q),C2))),Plus(Times(c,Power(Times(C2,q,r),CN1),Int(Times(Power(x,m),Plus(Times(pd,r),Times(CN1,Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)),Times(c,Power(Times(C2,q,r),CN1),Int(Times(Power(x,m),Plus(Times(pd,r),Times(Plus(Times(c,pd),Times(CN1,pe,q)),Power(x,Times(C1D2,pn)))),Power(Plus(q,Times(r,Power(x,Times(C1D2,pn))),Times(c,Power(x,pn))),CN1)),x)))),Not(NegativeQ(Times(C2,c,q))))),And(And(And(And(And(FreeQ(List(a,c,pd,pe,m),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),EvenQ(pn)),Greater(pn,C2)),PositiveQ(Times(a,c))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x),x),And(And(And(And(FreeQ(List(a,b,c,pd,pe,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),IntegersQ(q,m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x),x),And(And(And(FreeQ(List(a,c,pd,pe,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),IntegersQ(q,m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(x,m),Times(Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x),x),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),IntegerQ(q)),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(x,m),Times(Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x),x),And(And(And(And(FreeQ(List(a,c,pd,pe,m,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),IntegerQ(q)),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Plus(Times(Power(c,CN2),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Plus(Times(c,pd),Times(CN1,b,pe),Times(c,pe,Power(x,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1)))),x)),Times(CN1,Power(c,CN2),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Simp(Plus(Times(a,Plus(Times(c,pd),Times(CN1,b,pe))),Times(Plus(Times(b,c,pd),Times(CN1,Sqr(b),pe),Times(a,c,pe)),Power(x,pn))),x),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(q))),RationalQ(m,pn,q)),Greater(q,C0)),Less(Less(C0,Times(C2,pn)),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),CN1),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Plus(Times(Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),q)),x)),Times(CN1,a,Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,C2,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),q),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(FreeQ(List(a,c,pd,pe,q),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(q))),RationalQ(m,pn)),Less(Less(C0,Times(C2,pn)),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Plus(Times(pe,Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1)))),x)),Times(CN1,Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(a,pe),Times(CN1,Plus(Times(c,pd),Times(CN1,b,pe)),Power(x,pn))),x),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(q))),RationalQ(m,pn,q)),Greater(q,C0)),And(Less(Less(C0,pn),Plus(m,C1)),LessEqual(Plus(m,C1),Times(C2,pn)))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),CN1),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Plus(Times(pe,Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1)))),x)),Times(CN1,Power(c,CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(a,pe),Times(CN1,c,pd,Power(x,pn))),x),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(q))),RationalQ(m,pn,q)),Greater(q,C0)),And(Less(Less(C0,pn),Plus(m,C1)),LessEqual(Plus(m,C1),Times(C2,pn)))))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Plus(Times(pd,Power(a,CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1)))),x)),Times(CN1,Power(a,CN1),Int(Times(Power(x,Plus(m,pn)),Simp(Plus(Times(b,pd),Times(CN1,a,pe),Times(c,pd,Power(x,pn))),x),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(q))),RationalQ(m,pn,q)),Greater(q,C0)),Less(m,C0)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),CN1),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Plus(Times(pd,Power(a,CN1),Int(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1)))),x)),Times(Power(a,CN1),Int(Times(Power(x,Plus(m,pn)),Simp(Plus(Times(a,pe),Times(CN1,c,pd,Power(x,pn))),x),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,Times(CN1,C1))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(q))),RationalQ(m,pn,q)),Greater(q,C0)),Less(m,C0)),Greater(pn,C0)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Plus(Times(CN1,pd,pe,Power(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),q)),x)),Times(Power(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Plus(Times(a,pe),Times(c,pd,Power(x,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,C1)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(q))),RationalQ(m,pn,q)),Less(q,C0)),Less(Less(C0,pn),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),CN1),Power(Plus(pd_DEFAULT,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Plus(Times(CN1,pd,pe,Power(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),q)),x)),Times(Power(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Plus(Times(a,pe),Times(c,pd,Power(x,pn))),Power(Plus(pd,Times(pe,Power(x,pn))),Plus(q,C1)),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x))),And(And(And(And(And(And(FreeQ(List(a,c,pd,pe),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(q))),RationalQ(m,pn,q)),Less(q,C0)),Less(Less(C0,pn),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Plus(pd,Times(pe,Power(x,pn))),q),Times(Power(x,m),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1)),x),x),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,q,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(q))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Plus(pd,Times(pe,Power(x,pn))),q),Times(Power(x,m),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1)),x),x),And(And(And(And(FreeQ(List(a,c,pd,pe,q,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(q))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q)),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1),x),x),And(And(And(And(And(FreeQ(List(a,b,c,pd,pe,m,q,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(CN1,b,pd,pe),Times(a,Sqr(pe))))),Not(IntegerQ(q))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),CN1),Power(Plus(pd_,Times(pe_DEFAULT,Power(x_,pn_))),q_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(pd,Times(pe,Power(x,pn))),q)),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1),x),x),And(And(And(And(FreeQ(List(a,c,pd,pe,m,q,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Times(c,Sqr(pd)),Times(a,Sqr(pe))))),Not(IntegerQ(q))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(pa_DEFAULT,Times(pb_DEFAULT,Power(x_,pn_))),Power(Times(x_,Sqrt(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,pn_))))),CN1)),x_Symbol),
    Condition(Plus(Times(pa,Int(Power(Times(x,Sqrt(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))))),CN1),x)),Times(pb,Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),CN1D2)),x))),And(And(FreeQ(List(a,b,c,pa,pb,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),
ISetDelayed(Int(Times(Plus(pa_DEFAULT,Times(pb_DEFAULT,Power(x_,pn_))),Power(Times(x_,Sqrt(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))))),CN1)),x_Symbol),
    Condition(Plus(Times(pa,Int(Power(Times(x,Sqrt(Plus(a,Times(c,Power(x,Times(C2,pn)))))),CN1),x)),Times(pb,Int(Times(Power(x,Plus(pn,Times(CN1,C1))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),CN1D2)),x))),And(FreeQ(List(a,c,pa,pb,pn),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(pa,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),Times(pb,Plus(m,C1),Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Plus(m,C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1)),Times(pn,p,Power(Times(Plus(m,C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,Plus(pn,m)),Simp(Plus(Times(C2,a,pb,Plus(m,C1)),Times(CN1,pa,b,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),Times(Plus(Times(b,pb,Plus(m,C1)),Times(CN1,C2,c,pa,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p)),Greater(p,C0)),LessEqual(m,Times(CN1,pn))),Unequal(Plus(m,C1),C0)),Unequal(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),C0)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(pa,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),Times(pb,Plus(m,C1),Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p),Power(Times(Plus(m,C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1)),Times(C2,pn,p,Power(Times(Plus(m,C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,Plus(pn,m)),Plus(Times(a,pb,Plus(m,C1)),Times(CN1,c,pa,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,pa,pb),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),PositiveIntegerQ(pn)),RationalQ(m,p)),Greater(p,C0)),LessEqual(m,Times(CN1,pn))),Unequal(Plus(m,C1),C0)),Unequal(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),C0)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(b,pb,pn,p),Times(c,pa,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),Times(c,pb,Plus(Times(C2,pn,p),m,C1),Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),p),Power(Times(c,Plus(Times(C2,pn,p),m,C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1)),Times(pn,p,Power(Times(c,Plus(Times(C2,pn,p),m,C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,m),Simp(Plus(Times(C2,a,c,pa,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),Times(CN1,a,b,pb,Plus(m,C1)),Times(Plus(Times(C2,a,c,pb,Plus(Times(C2,pn,p),m,C1)),Times(pa,b,c,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),Times(CN1,Sqr(b),pb,Plus(m,Times(pn,p),C1))),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p)),Greater(p,C0)),Greater(m,Times(CN1,pn))),Unequal(Plus(Times(C2,pn,p),m,C1),C0)),Unequal(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),C0)),Unequal(Plus(m,C1),pn)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(c,pa,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),Times(c,pb,Plus(Times(C2,pn,p),m,C1),Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),p),Power(Times(c,Plus(Times(C2,pn,p),m,C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1)),Times(C2,a,pn,p,Power(Times(Plus(Times(C2,pn,p),m,C1),Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),CN1),Int(Times(Power(x,m),Plus(Times(pa,Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1)),Times(pb,Plus(Times(C2,pn,p),m,C1),Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,c,pa,pb),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),PositiveIntegerQ(pn)),RationalQ(m,p)),Greater(p,C0)),Greater(m,Times(CN1,pn))),Unequal(Plus(Times(C2,pn,p),m,C1),C0)),Unequal(Plus(m,Times(pn,Plus(Times(C2,p),C1)),C1),C0)),Unequal(Plus(m,C1),pn)))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Plus(Times(pa,b),Times(CN1,C2,a,pb),Times(CN1,Plus(Times(b,pb),Times(CN1,C2,c,pa)),Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1)),Times(Power(Times(pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Simp(Plus(Times(Plus(pn,Times(CN1,m),Times(CN1,C1)),Plus(Times(pa,b),Times(CN1,C2,a,pb))),Times(Plus(Times(C2,pn,p),Times(C2,pn),m,C1),Plus(Times(b,pb),Times(CN1,C2,c,pa)),Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p)),Less(p,CN1)),Greater(m,Plus(pn,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,pn),C1)),Plus(Times(a,pb),Times(CN1,c,pa,Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(C2,a,c,pn,Plus(p,C1)),CN1)),Times(Power(Times(C2,a,c,pn,Plus(p,C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,pn))),Plus(Times(a,pb,Plus(pn,Times(CN1,m),Times(CN1,C1))),Times(c,pa,Plus(Times(C2,pn,p),Times(C2,pn),m,C1),Power(x,pn))),Power(Plus(a,Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(FreeQ(List(a,c,pa,pb),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),PositiveIntegerQ(pn)),RationalQ(m,p)),Less(p,CN1)),Greater(m,Plus(pn,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Plus(pa_,Times(pb_DEFAULT,Power(x_,pn_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,pn_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,C1)),Plus(Times(pa,Plus(Sqr(b),Times(CN1,C2,a,c))),Times(CN1,a,b,pb),Times(Plus(Times(pa,b),Times(CN1,C2,a,pb)),c,Power(x,pn))),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1)),Power(Times(a,pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1)),Times(Power(Times(a,pn,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),CN1),Int(Times(Power(x,m),Simp(Plus(Times(pa,Plus(Times(Sqr(b),Plus(m,Times(pn,Plus(p,C1)),C1)),Times(CN1,C2,a,c,Plus(m,Times(C2,pn,Plus(p,C1)),C1)))),Times(CN1,a,b,pb,Plus(m,C1)),Times(Plus(m,Times(pn,Plus(Times(C2,p),C3)),C1),Plus(Times(pa,b),Times(CN1,C2,a,pb)),c,Power(x,pn))),x),Power(Plus(a,Times(b,Power(x,pn)),Times(c,Power(x,Times(C2,pn)))),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,pa,pb),x),ZeroQ(Plus(j,Times(CN1,C2,pn)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(pn)),RationalQ(m,p)),Less(p,CN1)),Less(m,Plus(pn,Times(CN1,C1))))))
  );
}
