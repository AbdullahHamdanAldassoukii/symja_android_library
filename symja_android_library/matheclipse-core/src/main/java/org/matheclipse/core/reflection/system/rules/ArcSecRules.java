package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.IAST;

/**
 * <p>Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.</p>
 * <p>See GIT repository at: <a href="https://bitbucket.org/axelclk/symja_android_library">bitbucket.org/axelclk/symja_android_library under the tools directory</a>.</p>
 */
public interface ArcSecRules {
  /**
   * <ul>
   * <li>index 0 - number of equal rules in <code>RULES</code></li>
	 * </ul>
	 */
  final public static int[] SIZES = { 24, 0 };

  final public static IAST RULES = List(
    IInit(ArcSec, SIZES),
    // ArcSec(0)=ComplexInfinity
    ISet(ArcSec(C0),
      CComplexInfinity),
    // ArcSec(1)=0
    ISet(ArcSec(C1),
      C0),
    // ArcSec(-1)=Pi
    ISet(ArcSec(CN1),
      Pi),
    // ArcSec(Sqrt(6)-Sqrt(2))=Rational(1,12)*Pi
    ISet(ArcSec(Plus(Negate(CSqrt2),CSqrt6)),
      Times(QQ(1L,12L),Pi)),
    // ArcSec(Sqrt(2)-Sqrt(6))=Rational(11,12)*Pi
    ISet(ArcSec(Plus(CSqrt2,Negate(CSqrt6))),
      Times(QQ(11L,12L),Pi)),
    // ArcSec(2/Sqrt(3))=Rational(1,6)*Pi
    ISet(ArcSec(Times(C2,C1DSqrt3)),
      Times(QQ(1L,6L),Pi)),
    // ArcSec(-2/Sqrt(3))=Rational(5,6)*Pi
    ISet(ArcSec(Times(CN2,C1DSqrt3)),
      Times(QQ(5L,6L),Pi)),
    // ArcSec(Sqrt(5)+(-1)*1)=Rational(1,5)*Pi
    ISet(ArcSec(Plus(CN1,CSqrt5)),
      Times(QQ(1L,5L),Pi)),
    // ArcSec(1-Sqrt(5))=Rational(4,5)*Pi
    ISet(ArcSec(Plus(C1,Negate(CSqrt5))),
      Times(QQ(4L,5L),Pi)),
    // ArcSec(Sqrt(2))=Rational(1,4)*Pi
    ISet(ArcSec(CSqrt2),
      Times(C1D4,Pi)),
    // ArcSec(-Sqrt(2))=Rational(3,4)*Pi
    ISet(ArcSec(Negate(CSqrt2)),
      Times(QQ(3L,4L),Pi)),
    // ArcSec(2)=Rational(1,3)*Pi
    ISet(ArcSec(C2),
      Times(C1D3,Pi)),
    // ArcSec(-2)=Rational(2,3)*Pi
    ISet(ArcSec(CN2),
      Times(QQ(2L,3L),Pi)),
    // ArcSec(1+Sqrt(5))=Rational(1,5)*Pi
    ISet(ArcSec(Plus(C1,CSqrt5)),
      Times(QQ(1L,5L),Pi)),
    // ArcSec(-1-Sqrt(5))=Rational(3,5)*Pi
    ISet(ArcSec(Plus(CN1,Negate(CSqrt5))),
      Times(QQ(3L,5L),Pi)),
    // ArcSec(Sqrt(2)+Sqrt(6))=Rational(5,12)*Pi
    ISet(ArcSec(Plus(CSqrt2,CSqrt6)),
      Times(QQ(5L,12L),Pi)),
    // ArcSec(-Sqrt(2)-Sqrt(6))=Rational(7,12)*Pi
    ISet(ArcSec(Plus(Negate(CSqrt2),Negate(CSqrt6))),
      Times(QQ(7L,12L),Pi)),
    // ArcSec(I)=Rational(1,2)*Pi+I*Log(Sqrt(2)+1)
    ISet(ArcSec(CI),
      Plus(Times(C1D2,Pi),Times(CI,Log(Plus(C1,CSqrt2))))),
    // ArcSec((-1)*I)=Rational(1,2)*Pi+I*Log(Sqrt(2)+(-1)*1)
    ISet(ArcSec(CNI),
      Plus(Times(C1D2,Pi),Times(CI,Log(Plus(CN1,CSqrt2))))),
    // ArcSec(Infinity)=Rational(1,2)*Pi
    ISet(ArcSec(oo),
      Times(C1D2,Pi)),
    // ArcSec(-Infinity)=Rational(1,2)*Pi
    ISet(ArcSec(Noo),
      Times(C1D2,Pi)),
    // ArcSec(I*Infinity)=Rational(1,2)*Pi
    ISet(ArcSec(DirectedInfinity(CI)),
      Times(C1D2,Pi)),
    // ArcSec((-1)*I*Infinity)=Rational(1,2)*Pi
    ISet(ArcSec(DirectedInfinity(CNI)),
      Times(C1D2,Pi)),
    // ArcSec(ComplexInfinity)=Rational(1,2)*Pi
    ISet(ArcSec(CComplexInfinity),
      Times(C1D2,Pi))
  );
}
