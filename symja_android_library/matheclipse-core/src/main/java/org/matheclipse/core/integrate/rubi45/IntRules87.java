package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules87 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(u_,$(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Sin(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(C1,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True))),And(FreeQ(List(a,b,c),x),Or(SameQ(pf,$s("Cos")),SameQ(pf,$s("§cos")))))),
ISetDelayed(Int(Times(u_,$(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cos(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(C1,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True))),And(FreeQ(List(a,b,c),x),Or(SameQ(pf,$s("Sin")),SameQ(pf,$s("§sin")))))),
ISetDelayed(Int(Times(u_,$(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Sin(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(Power(Times(b,c),CN1),Subst(Int(SubstFor(Power(x,CN1),Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True))),And(FreeQ(List(a,b,c),x),Or(SameQ(pf,$s("Cot")),SameQ(pf,$s("§cot")))))),
ISetDelayed(Int(Times(u_,$(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cos(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,Power(Times(b,c),CN1),Subst(Int(SubstFor(Power(x,CN1),Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True))),And(FreeQ(List(a,b,c),x),Or(SameQ(pf,$s("Tan")),SameQ(pf,$s("§tan")))))),
ISetDelayed(Int(Times(u_,Sqr($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Tan(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(C1,Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True))),And(And(FreeQ(List(a,b,c),x),NonsumQ(u)),Or(SameQ(pf,$s("Sec")),SameQ(pf,$s("§sec")))))),
ISetDelayed(Int(Times(u_,Power($($s("§cos"),Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),CN2)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Tan(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(C1,Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True))),And(FreeQ(List(a,b,c),x),NonsumQ(u)))),
ISetDelayed(Int(Times(u_,Sqr($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cot(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(C1,Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True))),And(And(FreeQ(List(a,b,c),x),NonsumQ(u)),Or(SameQ(pf,$s("Csc")),SameQ(pf,$s("§csc")))))),
ISetDelayed(Int(Times(u_,Power($($s("§sin"),Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),CN2)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cot(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(C1,Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True))),And(FreeQ(List(a,b,c),x),NonsumQ(u)))),
ISetDelayed(Int(Times(u_,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Tan(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(Power(Times(b,c,Power(pd,Plus(pn,Times(CN1,C1)))),CN1),Subst(Int(SubstFor(Power(Times(Power(x,pn),Plus(C1,Times(Sqr(pd),Sqr(x)))),CN1),Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),And(FunctionOfQ(Times(Tan(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True),TryPureTanSubst(Times(ActivateTrig(u),Power(Cot(Times(c,Plus(a,Times(b,x)))),pn)),x)))),And(And(FreeQ(List(a,b,c),x),IntegerQ(pn)),Or(SameQ(pf,$s("Cot")),SameQ(pf,$s("§cot")))))),
ISetDelayed(Int(Times(u_,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cot(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,Power(Times(b,c,Power(pd,Plus(pn,Times(CN1,C1)))),CN1),Subst(Int(SubstFor(Power(Times(Power(x,pn),Plus(C1,Times(Sqr(pd),Sqr(x)))),CN1),Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),And(FunctionOfQ(Times(Cot(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x,True),TryPureTanSubst(Times(ActivateTrig(u),Power(Tan(Times(c,Plus(a,Times(b,x)))),pn)),x)))),And(And(FreeQ(List(a,b,c),x),IntegerQ(pn)),Or(SameQ(pf,$s("Tan")),SameQ(pf,$s("§tan")))))),
ISetDelayed(Int(u_,x_Symbol),
    Module(List(Set(v,FunctionOfTrig(u,x))),Condition(Module(List(Set(pd,FreeFactors(Cot(v),x))),Dist(Times(CN1,pd,Power(Coefficient(v,x,C1),CN1)),Subst(Int(SubstFor(Power(Plus(C1,Times(Sqr(pd),Sqr(x))),CN1),Times(Cot(v),Power(pd,CN1)),u,x),x),x,Times(Cot(v),Power(pd,CN1))),x)),And(And(NotFalseQ(v),FunctionOfQ(NonfreeFactors(Cot(v),x),u,x,True)),TryPureTanSubst(ActivateTrig(u),x))))),
ISetDelayed(Int(u_,x_Symbol),
    Module(List(Set(v,FunctionOfTrig(u,x))),Condition(Module(List(Set(pd,FreeFactors(Tan(v),x))),Dist(Times(pd,Power(Coefficient(v,x,C1),CN1)),Subst(Int(SubstFor(Power(Plus(C1,Times(Sqr(pd),Sqr(x))),CN1),Times(Tan(v),Power(pd,CN1)),u,x),x),x,Times(Tan(v),Power(pd,CN1))),x)),And(And(NotFalseQ(v),FunctionOfQ(NonfreeFactors(Tan(v),x),u,x,True)),TryPureTanSubst(ActivateTrig(u),x))))),
ISetDelayed(Int(Times(Power($(pf_,Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_DEFAULT),Power($(pg_,Plus(c_DEFAULT,Times(x_,pd_DEFAULT))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigReduce(ActivateTrig(Times(Power($(pf,Plus(a,Times(b,x))),p),Power($(pg,Plus(c,Times(pd,x))),q))),x),x),And(And(And(FreeQ(List(a,b,c,pd),x),Or(SameQ(pf,$s("§sin")),SameQ(pf,$s("§cos")))),Or(SameQ(pg,$s("§sin")),SameQ(pg,$s("§cos")))),PositiveIntegerQ(p,q)))),
ISetDelayed(Int(Times(Power($(pf_,Plus(a_DEFAULT,Times(b_DEFAULT,x_))),p_DEFAULT),Power($(pg_,Plus(c_DEFAULT,Times(x_,pd_DEFAULT))),q_DEFAULT),Power($(ph_,Plus(pe_DEFAULT,Times(f_DEFAULT,x_))),r_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigReduce(ActivateTrig(Times(Power($(pf,Plus(a,Times(b,x))),p),Power($(pg,Plus(c,Times(pd,x))),q),Power($(ph,Plus(pe,Times(f,x))),r))),x),x),And(And(And(And(FreeQ(List(a,b,c,pd,pe,f),x),Or(SameQ(pf,$s("§sin")),SameQ(pf,$s("§cos")))),Or(SameQ(pg,$s("§sin")),SameQ(pg,$s("§cos")))),Or(SameQ(ph,$s("§sin")),SameQ(ph,$s("§cos")))),PositiveIntegerQ(p,q,r)))),
ISetDelayed(Int(Times(u_,$(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Sin(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(C1,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(FreeQ(List(a,b,c),x),Or(SameQ(pf,$s("Cos")),SameQ(pf,$s("§cos")))))),
ISetDelayed(Int(Times(u_,$(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cos(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(C1,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(FreeQ(List(a,b,c),x),Or(SameQ(pf,$s("Sin")),SameQ(pf,$s("§sin")))))),
ISetDelayed(Int(Times(u_,$(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Sin(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(Power(Times(b,c),CN1),Subst(Int(SubstFor(Power(x,CN1),Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(FreeQ(List(a,b,c),x),Or(SameQ(pf,$s("Cot")),SameQ(pf,$s("§cot")))))),
ISetDelayed(Int(Times(u_,$(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_))))),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cos(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,Power(Times(b,c),CN1),Subst(Int(SubstFor(Power(x,CN1),Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(FreeQ(List(a,b,c),x),Or(SameQ(pf,$s("Tan")),SameQ(pf,$s("§tan")))))),
ISetDelayed(Int(Times(u_,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Sin(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(Power(Plus(C1,Times(CN1,Sqr(pd),Sqr(x))),Times(C1D2,Plus(pn,Times(CN1,C1)))),Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(And(And(FreeQ(List(a,b,c),x),OddQ(pn)),NonsumQ(u)),Or(SameQ(pf,$s("Cos")),SameQ(pf,$s("§cos")))))),
ISetDelayed(Int(Times(u_,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Sin(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(Power(Plus(C1,Times(CN1,Sqr(pd),Sqr(x))),Times(C1D2,Plus(Times(CN1,pn),Times(CN1,C1)))),Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(And(And(FreeQ(List(a,b,c),x),OddQ(pn)),NonsumQ(u)),Or(SameQ(pf,$s("Sec")),SameQ(pf,$s("§sec")))))),
ISetDelayed(Int(Times(u_,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cos(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(Power(Plus(C1,Times(CN1,Sqr(pd),Sqr(x))),Times(C1D2,Plus(pn,Times(CN1,C1)))),Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(And(And(FreeQ(List(a,b,c),x),OddQ(pn)),NonsumQ(u)),Or(SameQ(pf,$s("Sin")),SameQ(pf,$s("§sin")))))),
ISetDelayed(Int(Times(u_,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cos(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,pd,Power(Times(b,c),CN1),Subst(Int(SubstFor(Power(Plus(C1,Times(CN1,Sqr(pd),Sqr(x))),Times(C1D2,Plus(Times(CN1,pn),Times(CN1,C1)))),Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(And(And(FreeQ(List(a,b,c),x),OddQ(pn)),NonsumQ(u)),Or(SameQ(pf,$s("Csc")),SameQ(pf,$s("§csc")))))),
ISetDelayed(Int(Times(u_,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Sin(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(Power(Times(b,c,Power(pd,Plus(pn,Times(CN1,C1)))),CN1),Subst(Int(SubstFor(Times(Power(Plus(C1,Times(CN1,Sqr(pd),Sqr(x))),Times(C1D2,Plus(pn,Times(CN1,C1)))),Power(Power(x,pn),CN1)),Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(And(And(FreeQ(List(a,b,c),x),OddQ(pn)),NonsumQ(u)),Or(SameQ(pf,$s("Cot")),SameQ(pf,$s("§cot")))))),
ISetDelayed(Int(Times(u_,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_)),x_Symbol),
    Condition(Module(List(Set(pd,FreeFactors(Cos(Times(c,Plus(a,Times(b,x)))),x))),Condition(Times(CN1,Power(Times(b,c,Power(pd,Plus(pn,Times(CN1,C1)))),CN1),Subst(Int(SubstFor(Times(Power(Plus(C1,Times(CN1,Sqr(pd),Sqr(x))),Times(C1D2,Plus(pn,Times(CN1,C1)))),Power(Power(x,pn),CN1)),Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x),x),x,Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)))),FunctionOfQ(Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pd,CN1)),u,x))),And(And(And(FreeQ(List(a,b,c),x),OddQ(pn)),NonsumQ(u)),Or(SameQ(pf,$s("Tan")),SameQ(pf,$s("§tan")))))),
ISetDelayed(Int(Times(u_,Plus(v_,Times(pd_DEFAULT,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_DEFAULT)))),x_Symbol),
    Condition(Module(List(Set(pe,FreeFactors(Sin(Times(c,Plus(a,Times(b,x)))),x))),Condition(Plus(Int(ActivateTrig(Times(u,v)),x),Times(pd,Int(Times(ActivateTrig(u),Power(Cos(Times(c,Plus(a,Times(b,x)))),pn)),x))),FunctionOfQ(Times(Sin(Times(c,Plus(a,Times(b,x)))),Power(pe,CN1)),u,x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),Not(FreeQ(v,x))),OddQ(pn)),NonsumQ(u)),Or(SameQ(pf,$s("Cos")),SameQ(pf,$s("§cos")))))),
ISetDelayed(Int(Times(u_,Plus(v_,Times(pd_DEFAULT,Power($(pf_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),pn_DEFAULT)))),x_Symbol),
    Condition(Module(List(Set(pe,FreeFactors(Cos(Times(c,Plus(a,Times(b,x)))),x))),Condition(Plus(Int(ActivateTrig(Times(u,v)),x),Times(pd,Int(Times(ActivateTrig(u),Power(Sin(Times(c,Plus(a,Times(b,x)))),pn)),x))),FunctionOfQ(Times(Cos(Times(c,Plus(a,Times(b,x)))),Power(pe,CN1)),u,x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),Not(FreeQ(v,x))),OddQ(pn)),NonsumQ(u)),Or(SameQ(pf,$s("Sin")),SameQ(pf,$s("§sin")))))),
ISetDelayed(Int(u_,x_Symbol),
    Module(List(Set(v,FunctionOfTrig(u,x))),Condition(Module(List(Set(pd,FreeFactors(Sin(v),x))),Dist(Times(pd,Power(Coefficient(v,x,C1),CN1)),Subst(Int(SubstFor(C1,Times(Sin(v),Power(pd,CN1)),Times(u,Power(Cos(v),CN1)),x),x),x,Times(Sin(v),Power(pd,CN1))),x)),And(NotFalseQ(v),FunctionOfQ(NonfreeFactors(Sin(v),x),Times(u,Power(Cos(v),CN1)),x))))),
ISetDelayed(Int(u_,x_Symbol),
    Module(List(Set(v,FunctionOfTrig(u,x))),Condition(Module(List(Set(pd,FreeFactors(Cos(v),x))),Dist(Times(CN1,pd,Power(Coefficient(v,x,C1),CN1)),Subst(Int(SubstFor(C1,Times(Cos(v),Power(pd,CN1)),Times(u,Power(Sin(v),CN1)),x),x),x,Times(Cos(v),Power(pd,CN1))),x)),And(NotFalseQ(v),FunctionOfQ(NonfreeFactors(Cos(v),x),Times(u,Power(Sin(v),CN1)),x))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Plus(a_DEFAULT,Times(b_DEFAULT,Sqr($($s("§cos"),Plus(pd_DEFAULT,Times(x_,pe_DEFAULT))))),Times(c_DEFAULT,Sqr($($s("§sin"),Plus(pd_DEFAULT,Times(x_,pe_DEFAULT)))))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,c),p),Int(ActivateTrig(u),x)),And(FreeQ(List(a,b,c,pd,pe,p),x),ZeroQ(Plus(b,Times(CN1,c)))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Plus(a_DEFAULT,Times(c_DEFAULT,Sqr($($s("§sec"),Plus(pd_DEFAULT,Times(x_,pe_DEFAULT))))),Times(b_DEFAULT,Sqr($($s("§tan"),Plus(pd_DEFAULT,Times(x_,pe_DEFAULT)))))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,c),p),Int(ActivateTrig(u),x)),And(FreeQ(List(a,b,c,pd,pe,p),x),ZeroQ(Plus(b,c))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Plus(a_DEFAULT,Times(b_DEFAULT,Sqr($($s("§cot"),Plus(pd_DEFAULT,Times(x_,pe_DEFAULT))))),Times(c_DEFAULT,Sqr($($s("§csc"),Plus(pd_DEFAULT,Times(x_,pe_DEFAULT)))))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,c),p),Int(ActivateTrig(u),x)),And(FreeQ(List(a,b,c,pd,pe,p),x),ZeroQ(Plus(b,c))))),
ISetDelayed(Int(Times(u_,Power(y_,CN1)),x_Symbol),
    Condition(Module(List(Set(q,DerivativeDivides(ActivateTrig(y),ActivateTrig(u),x))),Condition(Times(q,Log(RemoveContent(ActivateTrig(y),x))),Not(FalseQ(q)))),Not(InertTrigFreeQ(u)))),
ISetDelayed(Int(Times(u_,Power(Times(w_,y_),CN1)),x_Symbol),
    Condition(Module(List(Set(q,DerivativeDivides(ActivateTrig(Times(y,w)),ActivateTrig(u),x))),Condition(Times(q,Log(RemoveContent(ActivateTrig(Times(y,w)),x))),Not(FalseQ(q)))),Not(InertTrigFreeQ(u)))),
ISetDelayed(Int(Times(u_,Power(y_,m_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,DerivativeDivides(ActivateTrig(y),ActivateTrig(u),x))),Condition(Times(q,ActivateTrig(Power(y,Plus(m,C1))),Power(Plus(m,C1),CN1)),Not(FalseQ(q)))),And(And(FreeQ(m,x),NonzeroQ(Plus(m,C1))),Not(InertTrigFreeQ(u))))),
ISetDelayed(Int(Times(u_,Power(y_,m_DEFAULT),Power(z_,pn_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(q,DerivativeDivides(ActivateTrig(Times(y,z)),ActivateTrig(Times(u,Power(z,Plus(pn,Times(CN1,m))))),x))),Condition(Times(q,ActivateTrig(Times(Power(y,Plus(m,C1)),Power(z,Plus(m,C1)))),Power(Plus(m,C1),CN1)),Not(FalseQ(q)))),And(And(FreeQ(List(m,pn),x),NonzeroQ(Plus(m,C1))),Not(InertTrigFreeQ(u))))),
ISetDelayed(Int(u_,x_Symbol),
    Condition(Module(List(Set(v,FunctionOfTrig(u,x))),Condition(Module(List(Set(pd,FreeFactors(Tan(v),x))),Dist(Times(pd,Power(Coefficient(v,x,C1),CN1)),Subst(Int(SubstFor(Power(Plus(C1,Times(Sqr(pd),Sqr(x))),CN1),Times(Tan(v),Power(pd,CN1)),u,x),x),x,Times(Tan(v),Power(pd,CN1))),x)),And(NotFalseQ(v),FunctionOfQ(NonfreeFactors(Tan(v),x),u,x)))),InverseFunctionFreeQ(u,x))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Plus(Times(b_DEFAULT,Power($($s("§sec"),Plus(c_DEFAULT,Times(x_,pd_DEFAULT))),pn_DEFAULT)),Times(a_DEFAULT,Power($($s("§tan"),Plus(c_DEFAULT,Times(x_,pd_DEFAULT))),pn_DEFAULT))),p_)),x_Symbol),
    Condition(Int(Times(ActivateTrig(u),Power(Sec(Plus(c,Times(pd,x))),Times(pn,p)),Power(Plus(b,Times(a,Power(Sin(Plus(c,Times(pd,x))),pn))),p)),x),And(FreeQ(List(a,b,c,pd),x),IntegersQ(pn,p)))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Plus(Times(a_DEFAULT,Power($($s("§cot"),Plus(c_DEFAULT,Times(x_,pd_DEFAULT))),pn_DEFAULT)),Times(b_DEFAULT,Power($($s("§csc"),Plus(c_DEFAULT,Times(x_,pd_DEFAULT))),pn_DEFAULT))),p_)),x_Symbol),
    Condition(Int(Times(ActivateTrig(u),Power(Csc(Plus(c,Times(pd,x))),Times(pn,p)),Power(Plus(b,Times(a,Power(Cos(Plus(c,Times(pd,x))),pn))),p)),x),And(FreeQ(List(a,b,c,pd),x),IntegersQ(pn,p)))),
ISetDelayed(Int(Times(u_,Power(Plus(Times(a_,Power($(pf_,Plus(c_DEFAULT,Times(x_,pd_DEFAULT))),p_DEFAULT)),Times(b_DEFAULT,Power($(pf_,Plus(c_DEFAULT,Times(x_,pd_DEFAULT))),q_DEFAULT))),pn_DEFAULT)),x_Symbol),
    Condition(Int(ActivateTrig(Times(u,Power($(pf,Plus(c,Times(pd,x))),Times(pn,p)),Power(Plus(a,Times(b,Power($(pf,Plus(c,Times(pd,x))),Plus(q,Times(CN1,p))))),pn))),x),And(And(And(FreeQ(List(a,b,c,pd,p,q),x),InertTrigQ(pf)),IntegerQ(pn)),PosQ(Plus(q,Times(CN1,p)))))),
ISetDelayed(Int(Times(u_,Power(Plus(Times(a_,Power($(pf_,Plus(pd_DEFAULT,Times(x_,pe_DEFAULT))),p_DEFAULT)),Times(b_DEFAULT,Power($(pf_,Plus(pd_DEFAULT,Times(x_,pe_DEFAULT))),q_DEFAULT)),Times(c_DEFAULT,Power($(pf_,Plus(pd_DEFAULT,Times(x_,pe_DEFAULT))),r_DEFAULT))),pn_DEFAULT)),x_Symbol),
    Condition(Int(ActivateTrig(Times(u,Power($(pf,Plus(pd,Times(pe,x))),Times(pn,p)),Power(Plus(a,Times(b,Power($(pf,Plus(pd,Times(pe,x))),Plus(q,Times(CN1,p)))),Times(c,Power($(pf,Plus(pd,Times(pe,x))),Plus(r,Times(CN1,p))))),pn))),x),And(And(And(And(FreeQ(List(a,b,c,pd,pe,p,q,r),x),InertTrigQ(pf)),IntegerQ(pn)),PosQ(Plus(q,Times(CN1,p)))),PosQ(Plus(r,Times(CN1,p)))))),
ISetDelayed(Int(Times(u_,Power(Plus(a_,Times(b_DEFAULT,Power($(pf_,Plus(pd_DEFAULT,Times(x_,pe_DEFAULT))),p_DEFAULT)),Times(c_DEFAULT,Power($(pf_,Plus(pd_DEFAULT,Times(x_,pe_DEFAULT))),q_DEFAULT))),pn_DEFAULT)),x_Symbol),
    Condition(Int(ActivateTrig(Times(u,Power($(pf,Plus(pd,Times(pe,x))),Times(pn,p)),Power(Plus(b,Times(a,Power($(pf,Plus(pd,Times(pe,x))),Times(CN1,p))),Times(c,Power($(pf,Plus(pd,Times(pe,x))),Plus(q,Times(CN1,p))))),pn))),x),And(And(And(FreeQ(List(a,b,c,pd,pe,p,q),x),InertTrigQ(pf)),IntegerQ(pn)),NegQ(p)))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Plus(Times(a_DEFAULT,$($s("§cos"),Plus(c_DEFAULT,Times(x_,pd_DEFAULT)))),Times(b_DEFAULT,$($s("§sin"),Plus(c_DEFAULT,Times(x_,pd_DEFAULT))))),pn_DEFAULT)),x_Symbol),
    Condition(Int(Times(ActivateTrig(u),Power(Times(a,Power(E,Times(CN1,a,Power(b,CN1),Plus(c,Times(pd,x))))),pn)),x),And(FreeQ(List(a,b,c,pd,pn),x),ZeroQ(Plus(Sqr(a),Sqr(b)))))),
ISetDelayed(Int(u_,x_Symbol),
    Condition(Int(TrigSimplify(u),x),TrigSimplifyQ(u))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Times(a_,v_),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v))),Times(Power(a,Plus(p,Times(CN1,C1D2))),Sqrt(Times(a,$s("vv"))),Power($s("vv"),CN1D2),Int(Times($s("uu"),Power($s("vv"),p)),x))),And(And(FreeQ(a,x),PositiveIntegerQ(Plus(p,C1D2))),Not(InertTrigFreeQ(v))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Times(a_,v_),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v))),Times(Power(a,Plus(p,C1D2)),Sqrt($s("vv")),Power(Times(a,$s("vv")),CN1D2),Int(Times($s("uu"),Power($s("vv"),p)),x))),And(And(FreeQ(a,x),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))),Not(InertTrigFreeQ(v))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Times(a_,v_),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v))),Times(Power(Times(a,$s("vv")),p),Power(Power($s("vv"),p),CN1),Int(Times($s("uu"),Power($s("vv"),p)),x))),And(And(FreeQ(List(a,p),x),Not(IntegerQ(Times(C2,p)))),Not(InertTrigFreeQ(v))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Power(v_,m_),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v))),Times(Sqrt(Power($s("vv"),m)),Power(Power($s("vv"),Times(C1D2,m)),CN1),Int(Times($s("uu"),Power($s("vv"),Times(m,p))),x))),And(And(FreeQ(m,x),PositiveIntegerQ(Plus(p,C1D2))),Not(InertTrigFreeQ(v))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Power(v_,m_),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v))),Times(Power($s("vv"),Times(C1D2,m)),Power(Power($s("vv"),m),CN1D2),Int(Times($s("uu"),Power($s("vv"),Times(m,p))),x))),And(And(FreeQ(m,x),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))),Not(InertTrigFreeQ(v))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Power(v_,m_),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v))),Times(Power(Power($s("vv"),m),p),Power(Power($s("vv"),Times(m,p)),CN1),Int(Times($s("uu"),Power($s("vv"),Times(m,p))),x))),And(And(FreeQ(List(m,p),x),Not(IntegerQ(Times(C2,p)))),Not(InertTrigFreeQ(v))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Times(Power(v_,m_DEFAULT),Power(w_,pn_DEFAULT)),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v)),Set($s("ww"),ActivateTrig(w))),Times(Sqrt(Times(Power($s("vv"),m),Power($s("ww"),pn))),Power(Times(Power($s("vv"),Times(C1D2,m)),Power($s("ww"),Times(C1D2,pn))),CN1),Int(Times($s("uu"),Power($s("vv"),Times(m,p)),Power($s("ww"),Times(pn,p))),x))),And(And(FreeQ(List(m,pn),x),PositiveIntegerQ(Plus(p,C1D2))),Or(Not(InertTrigFreeQ(v)),Not(InertTrigFreeQ(w)))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Times(Power(v_,m_DEFAULT),Power(w_,pn_DEFAULT)),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v)),Set($s("ww"),ActivateTrig(w))),Times(Power($s("vv"),Times(C1D2,m)),Power($s("ww"),Times(C1D2,pn)),Power(Times(Power($s("vv"),m),Power($s("ww"),pn)),CN1D2),Int(Times($s("uu"),Power($s("vv"),Times(m,p)),Power($s("ww"),Times(pn,p))),x))),And(And(FreeQ(List(m,pn),x),NegativeIntegerQ(Plus(p,Times(CN1,C1D2)))),Or(Not(InertTrigFreeQ(v)),Not(InertTrigFreeQ(w)))))),
ISetDelayed(Int(Times(u_DEFAULT,Power(Times(Power(v_,m_DEFAULT),Power(w_,pn_DEFAULT)),p_)),x_Symbol),
    Condition(Module(List(Set($s("uu"),ActivateTrig(u)),Set($s("vv"),ActivateTrig(v)),Set($s("ww"),ActivateTrig(w))),Times(Power(Times(Power($s("vv"),m),Power($s("ww"),pn)),p),Power(Times(Power($s("vv"),Times(m,p)),Power($s("ww"),Times(pn,p))),CN1),Int(Times($s("uu"),Power($s("vv"),Times(m,p)),Power($s("ww"),Times(pn,p))),x))),And(And(FreeQ(List(m,pn,p),x),Not(IntegerQ(Times(C2,p)))),Or(Not(InertTrigFreeQ(v)),Not(InertTrigFreeQ(w)))))),
ISetDelayed(Int(u_,x_Symbol),
    Condition(Module(List(Set(v,ExpandTrig(u,x))),Condition(Int(v,x),SumQ(v))),Not(InertTrigFreeQ(u)))),
ISetDelayed(Int(u_,x_Symbol),
    Condition(Module(List(Set(w,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(SubstFor(Power(Plus(C1,Times(Sqr(FreeFactors(Tan(Times(C1D2,FunctionOfTrig(u,x))),x)),Sqr(x))),CN1),Times(Tan(Times(C1D2,FunctionOfTrig(u,x))),Power(FreeFactors(Tan(Times(C1D2,FunctionOfTrig(u,x))),x),CN1)),u,x),x)))),Condition(Module(List(Set(v,FunctionOfTrig(u,x)),pd),CompoundExpression(Set(pd,FreeFactors(Tan(Times(C1D2,v)),x)),Dist(Times(C2,pd,Power(Coefficient(v,x,C1),CN1)),Subst(Int(SubstFor(Power(Plus(C1,Times(Sqr(pd),Sqr(x))),CN1),Times(Tan(Times(C1D2,v)),Power(pd,CN1)),u,x),x),x,Times(Tan(Times(C1D2,v)),Power(pd,CN1))),x))),FreeQ(w,$s("Int")))),And(InverseFunctionFreeQ(u,x),NotFalseQ(FunctionOfTrig(u,x))))),
ISetDelayed(Int(u_,x_Symbol),
    Condition(Module(List(Set(v,ActivateTrig(u))),$(Defer($s("Int")),v,x)),Not(InertTrigFreeQ(u))))
  );
}
