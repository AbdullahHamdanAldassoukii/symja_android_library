package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules77 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power(Times($($s("§sin"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),pe_DEFAULT),m_)),x_Symbol),
    Condition(Plus(Times(pe,Power(Times(pe,Sin(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C1))),Power(Times(b,pd,Plus(m,Times(CN1,C1))),CN1)),Times(CN1,Sqr(pe),Power(a,CN1),Int(Times(Sqr(Cos(Plus(c,Times(pd,x)))),Power(Times(pe,Sin(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C2)))),x))),And(And(FreeQ(List(a,b,c,pd,pe,m),x),ZeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),NonzeroQ(Plus(m,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power(Times($($s("§cos"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),pe_DEFAULT),m_)),x_Symbol),
    Condition(Plus(Times(CN1,pe,Power(Times(pe,Cos(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C1))),Power(Times(b,pd,Plus(m,Times(CN1,C1))),CN1)),Times(CN1,Sqr(pe),Power(a,CN1),Int(Times(Sqr(Sin(Plus(c,Times(pd,x)))),Power(Times(pe,Cos(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C2)))),x))),And(And(FreeQ(List(a,b,c,pd,pe,m),x),ZeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),NonzeroQ(Plus(m,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§sin"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(pd,CN1),Subst(Int(Times(x,Power(Plus(C1,Times(CN1,Sqr(x))),Times(C1D2,Plus(m,Times(CN1,C1)))),Power(Plus(b,Times(a,x)),CN1)),x),x,Cos(Plus(c,Times(pd,x))))),And(FreeQ(List(a,b,c,pd),x),OddQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§cos"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,CN1),Subst(Int(Times(x,Power(Plus(C1,Times(CN1,Sqr(x))),Times(C1D2,Plus(m,Times(CN1,C1)))),Power(Plus(b,Times(a,x)),CN1)),x),x,Sin(Plus(c,Times(pd,x))))),And(FreeQ(List(a,b,c,pd),x),OddQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power(Times($($s("§sin"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),pe_DEFAULT),m_)),x_Symbol),
    Condition(Plus(Times(b,pe,Power(Times(pe,Sin(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C1))),Power(Times(pd,Sqr(a),Plus(m,Times(CN1,C1))),CN1)),Times(CN1,Sqr(pe),Power(a,CN1),Int(Times(Sqr(Cos(Plus(c,Times(pd,x)))),Power(Times(pe,Sin(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C2)))),x)),Times(Sqr(pe),Plus(Sqr(a),Times(CN1,Sqr(b))),Power(a,CN2),Int(Times(Power(Times(pe,Sin(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,Sec(Plus(c,Times(pd,x))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),NonzeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),Not(OddQ(m))),RationalQ(m)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power(Times($($s("§cos"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),pe_DEFAULT),m_)),x_Symbol),
    Condition(Plus(Times(CN1,b,pe,Power(Times(pe,Cos(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C1))),Power(Times(pd,Sqr(a),Plus(m,Times(CN1,C1))),CN1)),Times(CN1,Sqr(pe),Power(a,CN1),Int(Times(Sqr(Sin(Plus(c,Times(pd,x)))),Power(Times(pe,Cos(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C2)))),x)),Times(Sqr(pe),Plus(Sqr(a),Times(CN1,Sqr(b))),Power(a,CN2),Int(Times(Power(Times(pe,Cos(Plus(c,Times(pd,x)))),Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,Csc(Plus(c,Times(pd,x))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),NonzeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),Not(OddQ(m))),RationalQ(m)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power(Times($($s("§sin"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),pe_DEFAULT),m_)),x_Symbol),
    Condition(Plus(Times(CN1,b,Power(Times(pe,Sin(Plus(c,Times(pd,x)))),Plus(m,C1)),Power(Times(pd,pe,Plus(m,C1),Plus(Sqr(a),Times(CN1,Sqr(b)))),CN1)),Times(a,Power(Plus(Sqr(a),Times(CN1,Sqr(b))),CN1),Int(Times(Sqr(Cos(Plus(c,Times(pd,x)))),Power(Times(pe,Sin(Plus(c,Times(pd,x)))),m)),x)),Times(Sqr(a),Power(Times(Sqr(pe),Plus(Sqr(a),Times(CN1,Sqr(b)))),CN1),Int(Times(Power(Times(pe,Sin(Plus(c,Times(pd,x)))),Plus(m,C2)),Power(Plus(a,Times(b,Sec(Plus(c,Times(pd,x))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),NonzeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),Not(OddQ(m))),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power(Times($($s("§cos"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),pe_DEFAULT),m_)),x_Symbol),
    Condition(Plus(Times(b,Power(Times(pe,Cos(Plus(c,Times(pd,x)))),Plus(m,C1)),Power(Times(pd,pe,Plus(m,C1),Plus(Sqr(a),Times(CN1,Sqr(b)))),CN1)),Times(a,Power(Plus(Sqr(a),Times(CN1,Sqr(b))),CN1),Int(Times(Sqr(Sin(Plus(c,Times(pd,x)))),Power(Times(pe,Cos(Plus(c,Times(pd,x)))),m)),x)),Times(Sqr(a),Power(Times(Sqr(pe),Plus(Sqr(a),Times(CN1,Sqr(b)))),CN1),Int(Times(Power(Times(pe,Cos(Plus(c,Times(pd,x)))),Plus(m,C2)),Power(Plus(a,Times(b,Csc(Plus(c,Times(pd,x))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd,pe),x),NonzeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),Not(OddQ(m))),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),pn_DEFAULT),Sqr($($s("§sin"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)))),x_Symbol),
    Condition(Int(Times(Plus(C1,Times(CN1,Sqr(Cos(Plus(c,Times(pd,x)))))),Power(Plus(b,Times(a,Cos(Plus(c,Times(pd,x))))),pn),Power(Power(Cos(Plus(c,Times(pd,x))),pn),CN1)),x),And(FreeQ(List(a,b,c,pd),x),IntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),pn_DEFAULT),Sqr($($s("§cos"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)))),x_Symbol),
    Condition(Int(Times(Plus(C1,Times(CN1,Sqr(Sin(Plus(c,Times(pd,x)))))),Power(Plus(b,Times(a,Sin(Plus(c,Times(pd,x))))),pn),Power(Power(Sin(Plus(c,Times(pd,x))),pn),CN1)),x),And(FreeQ(List(a,b,c,pd),x),IntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),pn_DEFAULT),Power($($s("§sin"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(C1,Times(CN1,Sqr(Cos(Plus(c,Times(pd,x)))))),Times(C1D2,m)),Power(Plus(b,Times(a,Cos(Plus(c,Times(pd,x))))),pn),Power(Power(Cos(Plus(c,Times(pd,x))),pn),CN1)),x),x),And(And(FreeQ(List(a,b,c,pd),x),IntegerQ(pn)),EvenQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),pn_DEFAULT),Power($($s("§cos"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(C1,Times(CN1,Sqr(Sin(Plus(c,Times(pd,x)))))),Times(C1D2,m)),Power(Plus(b,Times(a,Sin(Plus(c,Times(pd,x))))),pn),Power(Power(Sin(Plus(c,Times(pd,x))),pn),CN1)),x),x),And(And(FreeQ(List(a,b,c,pd),x),IntegerQ(pn)),EvenQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§tan"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(a,CN1),Int(Power(Tan(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2))),x)),Times(Power(b,CN1),Int(Times(Sec(Plus(c,Times(pd,x))),Power(Tan(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2)))),x))),And(And(FreeQ(List(a,b,c,pd,m),x),ZeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),NonzeroQ(Plus(m,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§cot"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(a,CN1),Int(Power(Cot(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2))),x)),Times(Power(b,CN1),Int(Times(Csc(Plus(c,Times(pd,x))),Power(Cot(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2)))),x))),And(And(FreeQ(List(a,b,c,pd,m),x),ZeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),NonzeroQ(Plus(m,Times(CN1,C1)))))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§tan"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(pd,CN1),Subst(Int(Times(Power(Plus(C1,Times(CN1,Sqr(x))),Times(C1D2,Plus(m,Times(CN1,C1)))),Power(Times(Power(x,Plus(m,Times(CN1,C1))),Plus(b,Times(a,x))),CN1)),x),x,Cos(Plus(c,Times(pd,x))))),And(FreeQ(List(a,b,c,pd),x),OddQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§cot"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(pd,CN1),Subst(Int(Times(Power(Plus(C1,Times(CN1,Sqr(x))),Times(C1D2,Plus(m,Times(CN1,C1)))),Power(Times(Power(x,Plus(m,Times(CN1,C1))),Plus(b,Times(a,x))),CN1)),x),x,Sin(Plus(c,Times(pd,x))))),And(FreeQ(List(a,b,c,pd),x),OddQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§tan"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,a,Power(b,CN2),Int(Power(Tan(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2))),x)),Times(Power(b,CN1),Int(Times(Sec(Plus(c,Times(pd,x))),Power(Tan(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2)))),x)),Times(Plus(Sqr(a),Times(CN1,Sqr(b))),Power(b,CN2),Int(Times(Power(Tan(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,Sec(Plus(c,Times(pd,x))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),Not(OddQ(m))),RationalQ(m)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§cot"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,a,Power(b,CN2),Int(Power(Cot(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2))),x)),Times(Power(b,CN1),Int(Times(Csc(Plus(c,Times(pd,x))),Power(Cot(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2)))),x)),Times(Plus(Sqr(a),Times(CN1,Sqr(b))),Power(b,CN2),Int(Times(Power(Cot(Plus(c,Times(pd,x))),Plus(m,Times(CN1,C2))),Power(Plus(a,Times(b,Csc(Plus(c,Times(pd,x))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),Not(OddQ(m))),RationalQ(m)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§tan"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(a,Power(Plus(Sqr(a),Times(CN1,Sqr(b))),CN1),Int(Power(Tan(Plus(c,Times(pd,x))),m),x)),Times(CN1,b,Power(Plus(Sqr(a),Times(CN1,Sqr(b))),CN1),Int(Times(Sec(Plus(c,Times(pd,x))),Power(Tan(Plus(c,Times(pd,x))),m)),x)),Times(Sqr(b),Power(Plus(Sqr(a),Times(CN1,Sqr(b))),CN1),Int(Times(Power(Tan(Plus(c,Times(pd,x))),Plus(m,C2)),Power(Plus(a,Times(b,Sec(Plus(c,Times(pd,x))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),Not(OddQ(m))),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),CN1),Power($($s("§cot"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Plus(Times(a,Power(Plus(Sqr(a),Times(CN1,Sqr(b))),CN1),Int(Power(Cot(Plus(c,Times(pd,x))),m),x)),Times(CN1,b,Power(Plus(Sqr(a),Times(CN1,Sqr(b))),CN1),Int(Times(Csc(Plus(c,Times(pd,x))),Power(Cot(Plus(c,Times(pd,x))),m)),x)),Times(Sqr(b),Power(Plus(Sqr(a),Times(CN1,Sqr(b))),CN1),Int(Times(Power(Cot(Plus(c,Times(pd,x))),Plus(m,C2)),Power(Plus(a,Times(b,Csc(Plus(c,Times(pd,x))))),CN1)),x))),And(And(And(And(FreeQ(List(a,b,c,pd),x),NonzeroQ(Plus(Sqr(a),Times(CN1,Sqr(b))))),Not(OddQ(m))),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),pn_DEFAULT),Sqr($($s("§sin"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)))),x_Symbol),
    Condition(Int(Times(Plus(C1,Times(CN1,Sqr(Cos(Plus(c,Times(pd,x)))))),Power(Plus(b,Times(a,Cos(Plus(c,Times(pd,x))))),pn),Power(Power(Cos(Plus(c,Times(pd,x))),pn),CN1)),x),And(FreeQ(List(a,b,c,pd),x),IntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),pn_DEFAULT),Sqr($($s("§cos"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)))),x_Symbol),
    Condition(Int(Times(Plus(C1,Times(CN1,Sqr(Sin(Plus(c,Times(pd,x)))))),Power(Plus(b,Times(a,Sin(Plus(c,Times(pd,x))))),pn),Power(Power(Sin(Plus(c,Times(pd,x))),pn),CN1)),x),And(FreeQ(List(a,b,c,pd),x),IntegerQ(pn)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§sec"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),pn_DEFAULT),Power($($s("§tan"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(C1,Times(CN1,Sqr(Cos(Plus(c,Times(pd,x)))))),Times(C1D2,m)),Power(Plus(b,Times(a,Cos(Plus(c,Times(pd,x))))),pn),Power(Power(Cos(Plus(c,Times(pd,x))),Plus(m,pn)),CN1)),x),x),And(And(FreeQ(List(a,b,c,pd),x),IntegerQ(pn)),EvenQ(m)))),
ISetDelayed(Int(Times(Power(Plus(Times($($s("§csc"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),b_DEFAULT),a_),pn_DEFAULT),Power($($s("§cot"),Plus(Times(x_,pd_DEFAULT),c_DEFAULT)),m_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(C1,Times(CN1,Sqr(Sin(Plus(c,Times(pd,x)))))),Times(C1D2,m)),Power(Plus(b,Times(a,Sin(Plus(c,Times(pd,x))))),pn),Power(Power(Sin(Plus(c,Times(pd,x))),Plus(m,pn)),CN1)),x),x),And(And(FreeQ(List(a,b,c,pd),x),IntegerQ(pn)),EvenQ(m))))
  );
}
