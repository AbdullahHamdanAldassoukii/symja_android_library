package org.matheclipse.core.integrate.rubi42;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi42.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi42.UtilityFunctions.*;

import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.core.interfaces.ISymbol;
/** 
 * IntegrationRules rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntegrationRulesForExpressionsInvolvingAlgebraicBinomialsOfTheFollowingForms0 { 
  public static IAST RULES = List( 
SetDelayed(Int(Times(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Plus(Times(a,Power(x,m)),Times(b,Power(x,Plus(m,n)))),x),FreeQ(List(a,b,m,n),x))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Log(RemoveContent(Plus(a,Times(b,Power(x,n))),x)),Power(Times(b,n),CN1)),And(FreeQ(List(a,b,m,n),x),ZeroQ(Plus(m,Times(CN1,n),C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(b,n,Plus(p,C1)),CN1)),And(And(FreeQ(List(a,b,m,n,p),x),ZeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(p,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Times(CN2,ArcTanh(Plus(C1,Times(C2,b,Power(x,n),Power(a,CN1)))),Power(Times(a,n),CN1)),And(And(FreeQ(List(a,b,n),x),PosQ(n)),Or(RationalQ(a),RationalQ(Times(b,Power(a,CN1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Plus(Times(Log(x),Power(a,CN1)),Times(CN1,Log(RemoveContent(Plus(a,Times(b,Power(x,n))),x)),Power(Times(a,n),CN1))),And(And(FreeQ(List(a,b,n),x),PosQ(n)),Not(Or(RationalQ(a),RationalQ(Times(b,Power(a,CN1)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Int(Times(Power(x,Plus(Times(CN1,n),Times(CN1,C1))),Power(Plus(b,Times(a,Power(x,Times(CN1,n)))),CN1)),x),And(FreeQ(List(a,b,n),x),NegQ(n)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1)),And(And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),ZeroQ(Plus(m,Times(n,p),n,C1))),NonzeroQ(Plus(m,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(Times(Power(x,Plus(m,Times(n,p))),Power(Plus(b,Times(a,Power(x,Times(CN1,n)))),p)),x),And(And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),NegQ(n)),IntegerQ(p)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(n,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(n,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,x)),p)),x),x,Power(x,n))),And(And(And(And(And(FreeQ(List(a,b,m,p),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),RationalQ(n)),Less(Less(CN1,n),C0)),Not(IntegerQ(p))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),n))),Condition(Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,Times(n,Power(g,CN1))))),p)),x),x,Power(x,g))),Unequal(g,C1))),And(And(And(And(FreeQ(List(a,b,p),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),NegQ(n)),RationalQ(m,n)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(CN1,Subst(Int(Times(Power(Plus(a,Times(b,Power(x,Times(CN1,n)))),p),Power(Power(x,Plus(m,C2)),CN1)),x),x,Power(x,CN1))),And(And(And(And(And(FreeQ(List(a,b,p),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),NegQ(n)),Not(IntegerQ(p))),IntegersQ(m,n)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Plus(a,Times(b,Power(x,n))),p),Power(Times(Power(x,Times(n,p)),Power(Plus(b,Times(a,Power(Power(x,n),CN1))),p)),CN1),Int(Times(Power(x,Plus(m,Times(n,p))),Power(Plus(b,Times(a,Power(x,Times(CN1,n)))),p)),x)),And(And(And(And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),NegQ(n)),Not(IntegerQ(p))),Not(IntegersQ(m,n))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C3),$p(b,true)),$p(a)),CN1),$p(x)),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),C3))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),C3)))),Plus(Times(CN1,Power(r,C2),Power(Times(C3,a,s),CN1),Int(Power(Plus(r,Times(s,x)),CN1),x)),Times(Power(r,C2),Power(Times(C3,a,s),CN1),Int(Times(Plus(r,Times(s,x)),Power(Plus(Power(r,C2),Times(CN1,r,s,x),Times(Power(s,C2),Power(x,C2))),CN1)),x)))),And(FreeQ(List(a,b),x),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C3),$p(b,true)),$p(a)),CN1),$p(x)),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(CN1,a,Power(b,CN1)),C3))),Set(s,Denominator(Rt(Times(CN1,a,Power(b,CN1)),C3)))),Plus(Times(Power(r,C2),Power(Times(C3,a,s),CN1),Int(Power(Plus(r,Times(CN1,s,x)),CN1),x)),Times(CN1,Power(r,C2),Power(Times(C3,a,s),CN1),Int(Times(Plus(r,Times(CN1,s,x)),Power(Plus(Power(r,C2),Times(r,s,x),Times(Power(s,C2),Power(x,C2))),CN1)),x)))),And(FreeQ(List(a,b),x),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),n))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),n)))),Int(Plus(Times(CN1,Power(Times(CN1,r),Plus(m,C1)),Power(Times(a,n,Power(s,m),Plus(r,Times(s,x))),CN1)),Sum(Times(C2,Power(r,Plus(m,C1)),Plus(Times(r,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),m,Pi,Power(n,CN1)))),Times(CN1,s,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Plus(m,C1),Pi,Power(n,CN1))),x)),Power(Times(a,n,Power(s,m),Plus(Power(r,C2),Times(CN1,C2,r,s,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Pi,Power(n,CN1))),x),Times(Power(s,C2),Power(x,C2)))),CN1)),List(k,C1,Times(C1D2,Plus(n,Times(CN1,C1)))))),x)),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Less(Less(C0,Plus(m,C1)),n)),Equal(Gcd(Plus(m,C1),n),C1)),IntegerQ(Times(C1D2,Plus(n,Times(CN1,C1))))),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(CN1,a,Power(b,CN1)),n))),Set(s,Denominator(Rt(Times(CN1,a,Power(b,CN1)),n)))),Int(Plus(Times(Power(r,Plus(m,C1)),Power(Times(a,n,Power(s,m),Plus(r,Times(CN1,s,x))),CN1)),Times(CN1,Sum(Times(C2,Power(Times(CN1,r),Plus(m,C1)),Plus(Times(r,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),m,Pi,Power(n,CN1)))),Times(s,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Plus(m,C1),Pi,Power(n,CN1))),x)),Power(Times(a,n,Power(s,m),Plus(Power(r,C2),Times(C2,r,s,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Pi,Power(n,CN1))),x),Times(Power(s,C2),Power(x,C2)))),CN1)),List(k,C1,Times(C1D2,Plus(n,Times(CN1,C1))))))),x)),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Less(Less(C0,Plus(m,C1)),n)),Equal(Gcd(Plus(m,C1),n),C1)),IntegerQ(Times(C1D2,Plus(n,Times(CN1,C1))))),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),Times(C1D2,n)))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),Times(C1D2,n))))),Plus(Times(CN2,Power(Times(CN1,r),Plus(Times(C1D2,m),C1)),Power(Times(a,n,Power(s,Times(C1D2,m))),CN1),Int(Power(Plus(r,Times(s,Power(x,C2))),CN1),x)),Times(C4,Power(r,Plus(Times(C1D2,m),C1)),Power(Times(a,n,Power(s,Times(C1D2,m))),CN1),Int(Sum(Times(Plus(Times(r,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),m,Pi,Power(n,CN1)))),Times(CN1,s,Cos(Times(Plus(Times(C2,k),Times(CN1,C1)),Plus(m,C2),Pi,Power(n,CN1))),Power(x,C2))),Power(Plus(Power(r,C2),Times(CN1,C2,r,s,Cos(Times(C2,Plus(Times(C2,k),Times(CN1,C1)),Pi,Power(n,CN1))),Power(x,C2)),Times(Power(s,C2),Power(x,C4))),CN1)),List(k,C1,Times(C1D4,Plus(n,Times(CN1,C2))))),x)))),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Less(Less(C0,Plus(m,C1)),n)),Equal(Gcd(Plus(m,C1),n),C1)),IntegerQ(Times(C1D4,Plus(n,Times(CN1,C2))))),PosQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(CN1,a,Power(b,CN1)),Times(C1D2,n)))),Set(s,Denominator(Rt(Times(CN1,a,Power(b,CN1)),Times(C1D2,n))))),Plus(Times(C2,Power(r,Plus(Times(C1D2,m),C1)),Power(Times(a,n,Power(s,Times(C1D2,m))),CN1),Int(Power(Plus(r,Times(CN1,s,Power(x,C2))),CN1),x)),Times(C4,Power(r,Plus(Times(C1D2,m),C1)),Power(Times(a,n,Power(s,Times(C1D2,m))),CN1),Int(Sum(Times(Plus(Times(r,Cos(Times(C2,k,m,Pi,Power(n,CN1)))),Times(CN1,s,Cos(Times(C2,k,Plus(m,C2),Pi,Power(n,CN1))),Power(x,C2))),Power(Plus(Power(r,C2),Times(CN1,C2,r,s,Cos(Times(C4,k,Pi,Power(n,CN1))),Power(x,C2)),Times(Power(s,C2),Power(x,C4))),CN1)),List(k,C1,Times(C1D4,Plus(n,Times(CN1,C2))))),x)))),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Less(Less(C0,Plus(m,C1)),n)),Equal(Gcd(Plus(m,C1),n),C1)),IntegerQ(Times(C1D4,Plus(n,Times(CN1,C2))))),NegQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C4),$p(b,true)),$p(a)),CN1),Power($p(x),C2)),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),C2))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),C2)))),Plus(Times(Power(Times(C2,s),CN1),Int(Times(Plus(r,Times(s,Power(x,C2))),Power(Plus(a,Times(b,Power(x,C4))),CN1)),x)),Times(CN1,Power(Times(C2,s),CN1),Int(Times(Plus(r,Times(CN1,s,Power(x,C2))),Power(Plus(a,Times(b,Power(x,C4))),CN1)),x)))),And(FreeQ(List(a,b),x),Or(PositiveQ(Times(a,Power(b,CN1))),And(And(PosQ(Times(a,Power(b,CN1))),NonsumQ(a)),NonsumQ(b)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),C4),$p(b,true)),$p(a)),CN1),Power($p(x),C2)),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(CN1,a,Power(b,CN1)),C2))),Set(s,Denominator(Rt(Times(CN1,a,Power(b,CN1)),C2)))),Plus(Times(s,Power(Times(C2,b),CN1),Int(Power(Plus(r,Times(s,Power(x,C2))),CN1),x)),Times(CN1,s,Power(Times(C2,b),CN1),Int(Power(Plus(r,Times(CN1,s,Power(x,C2))),CN1),x)))),And(FreeQ(List(a,b),x),Not(PositiveQ(Times(a,Power(b,CN1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(a,Power(b,CN1)),C4))),Set(s,Denominator(Rt(Times(a,Power(b,CN1)),C4)))),Plus(Times(Power(s,C3),Power(Times(C2,Sqrt(C2),b,r),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1D4,n))),Power(Plus(Power(r,C2),Times(CN1,Sqrt(C2),r,s,Power(x,Times(C1D4,n))),Times(Power(s,C2),Power(x,Times(C1D2,n)))),CN1)),x)),Times(CN1,Power(s,C3),Power(Times(C2,Sqrt(C2),b,r),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1D4,n))),Power(Plus(Power(r,C2),Times(Sqrt(C2),r,s,Power(x,Times(C1D4,n))),Times(Power(s,C2),Power(x,Times(C1D2,n)))),CN1)),x)))),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Less(Less(C0,Plus(m,C1)),n)),Equal(Gcd(Plus(m,C1),n),C1)),IntegerQ(Times(C1D4,n))),PositiveQ(Times(a,Power(b,CN1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(CN1,a,Power(b,CN1)),C2))),Set(s,Denominator(Rt(Times(CN1,a,Power(b,CN1)),C2)))),Plus(Times(r,Power(Times(C2,a),CN1),Int(Times(Power(x,m),Power(Plus(r,Times(s,Power(x,Times(C1D2,n)))),CN1)),x)),Times(r,Power(Times(C2,a),CN1),Int(Times(Power(x,m),Power(Plus(r,Times(CN1,s,Power(x,Times(C1D2,n)))),CN1)),x)))),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Less(Less(C0,m),Times(C1D2,n))),Equal(Gcd(Plus(m,C1),n),C1)),IntegerQ(Times(C1D4,n))),Not(PositiveQ(Times(a,Power(b,CN1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Module(List(Set(r,Numerator(Rt(Times(CN1,a,Power(b,CN1)),C2))),Set(s,Denominator(Rt(Times(CN1,a,Power(b,CN1)),C2)))),Plus(Times(s,Power(Times(C2,b),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1D2,n))),Power(Plus(r,Times(s,Power(x,Times(C1D2,n)))),CN1)),x)),Times(CN1,s,Power(Times(C2,b),CN1),Int(Times(Power(x,Plus(m,Times(CN1,C1D2,n))),Power(Plus(r,Times(CN1,s,Power(x,Times(C1D2,n)))),CN1)),x)))),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n)),And(LessEqual(Times(C1D2,n),m),Less(m,n))),Equal(Gcd(Plus(m,C1),n),C1)),IntegerQ(Times(C1D4,n))),Not(PositiveQ(Times(a,Power(b,CN1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),n))),Condition(Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,Times(n,Power(g,CN1))))),CN1)),x),x,Power(x,g))),Unequal(g,C1))),And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Less(Less(C0,Plus(m,C1)),n)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Int(PolynomialDivide(Power(x,m),Plus(a,Times(b,Power(x,n))),x),x),And(And(FreeQ(List(a,b),x),IntegersQ(m,n)),Less(Less(C0,Times(C2,n)),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,n),C1)),Power(Times(b,Plus(m,Times(CN1,n),C1)),CN1)),Times(CN1,a,Power(b,CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(x,n))),CN1)),x))),And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Less(Less(C0,n),Plus(m,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,b,Power(a,CN1),Int(Times(Power(x,Plus(m,n)),Power(Plus(a,Times(b,Power(x,n))),CN1)),x))),And(And(And(FreeQ(List(a,b),x),RationalQ(m,n)),Greater(n,C0)),Less(m,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set($s("mn"),Simplify(Plus(m,Times(CN1,n))))),Plus(Times(Power(x,Plus($s("mn"),C1)),Power(Times(b,Plus($s("mn"),C1)),CN1)),Times(CN1,a,Power(b,CN1),Int(Times(Power(x,$s("mn")),Power(Plus(a,Times(b,Power(x,n))),CN1)),x)))),And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,C1))),SumSimplerQ(m,Times(CN1,n))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,b,Power(a,CN1),Int(Times(Power(x,Simplify(Plus(m,n))),Power(Plus(a,Times(b,Power(x,n))),CN1)),x))),And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,C1))),SumSimplerQ(m,n)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Plus(m,C1),CN1),Subst(Int(Power(Plus(a,Times(b,Power(x,Simplify(Times(n,Power(Plus(m,C1),CN1)))))),CN1),x),x,Power(x,Plus(m,C1)))),And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,C1))),PositiveIntegerQ(Simplify(Times(n,Power(Plus(m,C1),CN1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(CN1,Power(Plus(m,C1),CN1),Subst(Int(Power(Times(Power(x,C2),Plus(a,Times(b,Power(x,Simplify(Times(CN1,n,Power(Plus(m,C1),CN1))))))),CN1),x),x,Power(x,Times(CN1,Plus(m,C1))))),And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,C1))),NegativeIntegerQ(Simplify(Plus(Times(n,Power(Plus(m,C1),CN1)),C1)))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),CN1),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),CN1),Hypergeometric2F1(C1,Times(Plus(m,C1),Power(n,CN1)),Plus(Times(Plus(m,C1),Power(n,CN1)),C1),Times(CN1,b,Power(x,n),Power(a,CN1)))),And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,C1))),Not(NegativeIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),CN1)),$p(x,SymbolHead)),
    Condition(Module(List(Set(k,Denominator(p))),Times(CN1,k,Power(n,CN1),Subst(Int(Times(Power(x,Plus(Times(k,Plus(p,C1)),Times(CN1,C1))),Power(Plus(a,Times(CN1,Power(x,k))),CN1)),x),x,Power(Plus(a,Times(b,Power(x,n))),Power(k,CN1))))),And(And(And(FreeQ(List(a,b,n),x),PosQ(n)),RationalQ(p)),Less(Less(CN1,p),C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(Plus(m,C1),CN1),Subst(Int(Power(Plus(a,Times(b,Power(x,Simplify(Times(n,Power(Plus(m,C1),CN1)))))),p),x),x,Power(x,Plus(m,C1)))),And(And(And(And(And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),PosQ(n)),RationalQ(p)),Less(Less(CN1,p),C0)),NonzeroQ(Plus(m,C1))),PositiveIntegerQ(Simplify(Times(n,Power(Plus(m,C1),CN1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(CN1,Power(Plus(m,C1),CN1),Subst(Int(Times(Power(Plus(a,Times(b,Power(x,Simplify(Times(CN1,n,Power(Plus(m,C1),CN1)))))),p),Power(Power(x,C2),CN1)),x),x,Power(x,Times(CN1,Plus(m,C1))))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),PosQ(n)),RationalQ(p)),Less(Less(CN1,p),C0)),NonzeroQ(Plus(m,C1))),NegativeIntegerQ(Simplify(Times(n,Power(Plus(m,C1),CN1))))),NonzeroQ(Plus(m,C2))))),
SetDelayed(Int(Times(Plus(Times($p(d,true),$p(x)),$p(c,true)),Power(Plus(Times(Power($p(x),C3),$p(b,true)),$p(a)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Plus(Power(a,C1D3),Times(Power(b,C1D3),x))),Sqrt(Plus(Times(Power(a,C1D3),Sqrt(Times(CN3,Power(b,QQ(2L,3L))))),Times(Power(a,C1D3),Power(b,C1D3)),Times(CN1,C2,Power(b,QQ(2L,3L)),x))),Sqrt(Plus(Times(Power(a,C1D3),Sqrt(Times(CN3,Power(b,QQ(2L,3L))))),Times(CN1,Power(a,C1D3),Power(b,C1D3)),Times(C2,Power(b,QQ(2L,3L)),x))),Power(Sqrt(Plus(a,Times(b,Power(x,C3)))),CN1),Int(Times(Plus(c,Times(d,x)),Power(Times(Sqrt(Plus(Power(a,C1D3),Times(Power(b,C1D3),x))),Sqrt(Plus(Times(Power(a,C1D3),Sqrt(Times(CN3,Power(b,QQ(2L,3L))))),Times(Power(a,C1D3),Power(b,C1D3)),Times(CN1,C2,Power(b,QQ(2L,3L)),x))),Sqrt(Plus(Times(Power(a,C1D3),Sqrt(Times(CN3,Power(b,QQ(2L,3L))))),Times(CN1,Power(a,C1D3),Power(b,C1D3)),Times(C2,Power(b,QQ(2L,3L)),x)))),CN1)),x)),And(FreeQ(List(a,b,c,d),x),PosQ(b)))),
SetDelayed(Int(Times(Plus(Times($p(d,true),$p(x)),$p(c,true)),Power(Plus(Times(Power($p(x),C3),$p(b,true)),$p(a)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Plus(Power(a,C1D3),Times(CN1,Power(Times(CN1,b),C1D3),x))),Sqrt(Plus(Times(Power(a,C1D3),Sqrt(Times(CN3,Power(Times(CN1,b),QQ(2L,3L))))),Times(CN1,Power(a,C1D3),Power(Times(CN1,b),C1D3)),Times(CN1,C2,Power(Times(CN1,b),QQ(2L,3L)),x))),Sqrt(Plus(Times(Power(a,C1D3),Sqrt(Times(CN3,Power(Times(CN1,b),QQ(2L,3L))))),Times(Power(a,C1D3),Power(Times(CN1,b),C1D3)),Times(C2,Power(Times(CN1,b),QQ(2L,3L)),x))),Power(Sqrt(Plus(a,Times(b,Power(x,C3)))),CN1),Int(Times(Plus(c,Times(d,x)),Power(Times(Sqrt(Plus(Power(a,C1D3),Times(CN1,Power(Times(CN1,b),C1D3),x))),Sqrt(Plus(Times(Power(a,C1D3),Sqrt(Times(CN3,Power(Times(CN1,b),QQ(2L,3L))))),Times(CN1,Power(a,C1D3),Power(Times(CN1,b),C1D3)),Times(CN1,C2,Power(Times(CN1,b),QQ(2L,3L)),x))),Sqrt(Plus(Times(Power(a,C1D3),Sqrt(Times(CN3,Power(Times(CN1,b),QQ(2L,3L))))),Times(Power(a,C1D3),Power(Times(CN1,b),C1D3)),Times(C2,Power(Times(CN1,b),QQ(2L,3L)),x)))),CN1)),x)),And(FreeQ(List(a,b,c,d),x),NegQ(b)))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c,true)),Power(Plus(Times(Power($p(x),C4),$p(b,true)),$p(a)),CN1D2)),$p(x,SymbolHead)),
    Condition(Plus(Times(d,Power(Times(Sqrt(a),Power(Rt(Times(CN1,b,Power(a,CN1)),C4),C3)),CN1),EllipticE(ArcSin(Times(Rt(Times(CN1,b,Power(a,CN1)),C4),x)),CN1)),Times(Plus(Times(c,Rt(Times(CN1,b,Power(a,CN1)),C2)),Times(CN1,d)),Power(Times(Sqrt(a),Power(Rt(Times(CN1,b,Power(a,CN1)),C4),C3)),CN1),EllipticF(ArcSin(Times(Rt(Times(CN1,b,Power(a,CN1)),C4),x)),CN1))),And(FreeQ(List(a,b,c,d),x),PositiveQ(a)))),
SetDelayed(Int(Times(Plus(Times(Power($p(x),C2),$p(d,true)),$p(c,true)),Power(Plus(Times(Power($p(x),C4),$p(b,true)),$p(a)),CN1D2)),$p(x,SymbolHead)),
    Condition(Times(Sqrt(Times(Plus(a,Times(b,Power(x,C4))),Power(a,CN1))),Power(Sqrt(Plus(a,Times(b,Power(x,C4)))),CN1),Int(Times(Plus(c,Times(d,Power(x,C2))),Power(Sqrt(Plus(C1,Times(b,Power(x,C4),Power(a,CN1)))),CN1)),x)),And(FreeQ(List(a,b,c,d),x),Not(PositiveQ(a))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,Times(CN1,n),C1)),Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(b,Plus(m,Times(n,p),C1)),CN1)),Times(CN1,a,Plus(m,Times(CN1,n),C1),Power(Times(b,Plus(m,Times(n,p),C1)),CN1),Int(Times(Power(x,Plus(m,Times(CN1,n))),Power(Plus(a,Times(b,Power(x,n))),p)),x))),And(And(And(And(And(FreeQ(List(a,b),x),NonzeroQ(Plus(m,Times(n,p),n,C1))),RationalQ(m,n,p)),Greater(n,C0)),Less(Less(CN1,p),C0)),Greater(Plus(m,C1),n)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,b,Plus(m,Times(n,p),n,C1),Power(Times(a,Plus(m,C1)),CN1),Int(Times(Power(x,Plus(m,n)),Power(Plus(a,Times(b,Power(x,n))),p)),x))),And(And(And(And(And(FreeQ(List(a,b),x),NonzeroQ(Plus(m,Times(n,p),n,C1))),RationalQ(m,n,p)),Greater(n,C0)),Less(Less(CN1,p),C0)),Less(Plus(m,C1),C0)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,n))),p)),x),x),And(And(And(And(And(And(FreeQ(List(a,b,m,n),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),PosQ(n)),Not(PositiveIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1)))))),PositiveIntegerQ(p)),Or(Or(Not(IntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))),LessEqual(Plus(Times(ZZ(7L),p),Times(C4,Plus(Simplify(Times(Plus(m,C1),Power(n,CN1))),Times(CN1,C1)))),C0)),Greater(Plus(p,Simplify(Times(Plus(m,C1),Power(n,CN1))),C1),C0))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a,true)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(n,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(n,CN1))),Times(CN1,C1))),Power(Plus(a,Times(b,x)),p)),x),x,Power(x,n))),And(And(And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),PosQ(n)),PositiveIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(n,CN1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(n,CN1))),Times(CN1,C1))),Power(Plus(a,Times(b,x)),p)),x),x,Power(x,n))),And(And(And(And(And(FreeQ(List(a,b,m,n,p),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),PosQ(n)),NegativeIntegerQ(Simplify(Times(Plus(m,C1),Power(n,CN1))))),Or(Not(IntegerQ(p)),And(And(Not(PositiveIntegerQ(n)),Not(NegativeIntegerQ(p))),Or(RationalQ(n),Less(Less(C0,p),Times(CN1,Simplify(Times(Plus(m,C1),Power(n,CN1))))))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Times(Power(n,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(n,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,x)),p)),x),x,Power(x,n))),And(And(And(And(And(And(FreeQ(List(a,b,m,p),x),NonzeroQ(Plus(m,Times(CN1,n),C1))),NonzeroQ(Plus(m,Times(n,p),n,C1))),RationalQ(n)),Less(Less(C0,n),C1)),NonzeroQ(Plus(m,C1))),Not(And(NegativeIntegerQ(p),NegativeIntegerQ(Times(Plus(m,C1),Power(n,CN1)))))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),n))),Condition(Times(Power(g,CN1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,CN1)),Times(CN1,C1))),Power(Plus(a,Times(b,Power(x,Times(n,Power(g,CN1))))),p)),x),x,Power(x,g))),Unequal(g,C1))),And(And(And(And(FreeQ(List(a,b),x),NonzeroQ(Plus(m,Times(n,p),n,C1))),RationalQ(m,n,p)),Less(Less(C0,m),Plus(n,Times(CN1,C1)))),And(LessEqual(CN1,p),Less(p,C0))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Module(List(Set(q,Denominator(p))),Times(q,Power(a,Plus(p,Times(Plus(m,C1),Power(n,CN1)))),Power(n,CN1),Subst(Int(Times(Power(x,Plus(Times(q,Plus(m,C1),Power(n,CN1)),Times(CN1,C1))),Power(Power(Plus(C1,Times(CN1,b,Power(x,q))),Plus(p,Times(Plus(m,C1),Power(n,CN1)),C1)),CN1)),x),x,Times(Power(x,Times(n,Power(q,CN1))),Power(Power(Plus(a,Times(b,Power(x,n))),Power(q,CN1)),CN1))))),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n,p)),Less(Less(CN1,p),C0)),Unequal(p,CN1D2)),IntegerQ(Plus(p,Times(Plus(m,C1),Power(n,CN1))))),CoprimeQ(Plus(m,C1),n)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m))),$p(x,SymbolHead)),
    Condition(Module(List(Set($s("mn"),Simplify(Plus(m,n)))),Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,n))),Plus(p,C1)),Power(Times(a,Plus(m,C1)),CN1)),Times(CN1,b,Plus(m,Times(n,p),n,C1),Power(Times(a,Plus(m,C1)),CN1),Int(Times(Power(x,$s("mn")),Power(Plus(a,Times(b,Power(x,n))),p)),x)))),And(And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n,p)),NonzeroQ(Plus(m,Times(n,p),n,C1))),Greater(n,C0)),Greater(p,C0)),NonzeroQ(Plus(m,C1))),NegativeIntegerQ(Plus(m,Times(n,p),n,C1))))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,n))),p),Power(Plus(m,C1),CN1)),Times(CN1,b,n,p,Power(Plus(m,C1),CN1),Int(Times(Power(x,Plus(m,n)),Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(FreeQ(List(a,b),x),RationalQ(m,n,p)),Unequal(Plus(m,Times(n,p),n,C1),C0)),Greater(n,C0)),Greater(p,C0)),Less(m,CN1)))),
SetDelayed(Int(Times(Power(Plus(Times(Power($p(x),$p(n)),$p(b,true)),$p(a)),$p(p)),Power($p(x),$p(m,true))),$p(x,SymbolHead)),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,Power(x,n))),p),Power(Plus(m,Times(n,p),C1),CN1)),Times(a,n,p,Power(Plus(m,Times(n,p),C1),CN1),Int(Times(Power(x,m),Power(Plus(a,Times(b,Power(x,n))),Plus(p,Times(CN1,C1)))),x))),And(And(And(And(And(FreeQ(List(a,b,m,n),x),RationalQ(p)),NonzeroQ(Plus(m,Times(n,p),n,C1))),PosQ(n)),Greater(p,C0)),NonzeroQ(Plus(m,Times(n,p),C1)))))
  );
}
